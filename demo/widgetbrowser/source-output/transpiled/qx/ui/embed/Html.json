{
  "className": "qx.ui.embed.Html",
  "packageName": "qx.ui.embed",
  "name": "Html",
  "superClass": "qx.ui.core.Widget",
  "interfaces": [],
  "mixins": [
    "qx.ui.core.MNativeOverflow"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 38,
        "column": 0
      },
      "end": {
        "line": 220,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The Html widget embeds plain HTML code into the application\n\n*Example*\n\nHere is a little example of how to use the canvas widget.\n\n<pre class='javascript'>\nvar html = new qx.ui.embed.Html();\nhtml.setHtml(\"<h1>Hello World</h1>\");\n</pre>\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/html.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 54,
        "column": 2
      },
      "end": {
        "line": 61,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "html {String} Initial HTML content",
          "paramName": "html",
          "description": " Initial HTML content",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "html": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Any text string which can contain HTML, too"
          }
        ]
      },
      "name": "html",
      "propertyType": "new",
      "event": "changeHtml",
      "apply": "_applyHtml",
      "allowNull": true,
      "check": "String"
    },
    "cssClass": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The css classname for the html embed.\n<b>IMPORTANT</b> Paddings and borders does not work\nin the css class. These styles cause conflicts with\nthe layout engine."
          }
        ]
      },
      "name": "cssClass",
      "propertyType": "new",
      "apply": "_applyCssClass",
      "check": "String",
      "defaultValue": ""
    },
    "selectable": {
      "location": {
        "start": {
          "line": 99,
          "column": 4
        },
        "end": {
          "line": 103,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "selectable",
      "propertyType": "new",
      "refine": true,
      "defaultValue": true,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "focusable": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "focusable",
      "propertyType": "new",
      "refine": true,
      "defaultValue": true,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "overflowX": {
      "type": "property",
      "name": "overflowX",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MNativeOverflow"
    },
    "overflowY": {
      "type": "property",
      "name": "overflowY",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MNativeOverflow"
    },
    "overflow": {
      "type": "property",
      "name": "overflow",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MNativeOverflow"
    }
  },
  "members": {
    "getFocusElement": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 133,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nWIDGET API\n---------------------------------------------------------------------------"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element} The html element to focus.",
            "type": "qx.html.Element",
            "desc": " The html element to focus."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyHtml": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 157,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyCssClass": {
      "location": {
        "start": {
          "line": 161,
          "column": 4
        },
        "end": {
          "line": 164,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applySelectable": {
      "location": {
        "start": {
          "line": 168,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyFont": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 199,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nFONT SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyTextColor": {
      "location": {
        "start": {
          "line": 211,
          "column": 4
        },
        "end": {
          "line": 218,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nTEXT COLOR SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyOverflowX": {
      "type": "function",
      "name": "_applyOverflowX",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.MNativeOverflow"
    },
    "_applyOverflowY": {
      "type": "function",
      "name": "_applyOverflowY",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.MNativeOverflow"
    },
    "getOverflowX": {
      "type": "function",
      "name": "getOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setOverflowX": {
      "type": "function",
      "name": "setOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetOverflowX": {
      "type": "function",
      "name": "resetOverflowX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getOverflowY": {
      "type": "function",
      "name": "getOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setOverflowY": {
      "type": "function",
      "name": "setOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetOverflowY": {
      "type": "function",
      "name": "resetOverflowY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getOverflow": {
      "type": "function",
      "name": "getOverflow",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setOverflow": {
      "type": "function",
      "name": "setOverflow",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetOverflow": {
      "type": "function",
      "name": "resetOverflow",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getHtml": {
      "type": "function",
      "name": "getHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setHtml": {
      "type": "function",
      "name": "setHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetHtml": {
      "type": "function",
      "name": "resetHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getCssClass": {
      "type": "function",
      "name": "getCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setCssClass": {
      "type": "function",
      "name": "setCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetCssClass": {
      "type": "function",
      "name": "resetCssClass",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "descendants": []
}