{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/qx-osparc-theme/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/lang/Function.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getCaller",
    "args",
    "caller",
    "callee",
    "getName",
    "fcn",
    "displayName",
    "$$original",
    "wrapper",
    "classname",
    "$$mixin",
    "key",
    "$$members",
    "name",
    "self",
    "clazz",
    "constructor",
    "prototype",
    "fcnReResult",
    "toString",
    "match",
    "length",
    "globalEval",
    "data",
    "window",
    "execScript",
    "eval",
    "call",
    "create",
    "func",
    "options",
    "core",
    "Assert",
    "assertFunction",
    "delay",
    "periodical",
    "attempt",
    "event",
    "Object",
    "isObject",
    "isDisposed",
    "isFunction",
    "fail",
    "lang",
    "Function",
    "Array",
    "fromArguments",
    "arguments",
    "concat",
    "returns",
    "apply",
    "Environment",
    "get",
    "GlobalError",
    "observeMethod",
    "setTimeout",
    "setInterval",
    "ret",
    "ex",
    "bind",
    "varargs",
    "curry",
    "listener",
    "optargs",
    "push",
    "interval"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Mootools\n     http://mootools.net\n     Version 1.1.1\n\n     Copyright:\n       2007 Valerio Proietti\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n * Collection of helper methods operating on functions.\n *\n * @ignore(qx.core.Object)\n * @require(qx.lang.Array)\n */\nqx.Bootstrap.define(\"qx.lang.Function\",\n{\n  statics :\n  {\n    /**\n     * Extract the caller of a function from the arguments variable.\n     * This will not work in Opera < 9.6.\n     *\n     * @param args {arguments} The local arguments variable\n     * @return {Function} A reference to the calling function or \"undefined\" if caller is not supported.\n     */\n    getCaller : function(args) {\n      return args.caller ? args.caller.callee : args.callee.caller;\n    },\n\n\n    /**\n     * Try to get a sensible textual description of a function object.\n     * This may be the class/mixin and method name of a function\n     * or at least the signature of the function.\n     *\n     * @param fcn {Function} function the get the name for.\n     * @return {String} Name of the function.\n     */\n    getName : function(fcn)\n    {\n      if (fcn.displayName) {\n        return fcn.displayName;\n      }\n\n      if (fcn.$$original || fcn.wrapper || fcn.classname) {\n        return fcn.classname + \".constructor()\";\n      }\n\n      if (fcn.$$mixin)\n      {\n        //members\n        for(var key in fcn.$$mixin.$$members)\n        {\n          if (fcn.$$mixin.$$members[key] == fcn) {\n            return fcn.$$mixin.name + \".prototype.\" + key + \"()\";\n          }\n        }\n\n        // statics\n        for(var key in fcn.$$mixin)\n        {\n          if (fcn.$$mixin[key] == fcn) {\n            return fcn.$$mixin.name + \".\" + key + \"()\";\n          }\n        }\n      }\n\n      if (fcn.self)\n      {\n        var clazz = fcn.self.constructor;\n        if (clazz)\n        {\n          // members\n          for(var key in clazz.prototype)\n          {\n            if (clazz.prototype[key] == fcn) {\n              return clazz.classname + \".prototype.\" + key + \"()\";\n            }\n          }\n          // statics\n          for(var key in clazz)\n          {\n            if (clazz[key] == fcn) {\n              return clazz.classname + \".\" + key + \"()\";\n            }\n          }\n        }\n      }\n\n      var fcnReResult = fcn.toString().match(/function\\s*(\\w*)\\s*\\(.*/);\n      if (fcnReResult && fcnReResult.length >= 1 && fcnReResult[1]) {\n        return fcnReResult[1] + \"()\";\n      }\n\n      return 'anonymous()';\n    },\n\n\n    /**\n     * Evaluates JavaScript code globally\n     *\n     * @lint ignoreDeprecated(eval)\n     *\n     * @param data {String} JavaScript commands\n     * @return {var} Result of the execution\n     */\n    globalEval : function(data)\n    {\n      if (window.execScript) {\n        return window.execScript(data);\n      } else {\n        return eval.call(window, data);\n      }\n    },\n\n\n    /**\n     * Base function for creating functional closures which is used by most other methods here.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>var createdFunction = qx.lang.Function.create(myFunction, [options]);</pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param options {Map?} Map of options\n     * <ul>\n     * <li><strong>self</strong>: The object that the \"this\" of the function will refer to. Default is the same as the wrapper function is called.</li>\n     * <li><strong>args</strong>: An array of arguments that will be passed as arguments to the function when called.\n     *     Default is no custom arguments; the function will receive the standard arguments when called.</li>\n     * <li><strong>delay</strong>: If set, the returned function will delay the actual execution by this amount of milliseconds and return a timer handle when called.\n     *     Default is no delay.</li>\n     * <li><strong>periodical</strong>: If set the returned function will periodically perform the actual execution with this specified interval\n     *      and return a timer handle when called. Default is no periodical execution.</li>\n     * <li><strong>attempt</strong>: If set to true, the returned function will try to execute and return either the results or false on error. Default is false.</li>\n     * </ul>\n     *\n     * @return {Function} Wrapped function\n     */\n    create : function(func, options)\n    {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert && qx.core.Assert.assertFunction(func, \"Invalid parameter 'func'.\");\n      }\n\n      // Nothing to be done when there are no options.\n      if (!options) {\n        return func;\n      }\n\n      // Check for at least one attribute.\n      if (!(options.self || options.args || options.delay != null || options.periodical != null || options.attempt)) {\n        return func;\n      }\n\n      return function(event)\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (qx.core.Object && options.self && qx.Bootstrap.isObject(options.self) && options.self.isDisposed && qx.Bootstrap.isFunction(options.self.isDisposed))\n          {\n            if (options.self.isDisposed()) {\n              qx.core.Assert && qx.core.Assert.fail(\n                \"Trying to call a bound function with a disposed object as context: \" + options.self.toString() + \" :: \" + qx.lang.Function.getName(func)\n              );\n            }\n          }\n        }\n\n        // Convert (and copy) incoming arguments\n        var args = qx.lang.Array.fromArguments(arguments);\n\n        // Prepend static arguments\n        if (options.args) {\n          args = options.args.concat(args);\n        }\n\n        if (options.delay || options.periodical)\n        {\n          var returns = function() {\n            return func.apply(options.self||this, args);\n          };\n\n          if (qx.core.Environment.get(\"qx.globalErrorHandling\")) {\n            returns = qx.event.GlobalError.observeMethod(returns);\n          }\n\n          if (options.delay) {\n            return window.setTimeout(returns, options.delay);\n          }\n\n          if (options.periodical) {\n            return window.setInterval(returns, options.periodical);\n          }\n        }\n        else if (options.attempt)\n        {\n          var ret = false;\n\n          try {\n            ret = func.apply(options.self||this, args);\n          } catch(ex) {}\n\n          return ret;\n        }\n        else\n        {\n          return func.apply(options.self||this, args);\n        }\n      };\n    },\n\n\n    /**\n     * Returns a function whose \"this\" is altered.\n     *\n     *\n     * *Native way*\n     *\n     * This is also a feature of JavaScript 1.8.5 and will be supplied\n     * by modern browsers. Including {@link qx.lang.normalize.Function}\n     * will supply a cross browser normalization of the native\n     * implementation. We like to encourage you to use the native function!\n     *\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>qx.lang.Function.bind(myFunction, [self, [varargs...]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * function myFunction()\n     * {\n     *   this.setStyle('color', 'red');\n     *   // note that 'this' here refers to myFunction, not an element\n     *   // we'll need to bind this function to the element we want to alter\n     * };\n     *\n     * var myBoundFunction = qx.lang.Function.bind(myFunction, myElement);\n     * myBoundFunction(); // this will make the element myElement red.\n     * </pre>\n     *\n     * If you find yourself using this static method a lot, you may be\n     * interested in the bindTo() method in the mixin qx.core.MBindTo.\n     *\n     * @see qx.core.MBindTo\n     *\n     * @param func {Function} Original function to wrap\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Function} The bound function.\n     */\n    bind : function(func, self, varargs)\n    {\n      return this.create(func,\n      {\n        self  : self,\n        args  : arguments.length > 2 ? qx.lang.Array.fromArguments(arguments, 2) : null\n      });\n    },\n\n\n    /**\n     * Returns a function whose arguments are pre-configured.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>qx.lang.Function.curry(myFunction, [varargs...]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * function myFunction(elem) {\n     *   elem.setStyle('color', 'red');\n     * };\n     *\n     * var myBoundFunction = qx.lang.Function.curry(myFunction, myElement);\n     * myBoundFunction(); // this will make the element myElement red.\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param varargs {arguments} The arguments to pass to the function.\n     * @return {var} The pre-configured function.\n     */\n    curry : function(func, varargs)\n    {\n      return this.create(func, {\n        args  : arguments.length > 1 ? qx.lang.Array.fromArguments(arguments, 1) : null\n      });\n    },\n\n\n    /**\n     * Returns a function which could be used as a listener for a native event callback.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>qx.lang.Function.listener(myFunction, [self, [varargs...]]);</pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {var} The bound function.\n     */\n    listener : function(func, self, varargs)\n    {\n      if (arguments.length < 3)\n      {\n        return function(event)\n        {\n          // Directly execute, but force first parameter to be the event object.\n          return func.call(self||this, event||window.event);\n        };\n      }\n      else\n      {\n        var optargs = qx.lang.Array.fromArguments(arguments, 2);\n\n        return function(event)\n        {\n          var args = [event||window.event];\n\n          // Append static arguments\n          args.push.apply(args, optargs);\n\n          // Finally execute original method\n          func.apply(self||this, args);\n        };\n      }\n    },\n\n\n    /**\n     * Tries to execute the function.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>var result = qx.lang.Function.attempt(myFunction, [self, [varargs...]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * var myObject = {\n     *   'cow': 'moo!'\n     * };\n     *\n     * var myFunction = function()\n     * {\n     *   for(var i = 0; i < arguments.length; i++) {\n     *     if(!this[arguments[i]]) throw('doh!');\n     *   }\n     * };\n     *\n     * var result = qx.lang.Function.attempt(myFunction, myObject, 'pig', 'cow'); // false\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Boolean|var} <code>false</code> if an exception is thrown, else the function's return.\n     */\n    attempt : function(func, self, varargs)\n    {\n      return this.create(func,\n      {\n        self    : self,\n        attempt : true,\n        args    : arguments.length > 2 ? qx.lang.Array.fromArguments(arguments, 2) : null\n      })();\n    },\n\n\n    /**\n     * Delays the execution of a function by a specified duration.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>var timeoutID = qx.lang.Function.delay(myFunction, [delay, [self, [varargs...]]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * var myFunction = function(){ alert('moo! Element id is: ' + this.id); };\n     * //wait 50 milliseconds, then call myFunction and bind myElement to it\n     * qx.lang.Function.delay(myFunction, 50, myElement); // alerts: 'moo! Element id is: ... '\n     *\n     * // An anonymous function, example\n     * qx.lang.Function.delay(function(){ alert('one second later...'); }, 1000); //wait a second and alert\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param delay {Integer} The duration to wait (in milliseconds).\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Integer} The JavaScript Timeout ID (useful for clearing delays).\n     */\n    delay : function(func, delay, self, varargs)\n    {\n      return this.create(func,\n      {\n        delay : delay,\n        self  : self,\n        args  : arguments.length > 3 ? qx.lang.Array.fromArguments(arguments, 3) : null\n      })();\n    },\n\n\n    /**\n     * Executes a function in the specified intervals of time\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>var intervalID = qx.lang.Function.periodical(myFunction, [period, [self, [varargs...]]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * var Site = { counter: 0 };\n     * var addCount = function(){ this.counter++; };\n     * qx.lang.Function.periodical(addCount, 1000, Site); // will add the number of seconds at the Site\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param interval {Integer} The duration of the intervals between executions.\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Integer} The Interval ID (useful for clearing a periodical).\n     */\n    periodical : function(func, interval, self, varargs)\n    {\n      return this.create(func,\n      {\n        periodical : interval,\n        self       : self,\n        args       : arguments.length > 3 ? qx.lang.Array.fromArguments(arguments, 3) : null\n      })();\n    }\n  }\n});\n"
  ]
}