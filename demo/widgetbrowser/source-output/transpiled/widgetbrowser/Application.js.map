{
  "version": 3,
  "sources": [
    "Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "construct",
    "members",
    "__header",
    "__tabs",
    "__scroll",
    "main",
    "log",
    "appender",
    "Native",
    "Console",
    "doc",
    "getRoot",
    "dockLayout",
    "ui",
    "layout",
    "Dock",
    "dockLayoutComposite",
    "container",
    "Composite",
    "add",
    "edge",
    "widgetbrowser",
    "view",
    "Header",
    "scroll",
    "Scroll",
    "_createTabView",
    "set",
    "minWidth",
    "padding",
    "TabView",
    "getScroll",
    "getThemes",
    "themes",
    "theme",
    "known_themes",
    "split",
    "i",
    "length",
    "substr",
    "lastIndexOf",
    "Application"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAqBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EACE;AACEC,YAASN,GAAGO,WAAH,CAAeC,UAD1B;;AAIEC,eAAW,qBAAW;AACpB;AACD,KANH;;AAQEC,aACF;AACEC,gBAAU,IADZ;;AAGEC,cAAQ,IAHV;;AAKEC,gBAAU,IALZ;;AAOEC,YAAM,gBAAW;AACf;;AAEA;AACyC;AACvC;AACAd,aAAGe,GAAH,CAAOC,QAAP,CAAgBC,MAAhB;AACA;AACAjB,aAAGe,GAAH,CAAOC,QAAP,CAAgBE,OAAhB;AACD;;AAED,YAAIC,MAAM,KAAKC,OAAL,EAAV;AACA,YAAIC,aAAa,IAAIrB,GAAGsB,EAAH,CAAMC,MAAN,CAAaC,IAAjB,EAAjB;AACA,YAAIC,sBAAsB,IAAIzB,GAAGsB,EAAH,CAAMI,SAAN,CAAgBC,SAApB,CAA8BN,UAA9B,CAA1B;AACAF,YAAIS,GAAJ,CAAQH,mBAAR,EAA6B,EAACI,MAAK,CAAN,EAA7B;;AAEA,aAAKlB,QAAL,GAAgB,IAAImB,cAAcC,IAAd,CAAmBC,MAAvB,EAAhB;AACAP,4BAAoBG,GAApB,CAAwB,KAAKjB,QAA7B,EAAuC,EAACkB,MAAM,OAAP,EAAvC;;AAEA,YAAII,SAAS,KAAKpB,QAAL,GAAgB,IAAIb,GAAGsB,EAAH,CAAMI,SAAN,CAAgBQ,MAApB,EAA7B;AACAT,4BAAoBG,GAApB,CAAwBK,MAAxB;;AAEA,aAAKrB,MAAL,GAAc,KAAKuB,cAAL,EAAd;AACA,aAAKvB,MAAL,CAAYwB,GAAZ,CAAgB;AACdC,oBAAU,GADI;AAEdC,mBAAS;AAFK,SAAhB;AAIAL,eAAOL,GAAP,CAAW,KAAKhB,MAAhB;AACD,OAnCH;;AAqCEuB,sBAAgB,0BAAW;AACzB,aAAKvB,MAAL,GAAc,IAAIkB,cAAcC,IAAd,CAAmBQ,OAAvB,EAAd;AACA,eAAO,KAAK3B,MAAZ;AACD,OAxCH;;AA0CE4B,iBAAW,qBAAW;AACpB,eAAO,KAAK3B,QAAZ;AACD,OA5CH;;AA8CE4B,iBAAW,qBAAW;AACpB,YAAIC,SAAS,EAAb;AACA,YAAIC,KAAJ;AACA;AACA,YAAIC,yGAAJ;AACAA,uBAAeA,aAAaC,KAAb,CAAmB,GAAnB,CAAf;AACA,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAIF,aAAaG,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1CH,kBAAQC,aAAaE,CAAb,CAAR;AACAJ,iBAAOC,MAAMK,MAAN,CAAaL,MAAMM,WAAN,CAAkB,GAAlB,IAAyB,CAAtC,CAAP,IAAmDN,KAAnD;AACD;AACD,eAAOD,MAAP;AACD;AAzDH;AATA,GADF,C;AArBAZ,gBAAcoB,WAAd,CAA0B/C,aAA1B,GAA0CA,aAA1C",
  "file": "Application.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/*\n * Main Application.\n */\nqx.Class.define(\"widgetbrowser.Application\",\n  {\n    extend : qx.application.Standalone,\n\n\n    construct: function() {\n      this.base(arguments);\n    },\n\n    members:\n  {\n    __header: null,\n\n    __tabs: null,\n\n    __scroll: null,\n\n    main: function() {\n      this.base(arguments);\n\n      // Enable logging in debug variant\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // support native logging capabilities, e.g. Firebug for Firefox\n        qx.log.appender.Native;\n        // support additional cross-browser console. Press F7 to toggle visibility\n        qx.log.appender.Console;\n      }\n\n      var doc = this.getRoot();\n      var dockLayout = new qx.ui.layout.Dock();\n      var dockLayoutComposite = new qx.ui.container.Composite(dockLayout);\n      doc.add(dockLayoutComposite, {edge:0});\n\n      this.__header = new widgetbrowser.view.Header();\n      dockLayoutComposite.add(this.__header, {edge: \"north\"});\n\n      var scroll = this.__scroll = new qx.ui.container.Scroll();\n      dockLayoutComposite.add(scroll);\n\n      this.__tabs = this._createTabView();\n      this.__tabs.set({\n        minWidth: 700,\n        padding: 15\n      });\n      scroll.add(this.__tabs);\n    },\n\n    _createTabView: function() {\n      this.__tabs = new widgetbrowser.view.TabView();\n      return this.__tabs;\n    },\n\n    getScroll: function() {\n      return this.__scroll;\n    },\n\n    getThemes: function() {\n      var themes = {};\n      var theme;\n      // cannot use qx.Theme.getAll(), as themes are loaded on demand\n      var known_themes = qx.core.Environment.get(\"widgetbrowser.themes\");\n      known_themes = known_themes.split(\" \");\n      for (var i=0; i < known_themes.length; i++) {\n        theme = known_themes[i];\n        themes[theme.substr(theme.lastIndexOf(\".\") + 1)] = theme;\n      }\n      return themes;\n    }\n  }\n  });\n"
  ]
}