{
  "className": "qx.data.IListData",
  "packageName": "qx.data",
  "name": "IListData",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 24,
        "column": 0
      },
      "end": {
        "line": 108,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This interface defines a data structure compatible with the data binding\ncontrollers.\nIt defines a minimum of functionality which the controller need to work."
        }
      ]
    }
  },
  "type": "interface",
  "members": {
    "getItem": {
      "location": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 57,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the item at the given index"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index requested of the data element.",
            "paramName": "index",
            "description": " The index requested of the data element.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The element at the given index.",
            "type": "var",
            "desc": " The element at the given index."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setItem": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 67,
          "column": 38
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the given item at the given position in the data structure. A\nchange event has to be fired."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index of the data element.",
            "paramName": "index",
            "description": " The index of the data element.",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "item {var} The new item to set.",
            "paramName": "item",
            "description": " The new item to set.",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "splice": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 53
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Method to remove and add new element to the data. For every remove or\nadd a change event should be fired."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startIndex {Integer} The index where the splice should start",
            "paramName": "startIndex",
            "description": " The index where the splice should start",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "amount {Integer} Defines number of element which will be removed\nat the given position.",
            "paramName": "amount",
            "description": " Defines number of element which will be removed\nat the given position.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "varargs {var} All following parameters will be added at the given\nposition to the array.",
            "paramName": "varargs",
            "description": " All following parameters will be added at the given\nposition to the array.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array} An array containing the removed elements.",
            "type": "qx.data.Array",
            "desc": " An array containing the removed elements."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "contains": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Check if the given item is in the current data structure."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {var} The item which is possibly in the data structure.",
            "paramName": "item",
            "description": " The item which is possibly in the data structure.",
            "type": "var"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true, if the array contains the given item.",
            "type": "Boolean",
            "desc": " true, if the array contains the given item."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLength": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 29
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the current length of the data structure."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The current length of the data structure.",
            "type": "Number",
            "desc": " The current length of the data structure."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "toArray": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 106,
          "column": 26
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the list data as native array."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The native array.",
            "type": "qx.data.Array",
            "desc": " The native array."
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}