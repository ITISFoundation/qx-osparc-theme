{
  "className": "qx.ui.form.VirtualSelectBox",
  "packageName": "qx.ui.form",
  "name": "VirtualSelectBox",
  "superClass": "qx.ui.form.core.AbstractVirtualBox",
  "interfaces": [
    "qx.data.controller.ISelection",
    "qx.ui.form.IField"
  ],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 462,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Hagendorn (chris_schmidt)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A form virtual widget which allows a single selection. Looks somewhat like\na normal button, but opens a virtual list of items to select when tapping\non it."
        }
      ],
      "@childControl": [
        {
          "name": "@childControl",
          "body": "spacer {qx.ui.core.Spacer} Flexible spacer widget."
        },
        {
          "name": "@childControl",
          "body": "atom {qx.ui.basic.Atom} Shows the text and icon of the content."
        },
        {
          "name": "@childControl",
          "body": "arrow {qx.ui.basic.Image} Shows the arrow to open the drop-down\nlist."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2
      },
      "end": {
        "line": 53,
        "column": 3
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "virtual-selectbox",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "width": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "width",
      "propertyType": "new",
      "refine": true,
      "defaultValue": 120,
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": {
        "qx.ui.form.core.AbstractVirtualBox": "class",
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "selection": {
      "location": {
        "start": {
          "line": 75,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Current selected items."
          }
        ]
      },
      "name": "selection",
      "propertyType": "new",
      "event": "changeSelection",
      "apply": "_applySelection",
      "allowNull": false,
      "check": "qx.data.Array"
    },
    "valid": {
      "type": "property",
      "name": "valid",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "required": {
      "type": "property",
      "name": "required",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "invalidMessage": {
      "type": "property",
      "name": "invalidMessage",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "requiredInvalidMessage": {
      "type": "property",
      "name": "requiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    }
  },
  "members": {
    "__searchValue": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} The search value to {@link #__preselect} an item."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__searchTimer": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.event.Timer} The time which triggers the search for pre-selection."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__bindings": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} Contains the id from all bindings."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "setValue": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selected {var|null} Item to select as value.",
            "paramName": "selected",
            "description": " Item to select as value.",
            "type": [
              "var",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|TypeError} The status of this operation.",
            "type": "null|TypeError",
            "desc": " The status of this operation."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.form.IField",
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "getValue": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null|var} The currently selected item or null if there is none.",
            "type": "null|var",
            "desc": " The currently selected item or null if there is none."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.form.IField",
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "resetValue": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.form.IField",
      "appearsIn": [
        "qx.ui.form.IField"
      ]
    },
    "syncWidget": {
      "location": {
        "start": {
          "line": 148,
          "column": 4
        },
        "end": {
          "line": 152,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "jobs {Map} A map of jobs.",
            "paramName": "jobs",
            "description": " A map of jobs.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_createChildControlImpl": {
      "location": {
        "start": {
          "line": 163,
          "column": 4
        },
        "end": {
          "line": 192,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINTERNAl API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "paramName": "id",
            "description": " ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "hash {String?undefined} If a child control name contains a #,\nall text following the # will be the hash argument.",
            "paramName": "hash",
            "description": " If a child control name contains a #,\nall text following the # will be the hash argument.",
            "optional": true,
            "defaultValue": "undefined",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The created control or <code>null</code>",
            "type": "qx.ui.core.Widget",
            "desc": " The created control or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox",
        "qx.ui.core.Widget"
      ]
    },
    "_getAction": {
      "location": {
        "start": {
          "line": 196,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.KeySequence} The keyboard event.",
            "paramName": "event",
            "description": " The keyboard event.",
            "type": "qx.event.type.KeySequence"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String|null} The action or <code>null</code> when interaction\ndoesn't hit any action.",
            "type": "String|null",
            "desc": " The action or <code>null</code> when interaction\ndoesn't hit any action."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_addBindings": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 235,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This method is called when the binding can be added to the\nwidget. For e.q. bind the drop-down selection with the widget."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_removeBindings": {
      "location": {
        "start": {
          "line": 242,
          "column": 4
        },
        "end": {
          "line": 249,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This method is called when the binding can be removed from the\nwidget. For e.q. remove the bound drop-down selection."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_handlePointer": {
      "location": {
        "start": {
          "line": 260,
          "column": 4
        },
        "end": {
          "line": 268,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT LISTENERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer|qx.event.type.Roll} The pointer event.",
            "paramName": "event",
            "description": " The pointer event.",
            "type": [
              "qx.event.type.Pointer",
              "qx.event.type.Roll"
            ]
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_handleKeyboard": {
      "location": {
        "start": {
          "line": 272,
          "column": 4
        },
        "end": {
          "line": 286,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.KeySequence} The keyboard event.",
            "paramName": "event",
            "description": " The keyboard event.",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.form.core.AbstractVirtualBox",
      "appearsIn": [
        "qx.ui.form.core.AbstractVirtualBox"
      ]
    },
    "_onPointerOver": {
      "location": {
        "start": {
          "line": 300,
          "column": 4
        },
        "end": {
          "line": 313,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"pointerover\" event.\n\n<ul>\n<li>Adds state \"hovered\"</li>\n<li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state\nis set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} Pointer event",
            "paramName": "event",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerOut": {
      "location": {
        "start": {
          "line": 327,
          "column": 4
        },
        "end": {
          "line": 340,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"pointerout\" event.\n\n<ul>\n<li>Removes \"hovered\" state</li>\n<li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state\nis set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Pointer} Pointer event",
            "paramName": "event",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applySelection": {
      "location": {
        "start": {
          "line": 351,
          "column": 4
        },
        "end": {
          "line": 355,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__preselect": {
      "location": {
        "start": {
          "line": 369,
          "column": 4
        },
        "end": {
          "line": 419,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nHELPER METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Preselects an item in the drop-down, when item starts with the\n__searchValue value."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__convertKeyIdentifier": {
      "location": {
        "start": {
          "line": 429,
          "column": 4
        },
        "end": {
          "line": 436,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Converts the keyIdentifier to a printable character e.q. <code>\"Space\"</code>\nto <code>\" \"</code>."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "keyIdentifier {String} The keyIdentifier to convert.",
            "paramName": "keyIdentifier",
            "description": " The keyIdentifier to convert.",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The converted keyIdentifier.",
            "type": "String",
            "desc": " The converted keyIdentifier."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_updateSelectionValue": {
      "location": {
        "start": {
          "line": 444,
          "column": 4
        },
        "end": {
          "line": 448,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Called when selection changes."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} {@link qx.data.Array} change event.",
            "paramName": "event",
            "description": " {@link qx.data.Array} change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setSelection": {
      "type": "function",
      "name": "setSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.Array",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "getSelection": {
      "type": "function",
      "name": "getSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.Array",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetSelection": {
      "type": "function",
      "name": "resetSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "setRequired": {
      "type": "function",
      "name": "setRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nREQUIRED PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the required state of a widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "required {Boolean} A flag signaling if the widget is required.",
            "paramName": "required",
            "description": " A flag signaling if the widget is required.",
            "type": "Boolean"
          }
        ]
      }
    },
    "getRequired": {
      "type": "function",
      "name": "getRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the current required state of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the widget is required.",
            "type": "Boolean",
            "desc": " True, if the widget is required."
          }
        ]
      }
    },
    "setValid": {
      "type": "function",
      "name": "setValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nVALID PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the valid state of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "valid {Boolean} The valid state of the widget.",
            "paramName": "valid",
            "description": " The valid state of the widget.",
            "type": "Boolean"
          }
        ]
      }
    },
    "getValid": {
      "type": "function",
      "name": "getValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the valid state of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} If the state of the widget is valid.",
            "type": "Boolean",
            "desc": " If the state of the widget is valid."
          }
        ]
      }
    },
    "setInvalidMessage": {
      "type": "function",
      "name": "setInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINVALID MESSAGE PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the invalid message of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {String} The invalid message.",
            "paramName": "message",
            "description": " The invalid message.",
            "type": "String"
          }
        ]
      }
    },
    "getInvalidMessage": {
      "type": "function",
      "name": "getInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the invalid message of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The current set message.",
            "type": "String",
            "desc": " The current set message."
          }
        ]
      }
    },
    "setRequiredInvalidMessage": {
      "type": "function",
      "name": "setRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nREQUIRED INVALID MESSAGE PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the invalid message if required of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {String} The invalid message.",
            "paramName": "message",
            "description": " The invalid message.",
            "type": "String"
          }
        ]
      }
    },
    "getRequiredInvalidMessage": {
      "type": "function",
      "name": "getRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the invalid message if required of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The current set message.",
            "type": "String",
            "desc": " The current set message."
          }
        ]
      }
    },
    "_applyValid": {
      "type": "function",
      "name": "_applyValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "__onChangeLocale": {
      "type": "function",
      "name": "__onChangeLocale",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Locale change event handler"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      }
    },
    "isValid": {
      "type": "function",
      "name": "isValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetValid": {
      "type": "function",
      "name": "resetValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "isRequired": {
      "type": "function",
      "name": "isRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetRequired": {
      "type": "function",
      "name": "resetRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "resetInvalidMessage": {
      "type": "function",
      "name": "resetInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "resetRequiredInvalidMessage": {
      "type": "function",
      "name": "resetRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "getModel": {
      "type": "function",
      "name": "getModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.Array",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setModel": {
      "type": "function",
      "name": "setModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.Array",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetModel": {
      "type": "function",
      "name": "resetModel",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLabelPath": {
      "type": "function",
      "name": "getLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLabelPath": {
      "type": "function",
      "name": "setLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLabelPath": {
      "type": "function",
      "name": "resetLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLabelOptions": {
      "type": "function",
      "name": "getLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLabelOptions": {
      "type": "function",
      "name": "setLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLabelOptions": {
      "type": "function",
      "name": "resetLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconPath": {
      "type": "function",
      "name": "getIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconPath": {
      "type": "function",
      "name": "setIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconPath": {
      "type": "function",
      "name": "resetIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconOptions": {
      "type": "function",
      "name": "getIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconOptions": {
      "type": "function",
      "name": "setIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconOptions": {
      "type": "function",
      "name": "resetIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getItemHeight": {
      "type": "function",
      "name": "getItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setItemHeight": {
      "type": "function",
      "name": "setItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetItemHeight": {
      "type": "function",
      "name": "resetItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getMaxListHeight": {
      "type": "function",
      "name": "getMaxListHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setMaxListHeight": {
      "type": "function",
      "name": "setMaxListHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetMaxListHeight": {
      "type": "function",
      "name": "resetMaxListHeight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 452,
        "column": 2
      },
      "end": {
        "line": 461,
        "column": 3
      }
    }
  },
  "descendants": []
}