{
  "className": "qx.ui.table.selection.Model",
  "packageName": "qx.ui.table.selection",
  "name": "Model",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 648,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2006 STZ-IDA, Germany, http://www.stz-ida.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nTil Schneider (til132)\nDavid Perez Carmona (david-perez)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A selection model."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2
      },
      "end": {
        "line": 45,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "properties": {
    "selectionMode": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Set the selection mode. Valid values are {@link #NO_SELECTION},\n{@link #SINGLE_SELECTION}, {@link #SINGLE_INTERVAL_SELECTION},\n{@link #MULTIPLE_INTERVAL_SELECTION} and\n{@link #MULTIPLE_INTERVAL_SELECTION_TOGGLE}."
          }
        ]
      },
      "name": "selectionMode",
      "propertyType": "new",
      "apply": "_applySelectionMode",
      "possibleValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "defaultValue": 2
    }
  },
  "members": {
    "__hadChangeEventInBatchMode": {
      "location": {
        "start": {
          "line": 138,
          "column": 4
        },
        "end": {
          "line": 138,
          "column": 38
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__anchorSelectionIndex": {
      "location": {
        "start": {
          "line": 139,
          "column": 4
        },
        "end": {
          "line": 139,
          "column": 33
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__leadSelectionIndex": {
      "location": {
        "start": {
          "line": 140,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 31
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__selectedRangeArr": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 141,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applySelectionMode": {
      "location": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 147,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "selectionMode property modifier"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setBatchMode": {
      "location": {
        "start": {
          "line": 164,
          "column": 4
        },
        "end": {
          "line": 185,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Activates / Deactivates batch mode. In batch mode, no change events will be thrown but\nwill be collected instead. When batch mode is turned off again and any events have\nbeen collected, one event is thrown to inform the listeners.\n\nThis method supports nested calling, i. e. batch mode can be turned more than once.\nIn this case, batch mode will not end until it has been turned off once for each\nturning on."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "batchMode {Boolean} true to activate batch mode, false to deactivate",
            "paramName": "batchMode",
            "description": " true to activate batch mode, false to deactivate",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if batch mode is active, false otherwise",
            "type": "Boolean",
            "desc": " true if batch mode is active, false otherwise"
          }
        ],
        "@throws": [
          {
            "name": "@throws",
            "body": "{Error} if batch mode is turned off once more than it has been turned on"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hasBatchMode": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns whether batch mode is active. See setter for a description of batch mode."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if batch mode is active, false otherwise",
            "type": "Boolean",
            "desc": " true if batch mode is active, false otherwise"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAnchorSelectionIndex": {
      "location": {
        "start": {
          "line": 205,
          "column": 4
        },
        "end": {
          "line": 207,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the first argument of the last call to {@link #setSelectionInterval()},\n{@link #addSelectionInterval()} or {@link #removeSelectionInterval()}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the anchor selection index.",
            "type": "Integer",
            "desc": " the anchor selection index."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_setAnchorSelectionIndex": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 218,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the anchor selection index. Only use this function, if you want manipulate\nthe selection manually."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index to set.",
            "paramName": "index",
            "description": " the index to set.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getLeadSelectionIndex": {
      "location": {
        "start": {
          "line": 227,
          "column": 4
        },
        "end": {
          "line": 229,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the second argument of the last call to {@link #setSelectionInterval()},\n{@link #addSelectionInterval()} or {@link #removeSelectionInterval()}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the lead selection index.",
            "type": "Integer",
            "desc": " the lead selection index."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_setLeadSelectionIndex": {
      "location": {
        "start": {
          "line": 238,
          "column": 4
        },
        "end": {
          "line": 240,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the lead selection index. Only use this function, if you want manipulate\nthe selection manually."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index to set.",
            "paramName": "index",
            "description": " the index to set.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSelectedRangeArr": {
      "location": {
        "start": {
          "line": 250,
          "column": 4
        },
        "end": {
          "line": 252,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an array that holds all the selected ranges of the table. Each\nentry is a map holding information about the \"minIndex\" and \"maxIndex\" of the\nselection range."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} array with all the selected ranges.",
            "type": "Map[]",
            "desc": " array with all the selected ranges."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "resetSelection": {
      "location": {
        "start": {
          "line": 258,
          "column": 4
        },
        "end": {
          "line": 265,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets (clears) the selection."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectionEmpty": {
      "location": {
        "start": {
          "line": 273,
          "column": 4
        },
        "end": {
          "line": 275,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns whether the selection is empty."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the selection is empty.",
            "type": "Boolean",
            "desc": " whether the selection is empty."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectedCount": {
      "location": {
        "start": {
          "line": 283,
          "column": 4
        },
        "end": {
          "line": 294,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the number of selected items."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} the number of selected items.",
            "type": "Integer",
            "desc": " the number of selected items."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSelectedIndex": {
      "location": {
        "start": {
          "line": 303,
          "column": 4
        },
        "end": {
          "line": 315,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns whether an index is selected."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} the index to check.",
            "paramName": "index",
            "description": " the index to check.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} whether the index is selected.",
            "type": "Boolean",
            "desc": " whether the index is selected."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSelectedRanges": {
      "location": {
        "start": {
          "line": 324,
          "column": 4
        },
        "end": {
          "line": 340,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the selected ranges as an array. Each array element has a\n<code>minIndex</code> and a <code>maxIndex</code> property."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map[]} the selected ranges.",
            "type": "Map[]",
            "desc": " the selected ranges."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "iterateSelection": {
      "location": {
        "start": {
          "line": 359,
          "column": 4
        },
        "end": {
          "line": 367,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Calls an iterator function for each selected index.\n\nUsage Example:\n<pre class='javascript'>\nvar selectedRowData = [];\nmySelectionModel.iterateSelection(function(index) {\nselectedRowData.push(myTableModel.getRowData(index));\n});\n</pre>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "iterator {Function} the function to call for each selected index.\nGets the current index as parameter.",
            "paramName": "iterator",
            "description": " the function to call for each selected index.\nGets the current index as parameter.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "object {var ? null} the object to use when calling the handler.\n(this object will be available via \"this\" in the iterator)",
            "paramName": "object",
            "description": " the object to use when calling the handler.\n(this object will be available via \"this\" in the iterator)",
            "optional": true,
            "defaultValue": "null",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setSelectionInterval": {
      "location": {
        "start": {
          "line": 376,
          "column": 4
        },
        "end": {
          "line": 424,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the selected interval. This will clear the former selection."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fromIndex {Integer} the first index of the selection (including).",
            "paramName": "fromIndex",
            "description": " the first index of the selection (including).",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "toIndex {Integer} the last index of the selection (including).",
            "paramName": "toIndex",
            "description": " the last index of the selection (including).",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addSelectionInterval": {
      "location": {
        "start": {
          "line": 433,
          "column": 4
        },
        "end": {
          "line": 452,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a selection interval to the current selection."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fromIndex {Integer} the first index of the selection (including).",
            "paramName": "fromIndex",
            "description": " the first index of the selection (including).",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "toIndex {Integer} the last index of the selection (including).",
            "paramName": "toIndex",
            "description": " the last index of the selection (including).",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeSelectionInterval": {
      "location": {
        "start": {
          "line": 461,
          "column": 4
        },
        "end": {
          "line": 524,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes an interval from the current selection."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fromIndex {Integer} the first index of the interval (including).",
            "paramName": "fromIndex",
            "description": " the first index of the interval (including).",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "toIndex {Integer} the last index of the interval (including).",
            "paramName": "toIndex",
            "description": " the last index of the interval (including).",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_resetSelection": {
      "location": {
        "start": {
          "line": 530,
          "column": 4
        },
        "end": {
          "line": 535,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets (clears) the selection, but doesn't inform the listeners."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_addSelectionInterval": {
      "location": {
        "start": {
          "line": 545,
          "column": 4
        },
        "end": {
          "line": 595,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a selection interval to the current selection, but doesn't inform\nthe listeners."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fromIndex {Integer} the first index of the selection (including).",
            "paramName": "fromIndex",
            "description": " the first index of the selection (including).",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "toIndex {Integer} the last index of the selection (including).",
            "paramName": "toIndex",
            "description": " the last index of the selection (including).",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_dumpRanges": {
      "location": {
        "start": {
          "line": 602,
          "column": 4
        },
        "end": {
          "line": 613,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "this._dumpRanges();"
          },
          {
            "name": "@description",
            "body": "Logs the current ranges for debug purposes."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_fireChangeSelection": {
      "location": {
        "start": {
          "line": 621,
          "column": 4
        },
        "end": {
          "line": 633,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fires the \"changeSelection\" event to all registered listeners. If the selection model\ncurrently is in batch mode, only one event will be thrown when batch mode is ended."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getSelectionMode": {
      "type": "function",
      "name": "getSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSelectionMode": {
      "type": "function",
      "name": "setSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSelectionMode": {
      "type": "function",
      "name": "resetSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 645,
        "column": 2
      },
      "end": {
        "line": 647,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}