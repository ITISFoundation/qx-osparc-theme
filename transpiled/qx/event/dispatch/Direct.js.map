{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/qx-osparc-theme/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/event/dispatch/Direct.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventDispatcher",
    "construct",
    "manager",
    "_manager",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_LAST",
    "members",
    "canDispatchEvent",
    "target",
    "type",
    "getBubbles",
    "dispatchEvent",
    "expectedEventClassName",
    "getEventType",
    "constructor",
    "expectedEventClass",
    "getByName",
    "error",
    "classname",
    "setEventPhase",
    "Event",
    "AT_TARGET",
    "tracker",
    "self",
    "listeners",
    "getListeners",
    "forEach",
    "listener",
    "isBlacklisted",
    "unique",
    "context",
    "isDisposed",
    "isDisposing",
    "warn",
    "Utils",
    "then",
    "handler",
    "call",
    "promise",
    "defer",
    "addDispatcher",
    "dispatch",
    "Direct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Dispatches events directly on the event target (no bubbling nor capturing).\n */\nqx.Class.define(\"qx.event.dispatch.Direct\",\n{\n  extend : qx.core.Object,\n  implement : qx.event.IEventDispatcher,\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct : function(manager) {\n    this._manager = manager;\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics :\n  {\n    /** @type {Integer} Priority of this dispatcher */\n    PRIORITY : qx.event.Registration.PRIORITY_LAST\n  },\n\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT DISPATCHER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canDispatchEvent : function(target, event, type) {\n      return !event.getBubbles();\n    },\n\n\n    // interface implementation\n    dispatchEvent : function(target, event, type)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (target instanceof qx.core.Object)\n        {\n          var expectedEventClassName = qx.Class.getEventType(target.constructor, type);\n          var expectedEventClass = qx.Class.getByName(expectedEventClassName);\n          if (!expectedEventClass)\n          {\n            this.error(\n              \"The event type '\" + type + \"' declared in the class '\" +\n              target.constructor + \" is not an available class': \" +\n              expectedEventClassName\n            );\n          }\n          else if (!(event instanceof expectedEventClass))\n          {\n            this.error(\n              \"Expected event type to be instanceof '\" + expectedEventClassName +\n              \"' but found '\" + event.classname + \"'\"\n            );\n          }\n        }\n      }\n\n      event.setEventPhase(qx.event.type.Event.AT_TARGET);\n\n      var tracker = {};\n      var self = this;\n      var listeners = this._manager.getListeners(target, type, false);\n      if (listeners) {\n        listeners.forEach(function(listener) {\n          if (self._manager.isBlacklisted(listener.unique)) {\n            return;\n          }\n          var context = listener.context || target;\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            // warn if the context is disposed\n            if (context && context.isDisposed && context.isDisposed() && !context.isDisposing()) {\n              self.warn(\n                \"The context object '\" + context + \"' for the event '\" +\n                type + \"' of '\" + target + \"'is already disposed.\"\n              );\n            }\n          }\n          qx.event.Utils.then(tracker, function() {\n            return listener.handler.call(context, event);\n          });\n        });\n      }\n      \n      return tracker.promise;\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer : function(statics) {\n    qx.event.Registration.addDispatcher(statics);\n  }\n});\n"
  ]
}