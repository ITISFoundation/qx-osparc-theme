{
  "version": 3,
  "sources": [
    "MControls.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "members",
    "initControls",
    "widgets",
    "options",
    "controls",
    "ui",
    "container",
    "Composite",
    "setLayout",
    "layout",
    "HBox",
    "add",
    "disabled",
    "toggleDisabled",
    "form",
    "ToggleButton",
    "addListener",
    "forEach",
    "widget",
    "index",
    "setEnabled",
    "getValue",
    "hovered",
    "toggleHovered",
    "addState",
    "removeState",
    "selected",
    "toggleSelected",
    "focused",
    "toggleWidgetFocus",
    "status",
    "toggleFocused",
    "e",
    "RadioButtonGroup",
    "children",
    "getChildren",
    "child",
    "invalid",
    "toggleInvalid",
    "setInvalidMessage",
    "setValid",
    "overflow",
    "toggleOverflow",
    "getData",
    "hidesome",
    "tb",
    "canHide",
    "exclude",
    "show",
    "widgetbrowser",
    "MControls"
  ],
  "mappings": "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",
  "file": "MControls.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\nqx.Mixin.define(\"widgetbrowser.MControls\",\n  {\n\n    members:\n  {\n\n    initControls: function(widgets, options) {\n      options = options || {};\n\n      var controls = new qx.ui.container.Composite();\n      controls.setLayout(new qx.ui.layout.HBox(10));\n      this.add(controls);\n\n      if (options.disabled) {\n        var toggleDisabled = new qx.ui.form.ToggleButton(\"Disabled\");\n        toggleDisabled.addListener(\"changeValue\", function() {\n          widgets.forEach(function(widget, index) {\n            if (widget.setEnabled) {\n              widget.setEnabled(!this.getValue());\n            }\n          }, this);\n        });\n        controls.add(toggleDisabled);\n      }\n\n      if (options.hovered) {\n        var toggleHovered = new qx.ui.form.ToggleButton(\"Hovered\");\n        toggleHovered.addListener(\"changeValue\", function() {\n          widgets.forEach(function(widget, index) {\n            if (this.getValue()) {\n              widget.addState(\"hovered\");\n            } else {\n              widget.removeState(\"hovered\");\n            }\n          }, this);\n        });\n        controls.add(toggleHovered);\n      }\n\n      if (options.selected) {\n        var toggleSelected = new qx.ui.form.ToggleButton(\"Selected\");\n        toggleSelected.addListener(\"changeValue\", function() {\n          widgets.forEach(function(widget, index) {\n            if (this.getValue()) {\n              widget.addState(\"selected\");\n            } else {\n              widget.removeState(\"selected\");\n            }\n          }, this);\n        });\n        controls.add(toggleSelected);\n      }\n\n      if (options.focused) {\n        var toggleWidgetFocus = function(widget, status) {\n          if (status) {\n            widget.addState(\"focused\");\n          } else {\n            widget.removeState(\"focused\");\n          }\n        };\n\n        var toggleFocused = new qx.ui.form.ToggleButton(\"Focused\");\n        toggleFocused.addListener(\"changeValue\", function(e) {\n          widgets.forEach(function(widget, index) {\n            if (widget instanceof qx.ui.form.RadioButtonGroup) {\n              var children = widget.getChildren();\n              children.forEach(function(child) {\n                toggleWidgetFocus(child, this.getValue());\n              }, this);\n            } else {\n              toggleWidgetFocus(widget, this.getValue());\n            }\n          }, this);\n        });\n        controls.add(toggleFocused);\n      }\n\n      if (options.invalid) {\n        var toggleInvalid = new qx.ui.form.ToggleButton(\"Invalid\");\n        toggleInvalid.addListener(\"changeValue\", function(e) {\n          widgets.forEach(function(widget, index) {\n            if (widget.setInvalidMessage && widget.setValid) {\n              widget.setInvalidMessage(\"This is invalid message number \" + index + \".\");\n              widget.setValid(!this.getValue());\n            }\n          }, this);\n        });\n        controls.add(toggleInvalid);\n      }\n\n      if (options.overflow) {\n        var toggleInvalid = new qx.ui.form.ToggleButton(\"Overflow\");\n        toggleInvalid.addListener(\"changeValue\", function(e) {\n          widgets.forEach(function(widget, index) {\n            widget.toggleOverflow(widget, e.getData());\n          }, this);\n        });\n        controls.add(toggleInvalid);\n      }\n\n      if (options.hidesome) {\n        var tb = new qx.ui.form.ToggleButton(\"Hide some\");\n        tb.addListener(\"changeValue\", function(e) {\n          widgets.forEach(function(widget, index) {\n            if (widget.canHide) {\n              e.getData() ? widget.exclude() : widget.show();\n            }\n          }, this);\n        });\n        controls.add(tb);\n      }\n    }\n  }\n  });\n"
  ]
}