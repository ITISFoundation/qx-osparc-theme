{
  "className": "qx.util.placement.Placement",
  "packageName": "qx.util.placement",
  "name": "Placement",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 299,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nFabian Jakobs (fjakobs)\nChristian Hagendorn (chris_schmidt)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Contains methods to compute a position for any object which should\nbe positioned relative to another object."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 29,
        "column": 2
      },
      "end": {
        "line": 33,
        "column": 3
      }
    }
  },
  "properties": {
    "axisX": {
      "location": {
        "start": {
          "line": 41,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The axis object to use for the horizontal placement"
          }
        ]
      },
      "name": "axisX",
      "propertyType": "new",
      "check": "Class"
    },
    "axisY": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The axis object to use for the vertical placement"
          }
        ]
      },
      "name": "axisY",
      "propertyType": "new",
      "check": "Class"
    },
    "edge": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Specify to which edge of the target object, the object should be attached"
          }
        ]
      },
      "name": "edge",
      "propertyType": "new",
      "possibleValues": [
        "top",
        "right",
        "bottom",
        "left"
      ],
      "defaultValue": "top"
    },
    "align": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Specify with which edge of the target object, the object should be aligned"
          }
        ]
      },
      "name": "align",
      "propertyType": "new",
      "possibleValues": [
        "top",
        "right",
        "bottom",
        "left",
        "center",
        "middle"
      ],
      "defaultValue": "right"
    }
  },
  "members": {
    "__defaultAxis": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "compute": {
      "location": {
        "start": {
          "line": 196,
          "column": 4
        },
        "end": {
          "line": 243,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "DOM and widget independent method to compute the location\nof an object to make it relative to any other object."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "size {Map} With the keys <code>width</code> and <code>height</code>\nof the object to align",
            "paramName": "size",
            "description": " With the keys <code>width</code> and <code>height</code>\nof the object to align",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "area {Map} Available area to position the object. Has the keys\n<code>width</code> and <code>height</code>. Normally this is the parent\nobject of the one to align.",
            "paramName": "area",
            "description": " Available area to position the object. Has the keys\n<code>width</code> and <code>height</code>. Normally this is the parent\nobject of the one to align.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "target {Map} Location of the object to align the object to. This map\nshould have the keys <code>left</code>, <code>top</code>, <code>right</code>\nand <code>bottom</code>.",
            "paramName": "target",
            "description": " Location of the object to align the object to. This map\nshould have the keys <code>left</code>, <code>top</code>, <code>right</code>\nand <code>bottom</code>.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "offsets {Map} Map with all offsets for each direction.\nComes with the keys <code>left</code>, <code>top</code>,\n<code>right</code> and <code>bottom</code>.",
            "paramName": "offsets",
            "description": " Map with all offsets for each direction.\nComes with the keys <code>left</code>, <code>top</code>,\n<code>right</code> and <code>bottom</code>.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map with the final location stored in the keys\n<code>left</code> and <code>top</code>.",
            "type": "Map",
            "desc": " A map with the final location stored in the keys\n<code>left</code> and <code>top</code>."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__getPositionX": {
      "location": {
        "start": {
          "line": 251,
          "column": 4
        },
        "end": {
          "line": 267,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the position value for the horizontal axis"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the position",
            "type": "String",
            "desc": " the position"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getPositionY": {
      "location": {
        "start": {
          "line": 275,
          "column": 4
        },
        "end": {
          "line": 291,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the position value for the vertical axis"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the position",
            "type": "String",
            "desc": " the position"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getAxisX": {
      "type": "function",
      "name": "getAxisX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Class",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setAxisX": {
      "type": "function",
      "name": "setAxisX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Class",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetAxisX": {
      "type": "function",
      "name": "resetAxisX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getAxisY": {
      "type": "function",
      "name": "getAxisY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Class",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setAxisY": {
      "type": "function",
      "name": "setAxisY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Class",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetAxisY": {
      "type": "function",
      "name": "resetAxisY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getEdge": {
      "type": "function",
      "name": "getEdge",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setEdge": {
      "type": "function",
      "name": "setEdge",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetEdge": {
      "type": "function",
      "name": "resetEdge",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getAlign": {
      "type": "function",
      "name": "getAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setAlign": {
      "type": "function",
      "name": "setAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetAlign": {
      "type": "function",
      "name": "resetAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 295,
        "column": 2
      },
      "end": {
        "line": 298,
        "column": 3
      }
    }
  },
  "descendants": []
}