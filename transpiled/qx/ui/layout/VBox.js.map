{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/qx-osparc-theme/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/VBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacing",
    "alignY",
    "separator",
    "setSpacing",
    "setAlignY",
    "setSeparator",
    "properties",
    "check",
    "init",
    "apply",
    "alignX",
    "nullable",
    "reversed",
    "members",
    "__heights",
    "__flexs",
    "__enableFlex",
    "__children",
    "_applyReversed",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__rebuildCache",
    "children",
    "_getLayoutChildren",
    "length",
    "enableFlex",
    "reuse",
    "props",
    "heights",
    "Array",
    "flexs",
    "getReversed",
    "concat",
    "reverse",
    "i",
    "getLayoutProperties",
    "height",
    "parseFloat",
    "flex",
    "verifyLayoutProperty",
    "item",
    "name",
    "value",
    "assert",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "assertNumber",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "getSpacing",
    "getSeparator",
    "gaps",
    "computeVerticalSeparatorGaps",
    "computeVerticalGaps",
    "child",
    "percent",
    "hint",
    "allocatedHeight",
    "getSizeHint",
    "Math",
    "floor",
    "minHeight",
    "maxHeight",
    "push",
    "flexibles",
    "offset",
    "min",
    "max",
    "result",
    "computeFlexOffsets",
    "top",
    "getMarginTop",
    "getAlignY",
    "round",
    "left",
    "width",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "_clearSeparators",
    "separatorInsets",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getInsets",
    "separatorHeight",
    "bottom",
    "getMarginLeft",
    "getMarginRight",
    "minWidth",
    "maxWidth",
    "computeHorizontalAlignOffset",
    "getAlignX",
    "_renderSeparator",
    "collapseMargins",
    "getMarginBottom",
    "_computeSizeHint",
    "percentMinHeight",
    "margin",
    "l",
    "destruct",
    "VBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A vertical box layout.\n *\n * The vertical box layout lays out widgets in a vertical column, from top\n * to bottom.\n *\n * *Features*\n *\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Margins (with vertical collapsing)\n * * Auto sizing (ignoring percent values)\n * * Percent heights (not relevant for size hint)\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignY} is ignored)\n * * Vertical spacing (collapsed with margins)\n * * Reversed children layout (from last to first)\n * * Horizontal children stretching (respecting size hints)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n *   distributes remaining empty space among its children. If items are made\n *   flexible, they can grow or shrink accordingly. Their relative flex values\n *   determine how the items are being resized, i.e. the larger the flex ratio\n *   of two items, the larger the resizing of the first item compared to the\n *   second.\n *\n *   If there is only one flex item in a layout container, its actual flex\n *   value is not relevant. To disallow items to become flexible, set the\n *   flex value to zero.\n * </li>\n * <li><strong>height</strong> <em>(String)</em>: Allows to define a percent\n *   height for the item. The height in percent, if specified, is used instead\n *   of the height defined by the size hint. The minimum and maximum height still\n *   takes care of the element's limits. It has no influence on the layout's\n *   size hint. Percent values are mostly useful for widgets which are sized by\n *   the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the vertical box layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.VBox();\n * layout.setSpacing(4); // apply spacing\n *\n * var container = new qx.ui.container.Composite(layout);\n *\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * *External Documentation*\n *\n * See <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/box.html'>extended documentation</a>\n * and links to demos for this layout.\n *\n */\nqx.Class.define(\"qx.ui.layout.VBox\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\n   * @param alignY {String?\"top\"} Vertical alignment of the whole children\n   *     block {@link #alignY}.\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to be rendered between the items\n   */\n  construct : function(spacing, alignY, separator)\n  {\n    this.base(arguments);\n\n    if (spacing) {\n      this.setSpacing(spacing);\n    }\n\n    if (alignY) {\n      this.setAlignY(alignY);\n    }\n\n    if (separator) {\n      this.setSeparator(separator);\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Vertical alignment of the whole children block. The vertical\n     * alignment of the child is completely ignored in VBoxes (\n     * {@link qx.ui.core.LayoutItem#alignY}).\n     */\n    alignY :\n    {\n      check : [ \"top\", \"middle\", \"bottom\" ],\n      init : \"top\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /**\n     * Horizontal alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignX}.\n     */\n    alignX :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      init : \"left\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Vertical spacing between two children */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Separator lines to use between the objects */\n    separator :\n    {\n      check : \"Decorator\",\n      nullable : true,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyReversed\"\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __heights : null,\n    __flexs : null,\n    __enableFlex : null,\n    __children : null,\n\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyReversed : function()\n    {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n\n    /**\n     * Rebuilds caches for flex and percent layout properties\n     */\n    __rebuildCache : function()\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var enableFlex = false;\n      var reuse = this.__heights && this.__heights.length != length && this.__flexs && this.__heights;\n      var props;\n\n      // Sparse array (keep old one if lengths has not been modified)\n      var heights = reuse ? this.__heights : new Array(length);\n      var flexs = reuse ? this.__flexs : new Array(length);\n\n      // Reverse support\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      // Loop through children to preparse values\n      for (var i=0; i<length; i++)\n      {\n        props = children[i].getLayoutProperties();\n\n        if (props.height != null) {\n          heights[i] = parseFloat(props.height) / 100;\n        }\n\n        if (props.flex != null)\n        {\n          flexs[i] = props.flex;\n          enableFlex = true;\n        } else {\n          // reset (in case the index of the children changed: BUG #3131)\n          flexs[i] = 0;\n        }\n      }\n\n      // Store data\n      if (!reuse)\n      {\n        this.__heights = heights;\n        this.__flexs = flexs;\n      }\n\n      this.__enableFlex = enableFlex;\n      this.__children = children;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        this.assert(name === \"flex\" || name === \"height\", \"The property '\"+name+\"' is not supported by the VBox layout!\");\n\n        if (name ==\"height\")\n        {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n        else\n        {\n          // flex\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      // Cache children\n      var children = this.__children;\n      var length = children.length;\n      var util = qx.ui.layout.Util;\n\n\n      // Compute gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n\n      // First run to cache children data and compute allocated height\n      var i, child, height, percent;\n      var heights = [], hint;\n      var allocatedHeight = gaps;\n\n      for (i=0; i<length; i+=1)\n      {\n        percent = this.__heights[i];\n        hint = children[i].getSizeHint();\n        \n        height = percent != null ?\n          Math.floor((availHeight - gaps) * percent) :\n          hint.height;\n\n        // Limit computed value\n        if (height < hint.minHeight) {\n          height = hint.minHeight;\n        } else if (height > hint.maxHeight) {\n          height = hint.maxHeight;\n        }\n        \n        heights.push(height);\n        allocatedHeight += height;\n      }\n\n\n      // Flex support (growing/shrinking)\n      if (this.__enableFlex && allocatedHeight != availHeight)\n      {\n        var flexibles = {};\n        var flex, offset;\n\n        for (i=0; i<length; i+=1)\n        {\n          flex = this.__flexs[i];\n\n          if (flex > 0)\n          {\n            hint = children[i].getSizeHint();\n\n            flexibles[i]=\n            {\n              min : hint.minHeight,\n              value : heights[i],\n              max : hint.maxHeight,\n              flex : flex\n            };\n          }\n        }\n\n        var result = util.computeFlexOffsets(flexibles, availHeight, allocatedHeight);\n\n        for (i in result)\n        {\n          offset = result[i].offset;\n\n          heights[i] += offset;\n          allocatedHeight += offset;\n        }\n      }\n\n\n      // Start with top coordinate\n      var top = children[0].getMarginTop();\n\n      // Alignment support\n      if (allocatedHeight < availHeight && this.getAlignY() != \"top\")\n      {\n        top = availHeight - allocatedHeight;\n\n        if (this.getAlignY() === \"middle\") {\n          top = Math.round(top / 2);\n        }\n      }\n\n\n      // Layouting children\n      var hint, left, width, height, marginBottom, marginLeft, marginRight;\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Compute separator height\n      if (separator)\n      {\n        var separatorInsets = qx.theme.manager.Decoration.getInstance().resolve(separator).getInsets();\n        var separatorHeight = separatorInsets.top + separatorInsets.bottom;\n      }\n\n      // Render children and separators\n      for (i=0; i<length; i+=1)\n      {\n        child = children[i];\n        height = heights[i];\n        hint = child.getSizeHint();\n\n        marginLeft = child.getMarginLeft();\n        marginRight = child.getMarginRight();\n\n        // Find usable width\n        width = Math.max(hint.minWidth, Math.min(availWidth-marginLeft-marginRight, hint.maxWidth));\n\n        // Respect horizontal alignment\n        left = util.computeHorizontalAlignOffset(child.getAlignX()||this.getAlignX(), width, availWidth, marginLeft, marginRight);\n\n        // Add collapsed margin\n        if (i > 0)\n        {\n          // Whether a separator has been configured\n          if (separator)\n          {\n            // add margin of last child and spacing\n            top += marginBottom + spacing;\n\n            // then render the separator at this position\n            this._renderSeparator(separator, {\n              top : top + padding.top,\n              left : padding.left,\n              height : separatorHeight,\n              width : availWidth\n            });\n\n            // and finally add the size of the separator, the spacing (again) and the top margin\n            top += separatorHeight + spacing + child.getMarginTop();\n          }\n          else\n          {\n            // Support margin collapsing when no separator is defined\n            top += util.collapseMargins(spacing, marginBottom, child.getMarginTop());\n          }\n        }\n\n        // Layout child\n        child.renderLayout(left + padding.left, top + padding.top, width, height);\n\n        // Add height\n        top += height;\n\n        // Remember bottom margin (for collapsing)\n        marginBottom = child.getMarginBottom();\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      // Rebuild flex/height caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n\n      // Initialize\n      var minHeight=0, height=0, percentMinHeight=0;\n      var minWidth=0, width=0;\n      var child, hint, margin;\n\n      // Iterate over children\n      for (var i=0, l=children.length; i<l; i+=1)\n      {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Sum up heights\n        height += hint.height;\n\n        // Detect if child is shrinkable or has percent height and update minHeight\n        var flex = this.__flexs[i];\n        var percent = this.__heights[i];\n        if (flex) {\n          minHeight += hint.minHeight;\n        } else if (percent) {\n          percentMinHeight = Math.max(percentMinHeight, Math.round(hint.minHeight/percent));\n        } else {\n          minHeight += hint.height;\n        }\n\n        // Build horizontal margin sum\n        margin = child.getMarginLeft() + child.getMarginRight();\n\n        // Find biggest width\n        if ((hint.width+margin) > width) {\n          width = hint.width + margin;\n        }\n\n        // Find biggest minWidth\n        if ((hint.minWidth+margin) > minWidth) {\n          minWidth = hint.minWidth + margin;\n        }\n      }\n\n      minHeight += percentMinHeight;\n\n      // Respect gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeVerticalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeVerticalGaps(children, spacing, true);\n      }\n\n      // Return hint\n      return {\n        minHeight : minHeight + gaps,\n        height : height + gaps,\n        minWidth : minWidth,\n        width : width\n      };\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__heights = this.__flexs = this.__children = null;\n  }\n});\n"
  ]
}