{
  "className": "qx.util.AliasManager",
  "packageName": "qx.util",
  "name": "AliasManager",
  "superClass": "qx.util.ValueManager",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 45,
        "column": 0
      },
      "end": {
        "line": 193,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This singleton manages global resource aliases.\n\nThe AliasManager supports simple prefix replacement on strings. There are\nsome pre-defined aliases, and you can register your own with {@link #add}.\nThe AliasManager is automatically invoked in various situations, e.g. when\nresolving the icon image for a button, so it is common to register aliases for\n<a href=\"http://manual.qooxdoo.org/${qxversion}/pages/desktop/ui_resources.html\">resource id's</a>.\nYou can of course call the AliasManager's {@link #resolve}\nexplicitly to get an alias resolution in any situation, but keep that\nautomatic invocation of the AliasManager in mind when defining new aliases as\nthey will be applied globally in many classes, not only your own.\n\nExamples:\n<ul>\n<li> <code>foo</code> -> <code>bar/16pt/baz</code>  (resolves e.g. __\"foo/a/b/c.png\"__ to\n__\"bar/16pt/baz/a/b/c.png\"__)\n<li> <code>imgserver</code> -> <code>http&#058;&#047;&#047;imgs03.myserver.com/my/app/</code>\n(resolves e.g. __\"imgserver/a/b/c.png\"__ to\n__\"http&#058;&#047;&#047;imgs03.myserver.com/my/app/a/b/c.png\"__)\n</ul>\n\nFor resources, only aliases that resolve to proper resource id's can be __managed__\nresources, and will be considered __unmanaged__ resources otherwise."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 59,
        "column": 2
      },
      "end": {
        "line": 68,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "members": {
    "__aliases": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_preprocess": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "pre-process incoming dynamic value"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String} incoming value",
            "paramName": "value",
            "description": " incoming value",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} pre processed value",
            "type": "String",
            "desc": " pre processed value"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "add": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Define an alias to a resource path"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "alias {String} alias name for the resource path/url",
            "paramName": "alias",
            "description": " alias name for the resource path/url",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "base {String} first part of URI for all images which use this alias",
            "paramName": "base",
            "description": " first part of URI for all images which use this alias",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 158,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Remove a previously defined alias"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "alias {String} alias name for the resource path/url",
            "paramName": "alias",
            "description": " alias name for the resource path/url",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resolve": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resolves a given path"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "path {String} input path",
            "paramName": "path",
            "description": " input path",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} resulting path (with interpreted aliases)",
            "type": "String",
            "desc": " resulting path (with interpreted aliases)"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.util.ValueManager",
      "appearsIn": [
        "qx.util.ValueManager"
      ]
    },
    "getAliases": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 191,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get registered aliases"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} the map of the currently registered alias:resolution pairs",
            "type": "Map",
            "desc": " the map of the currently registered alias:resolution pairs"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}