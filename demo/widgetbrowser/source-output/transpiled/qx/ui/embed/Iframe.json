{
  "className": "qx.ui.embed.Iframe",
  "packageName": "qx.ui.embed",
  "name": "Iframe",
  "superClass": "qx.ui.embed.AbstractIframe",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 48,
        "column": 0
      },
      "end": {
        "line": 436,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\nTil Schneider (til132)\nJonathan Weiß (jonathan_rass)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Container widget for internal frames (iframes).\nAn iframe can display any HTML page inside the widget.\n\n*Example*\n\nHere is a little example of how to use the widget.\n\n<pre class='javascript'>\nvar document = this.getRoot();\nvar iframe = new qx.ui.embed.Iframe(\"http://www.qooxdoo.org\");\ndocument.add(iframe);\n</pre>\n\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/iframe.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>\n\n\n*Notes*\nWhen modifying this file, note that the test qx.test.ui.embed.Iframe.testSyncSourceAfterDOMMove\nhas been disabled under Chrome because of problems with Travis and Github.  Changes to this file\nshould be tested manually against that test."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 63,
        "column": 2
      },
      "end": {
        "line": 130,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "MutationObserver"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "source {String} URL which should initially set.",
          "paramName": "source",
          "description": " URL which should initially set.",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "iframe",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "nativeContextMenu": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 153,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether to show the frame's native context menu.\n\nNote: This only works if the iframe source is served from the same domain\nas the main application."
          }
        ]
      },
      "name": "nativeContextMenu",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "nativeHelp": {
      "location": {
        "start": {
          "line": 164,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "If the user presses F1 in IE by default the onhelp event is fired and\nIE’s help window is opened. Setting this property to <code>false</code>\nprevents this behavior.\n\nNote: This only works if the iframe source is served from the same domain\nas the main application."
          }
        ]
      },
      "name": "nativeHelp",
      "propertyType": "new",
      "apply": "_applyNativeHelp",
      "check": "Boolean",
      "defaultValue": false
    },
    "scrollbar": {
      "location": {
        "start": {
          "line": 174,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether the widget should have scrollbars."
          }
        ]
      },
      "name": "scrollbar",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyScrollbar",
      "allowNull": true,
      "possibleValues": [
        "auto",
        "no",
        "yes"
      ]
    }
  },
  "members": {
    "__source": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 194,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__blockerElement": {
      "location": {
        "start": {
          "line": 195,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "renderLayout": {
      "location": {
        "start": {
          "line": 199,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "left {Integer} Any integer value for the left position,\nalways in pixels",
            "paramName": "left",
            "description": " Any integer value for the left position,\nalways in pixels",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "top {Integer} Any integer value for the top position,\nalways in pixels",
            "paramName": "top",
            "description": " Any integer value for the top position,\nalways in pixels",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "width {Integer} Any positive integer value for the width,\nalways in pixels",
            "paramName": "width",
            "description": " Any positive integer value for the width,\nalways in pixels",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "height {Integer} Any positive integer value for the height,\nalways in pixels",
            "paramName": "height",
            "description": " Any positive integer value for the height,\nalways in pixels",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map of which layout sizes changed.",
            "type": "Map",
            "desc": " A map of which layout sizes changed."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget",
        "qx.ui.core.LayoutItem"
      ]
    },
    "_createContentElement": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 221,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element} The widget's content element",
            "type": "qx.html.Element",
            "desc": " The widget's content element"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_getIframeElement": {
      "location": {
        "start": {
          "line": 225,
          "column": 4
        },
        "end": {
          "line": 227,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Iframe} the iframe element wrapper",
            "type": "qx.html.Iframe",
            "desc": " the iframe element wrapper"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.embed.AbstractIframe",
      "appearsIn": [
        "qx.ui.embed.AbstractIframe"
      ]
    },
    "_createBlockerElement": {
      "location": {
        "start": {
          "line": 235,
          "column": 4
        },
        "end": {
          "line": 244,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Creates <div> element which is aligned over iframe node to avoid losing pointer events."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} Blocker element node",
            "type": "Object",
            "desc": " Blocker element node"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onIframeLoad": {
      "location": {
        "start": {
          "line": 252,
          "column": 4
        },
        "end": {
          "line": 258,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Reacts on native load event and redirects it to the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Native load event",
            "paramName": "e",
            "description": " Native load event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "block": {
      "location": {
        "start": {
          "line": 275,
          "column": 4
        },
        "end": {
          "line": 277,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nMETHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Cover the iframe with a transparent blocker div element. This prevents\npointer or key events to be handled by the iframe. To release the blocker\nuse {@link #release}."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "release": {
      "location": {
        "start": {
          "line": 284,
          "column": 4
        },
        "end": {
          "line": 286,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Release the blocker set by {@link #block}."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyNativeContextMenu": {
      "location": {
        "start": {
          "line": 296,
          "column": 4
        },
        "end": {
          "line": 329,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT HANDLER\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_onNativeContextMenu": {
      "location": {
        "start": {
          "line": 337,
          "column": 4
        },
        "end": {
          "line": 339,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Stops the <code>contextmenu</code> event from showing the native context menu"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Mouse} The event object",
            "paramName": "e",
            "description": " The event object",
            "type": "qx.event.type.Mouse"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyNativeHelp": {
      "location": {
        "start": {
          "line": 343,
          "column": 4
        },
        "end": {
          "line": 368,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_syncSourceAfterDOMMove": {
      "location": {
        "start": {
          "line": 377,
          "column": 4
        },
        "end": {
          "line": 399,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the iframe element is out of sync. This can happen in Firefox\nif the iframe is moved around and the source is changed right after.\nThe root cause is that Firefox is reloading the iframe when its position\nin DOM has changed."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyScrollbar": {
      "location": {
        "start": {
          "line": 403,
          "column": 4
        },
        "end": {
          "line": 405,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setLayoutParent": {
      "location": {
        "start": {
          "line": 409,
          "column": 4
        },
        "end": {
          "line": 415,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "parent {qx.ui.core.Widget|null} The new parent.",
            "paramName": "parent",
            "description": " The new parent.",
            "type": [
              "qx.ui.core.Widget",
              "null"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget",
        "qx.ui.core.LayoutItem"
      ]
    },
    "getSource": {
      "type": "function",
      "name": "getSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSource": {
      "type": "function",
      "name": "setSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSource": {
      "type": "function",
      "name": "resetSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getFrameName": {
      "type": "function",
      "name": "getFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setFrameName": {
      "type": "function",
      "name": "setFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetFrameName": {
      "type": "function",
      "name": "resetFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getNativeHelp": {
      "type": "function",
      "name": "getNativeHelp",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isNativeHelp": {
      "type": "function",
      "name": "isNativeHelp",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setNativeHelp": {
      "type": "function",
      "name": "setNativeHelp",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetNativeHelp": {
      "type": "function",
      "name": "resetNativeHelp",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getScrollbar": {
      "type": "function",
      "name": "getScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setScrollbar": {
      "type": "function",
      "name": "setScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetScrollbar": {
      "type": "function",
      "name": "resetScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 425,
        "column": 2
      },
      "end": {
        "line": 435,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}