{
  "version": 3,
  "sources": [
    "/home/travis/build/ITISFoundation/qx-osparc-theme/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/ui/layout/HBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "layout",
    "Abstract",
    "construct",
    "spacing",
    "alignX",
    "separator",
    "setSpacing",
    "setAlignX",
    "setSeparator",
    "properties",
    "check",
    "init",
    "apply",
    "alignY",
    "nullable",
    "reversed",
    "members",
    "__widths",
    "__flexs",
    "__enableFlex",
    "__children",
    "_applyReversed",
    "_invalidChildrenCache",
    "_applyLayoutChange",
    "__rebuildCache",
    "children",
    "_getLayoutChildren",
    "length",
    "enableFlex",
    "reuse",
    "props",
    "widths",
    "Array",
    "flexs",
    "getReversed",
    "concat",
    "reverse",
    "i",
    "getLayoutProperties",
    "width",
    "parseFloat",
    "flex",
    "verifyLayoutProperty",
    "item",
    "name",
    "value",
    "assert",
    "assertMatch",
    "Util",
    "PERCENT_VALUE",
    "assertNumber",
    "renderLayout",
    "availWidth",
    "availHeight",
    "padding",
    "util",
    "getSpacing",
    "getSeparator",
    "gaps",
    "computeHorizontalSeparatorGaps",
    "computeHorizontalGaps",
    "child",
    "percent",
    "hint",
    "allocatedWidth",
    "getSizeHint",
    "Math",
    "floor",
    "minWidth",
    "maxWidth",
    "push",
    "flexibles",
    "offset",
    "min",
    "max",
    "result",
    "computeFlexOffsets",
    "left",
    "getMarginLeft",
    "getAlignX",
    "round",
    "top",
    "height",
    "marginRight",
    "marginTop",
    "marginBottom",
    "_clearSeparators",
    "separatorInsets",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getInsets",
    "separatorWidth",
    "right",
    "getMarginTop",
    "getMarginBottom",
    "minHeight",
    "maxHeight",
    "computeVerticalAlignOffset",
    "getAlignY",
    "_renderSeparator",
    "collapseMargins",
    "getMarginRight",
    "_computeSizeHint",
    "percentMinWidth",
    "margin",
    "l",
    "destruct",
    "HBox"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A horizontal box layout.\n *\n * The horizontal box layout lays out widgets in a horizontal row, from left\n * to right.\n *\n * *Features*\n *\n * * Minimum and maximum dimensions\n * * Prioritized growing/shrinking (flex)\n * * Margins (with horizontal collapsing)\n * * Auto sizing (ignoring percent values)\n * * Percent widths (not relevant for size hint)\n * * Alignment (child property {@link qx.ui.core.LayoutItem#alignX} is ignored)\n * * Horizontal spacing (collapsed with margins)\n * * Reversed children layout (from last to first)\n * * Vertical children stretching (respecting size hints)\n *\n * *Item Properties*\n *\n * <ul>\n * <li><strong>flex</strong> <em>(Integer)</em>: The flexibility of a layout item determines how the container\n *   distributes remaining empty space among its children. If items are made\n *   flexible, they can grow or shrink accordingly. Their relative flex values\n *   determine how the items are being resized, i.e. the larger the flex ratio\n *   of two items, the larger the resizing of the first item compared to the\n *   second.\n *\n *   If there is only one flex item in a layout container, its actual flex\n *   value is not relevant. To disallow items to become flexible, set the\n *   flex value to zero.\n * </li>\n * <li><strong>width</strong> <em>(String)</em>: Allows to define a percent\n *   width for the item. The width in percent, if specified, is used instead\n *   of the width defined by the size hint. The minimum and maximum width still\n *   takes care of the element's limits. It has no influence on the layout's\n *   size hint. Percent values are mostly useful for widgets which are sized by\n *   the outer hierarchy.\n * </li>\n * </ul>\n *\n * *Example*\n *\n * Here is a little example of how to use the HBox layout.\n *\n * <pre class=\"javascript\">\n * var layout = new qx.ui.layout.HBox();\n * layout.setSpacing(4); // apply spacing\n *\n * var container = new qx.ui.container.Composite(layout);\n *\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * container.add(new qx.ui.core.Widget());\n * </pre>\n *\n * *External Documentation*\n *\n * See <a href='http://manual.qooxdoo.org/${qxversion}/pages/layout/box.html'>extended documentation</a>\n * and links to demos for this layout.\n *\n */\nqx.Class.define(\"qx.ui.layout.HBox\",\n{\n  extend : qx.ui.layout.Abstract,\n\n\n\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param spacing {Integer?0} The spacing between child widgets {@link #spacing}.\n   * @param alignX {String?\"left\"} Horizontal alignment of the whole children\n   *     block {@link #alignX}.\n   * @param separator {String|qx.ui.decoration.IDecorator?} A separator to render between the items\n   */\n  construct : function(spacing, alignX, separator)\n  {\n    this.base(arguments);\n\n    if (spacing) {\n      this.setSpacing(spacing);\n    }\n\n    if (alignX) {\n      this.setAlignX(alignX);\n    }\n\n    if (separator) {\n      this.setSeparator(separator);\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties :\n  {\n    /**\n     * Horizontal alignment of the whole children block. The horizontal\n     * alignment of the child is completely ignored in HBoxes (\n     * {@link qx.ui.core.LayoutItem#alignX}).\n     */\n    alignX :\n    {\n      check : [ \"left\", \"center\", \"right\" ],\n      init : \"left\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /**\n     * Vertical alignment of each child. Can be overridden through\n     * {@link qx.ui.core.LayoutItem#alignY}.\n     */\n    alignY :\n    {\n      check : [ \"top\", \"middle\", \"bottom\" ],\n      init : \"top\",\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Horizontal spacing between two children */\n    spacing :\n    {\n      check : \"Integer\",\n      init : 0,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Separator lines to use between the objects */\n    separator :\n    {\n      check : \"Decorator\",\n      nullable : true,\n      apply : \"_applyLayoutChange\"\n    },\n\n\n    /** Whether the actual children list should be laid out in reversed order. */\n    reversed :\n    {\n      check : \"Boolean\",\n      init : false,\n      apply : \"_applyReversed\"\n    }\n  },\n\n\n\n\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members :\n  {\n    __widths : null,\n    __flexs : null,\n    __enableFlex : null,\n    __children : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyReversed : function()\n    {\n      // easiest way is to invalidate the cache\n      this._invalidChildrenCache = true;\n\n      // call normal layout change\n      this._applyLayoutChange();\n    },\n\n\n    /**\n     * Rebuilds caches for flex and percent layout properties\n     */\n    __rebuildCache : function()\n    {\n      var children = this._getLayoutChildren();\n      var length = children.length;\n      var enableFlex = false;\n      var reuse = this.__widths && this.__widths.length != length && this.__flexs && this.__widths;\n      var props;\n\n      // Sparse array (keep old one if lengths has not been modified)\n      var widths = reuse ? this.__widths : new Array(length);\n      var flexs = reuse ? this.__flexs : new Array(length);\n\n      // Reverse support\n      if (this.getReversed()) {\n        children = children.concat().reverse();\n      }\n\n      // Loop through children to preparse values\n      for (var i=0; i<length; i++)\n      {\n        props = children[i].getLayoutProperties();\n\n        if (props.width != null) {\n          widths[i] = parseFloat(props.width) / 100;\n        }\n\n        if (props.flex != null)\n        {\n          flexs[i] = props.flex;\n          enableFlex = true;\n        } else {\n          // reset (in case the index of the children changed: BUG #3131)\n          flexs[i] = 0;\n        }\n      }\n\n      // Store data\n      if (!reuse)\n      {\n        this.__widths = widths;\n        this.__flexs = flexs;\n      }\n\n      this.__enableFlex = enableFlex;\n      this.__children = children;\n\n      // Clear invalidation marker\n      delete this._invalidChildrenCache;\n    },\n\n\n\n\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    verifyLayoutProperty : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(item, name, value)\n      {\n        this.assert(name === \"flex\" || name === \"width\", \"The property '\"+name+\"' is not supported by the HBox layout!\");\n\n        if (name ==\"width\")\n        {\n          this.assertMatch(value, qx.ui.layout.Util.PERCENT_VALUE);\n        }\n        else\n        {\n          // flex\n          this.assertNumber(value);\n          this.assert(value >= 0);\n        }\n      },\n\n      \"false\" : null\n    }),\n\n\n    // overridden\n    renderLayout : function(availWidth, availHeight, padding)\n    {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      // Cache children\n      var children = this.__children;\n      var length = children.length;\n      var util = qx.ui.layout.Util;\n\n\n      // Compute gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeHorizontalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeHorizontalGaps(children, spacing, true);\n      }\n\n\n      // First run to cache children data and compute allocated width\n      var i, child, width, percent;\n      var widths = [], hint;\n      var allocatedWidth = gaps;\n\n      for (i=0; i<length; i+=1)\n      {\n        percent = this.__widths[i];\n        hint = children[i].getSizeHint();\n\n        width = percent != null ?\n          Math.floor((availWidth - gaps) * percent) :\n          hint.width;\n\n        // Limit computed value\n        if (width < hint.minWidth) {\n          width = hint.minWidth;\n        } else if (width > hint.maxWidth) {\n          width = hint.maxWidth;\n        }\n        \n        widths.push(width);\n        allocatedWidth += width;\n      }\n\n\n      // Flex support (growing/shrinking)\n      if (this.__enableFlex && allocatedWidth != availWidth)\n      {\n        var flexibles = {};\n        var flex, offset;\n\n        for (i=0; i<length; i+=1)\n        {\n          flex = this.__flexs[i];\n\n          if (flex > 0)\n          {\n            hint = children[i].getSizeHint();\n\n            flexibles[i]=\n            {\n              min : hint.minWidth,\n              value : widths[i],\n              max : hint.maxWidth,\n              flex : flex\n            };\n          }\n        }\n\n        var result = util.computeFlexOffsets(flexibles, availWidth, allocatedWidth);\n\n        for (i in result)\n        {\n          offset = result[i].offset;\n\n          widths[i] += offset;\n          allocatedWidth += offset;\n        }\n      }\n\n\n      // Start with left coordinate\n      var left = children[0].getMarginLeft();\n\n      // Alignment support\n      if (allocatedWidth < availWidth && this.getAlignX() != \"left\")\n      {\n        left = availWidth - allocatedWidth;\n\n        if (this.getAlignX() === \"center\") {\n          left = Math.round(left / 2);\n        }\n      }\n\n\n      // Layouting children\n      var hint, top, height, width, marginRight, marginTop, marginBottom;\n      var spacing = this.getSpacing();\n\n      // Pre configure separators\n      this._clearSeparators();\n\n      // Compute separator width\n      if (separator)\n      {\n        var separatorInsets = qx.theme.manager.Decoration.getInstance().resolve(separator).getInsets();\n        var separatorWidth = separatorInsets.left + separatorInsets.right;\n      }\n\n      // Render children and separators\n      for (i=0; i<length; i+=1)\n      {\n        child = children[i];\n        width = widths[i];\n        hint = child.getSizeHint();\n\n        marginTop = child.getMarginTop();\n        marginBottom = child.getMarginBottom();\n\n        // Find usable height\n        height = Math.max(hint.minHeight, Math.min(availHeight-marginTop-marginBottom, hint.maxHeight));\n\n        // Respect vertical alignment\n        top = util.computeVerticalAlignOffset(child.getAlignY()||this.getAlignY(), height, availHeight, marginTop, marginBottom);\n\n        // Add collapsed margin\n        if (i > 0)\n        {\n          // Whether a separator has been configured\n          if (separator)\n          {\n            // add margin of last child and spacing\n            left += marginRight + spacing;\n\n            // then render the separator at this position\n            this._renderSeparator(separator, {\n              left : left + padding.left,\n              top : padding.top,\n              width : separatorWidth,\n              height : availHeight\n            });\n\n            // and finally add the size of the separator, the spacing (again) and the left margin\n            left += separatorWidth + spacing + child.getMarginLeft();\n          }\n          else\n          {\n            // Support margin collapsing when no separator is defined\n            left += util.collapseMargins(spacing, marginRight, child.getMarginLeft());\n          }\n        }\n\n        // Layout child\n        child.renderLayout(left + padding.left, top + padding.top, width, height);\n\n        // Add width\n        left += width;\n\n        // Remember right margin (for collapsing)\n        marginRight = child.getMarginRight();\n      }\n    },\n\n\n    // overridden\n    _computeSizeHint : function()\n    {\n      // Rebuild flex/width caches\n      if (this._invalidChildrenCache) {\n        this.__rebuildCache();\n      }\n\n      var util = qx.ui.layout.Util;\n      var children = this.__children;\n\n      // Initialize\n      var minWidth=0, width=0, percentMinWidth=0;\n      var minHeight=0, height=0;\n      var child, hint, margin;\n\n      // Iterate over children\n      for (var i=0, l=children.length; i<l; i+=1)\n      {\n        child = children[i];\n        hint = child.getSizeHint();\n\n        // Sum up widths\n        width += hint.width;\n\n        // Detect if child is shrinkable or has percent width and update minWidth\n        var flex = this.__flexs[i];\n        var percent = this.__widths[i];\n        if (flex) {\n          minWidth += hint.minWidth;\n        } else if (percent) {\n          percentMinWidth = Math.max(percentMinWidth, Math.round(hint.minWidth/percent));\n        } else {\n          minWidth += hint.width;\n        }\n\n        // Build vertical margin sum\n        margin = child.getMarginTop() + child.getMarginBottom();\n\n        // Find biggest height\n        if ((hint.height+margin) > height) {\n          height = hint.height + margin;\n        }\n\n        // Find biggest minHeight\n        if ((hint.minHeight+margin) > minHeight) {\n          minHeight = hint.minHeight + margin;\n        }\n      }\n\n      minWidth += percentMinWidth;\n\n      // Respect gaps\n      var spacing = this.getSpacing();\n      var separator = this.getSeparator();\n      if (separator) {\n        var gaps = util.computeHorizontalSeparatorGaps(children, spacing, separator);\n      } else {\n        var gaps = util.computeHorizontalGaps(children, spacing, true);\n      }\n\n      // Return hint\n      return {\n        minWidth : minWidth + gaps,\n        width : width + gaps,\n        minHeight : minHeight,\n        height : height\n      };\n    }\n  },\n\n\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct : function() {\n    this.__widths = this.__flexs = this.__children = null;\n  }\n});\n"
  ]
}