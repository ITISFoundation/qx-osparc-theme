{
  "className": "qx.ui.form.HoverButton",
  "packageName": "qx.ui.form",
  "name": "HoverButton",
  "superClass": "qx.ui.basic.Atom",
  "interfaces": [
    "qx.ui.form.IExecutable"
  ],
  "mixins": [
    "qx.ui.core.MExecutable"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 53,
        "column": 0
      },
      "end": {
        "line": 182,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The HoverButton is an {@link qx.ui.basic.Atom}, which fires repeatedly\nexecute events while the pointer is over the widget.\n\nThe rate at which the execute event is fired accelerates is the pointer keeps\ninside of the widget. The initial delay and the interval time can be set using\nthe properties {@link #firstInterval} and {@link #interval}. The\n{@link #execute} events will be fired in a shorter amount of time if the pointer\nremains over the widget, until the min {@link #minTimer} is reached.\nThe {@link #timerDecrease} property sets the amount of milliseconds which will\ndecreased after every firing.\n\n*Example*\n\nHere is a little example of how to use the widget.\n\n<pre class='javascript'>\nvar button = new qx.ui.form.HoverButton(\"Hello World\");\n\nbutton.addListener(\"execute\", function(e) {\nalert(\"Button is hovered\");\n}, this);\n\nthis.getRoot.add(button);\n</pre>\n\nThis example creates a button with the label \"Hello World\" and attaches an\nevent listener to the {@link #execute} event.\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/hoverbutton.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 63,
        "column": 2
      },
      "end": {
        "line": 72,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "label {String} Label to use",
          "paramName": "label",
          "description": " Label to use",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "icon {String?null} Icon to use",
          "paramName": "icon",
          "description": " Icon to use",
          "optional": true,
          "defaultValue": "null",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 78,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "hover-button",
      "overriddenFrom": "qx.ui.basic.Atom",
      "appearsIn": {
        "qx.ui.basic.Atom": "class",
        "qx.ui.core.Widget": "class"
      }
    },
    "interval": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Interval used after the first run of the timer. Usually a smaller value\nthan the \"firstInterval\" property value to get a faster reaction."
          }
        ]
      },
      "name": "interval",
      "propertyType": "new",
      "check": "Integer",
      "defaultValue": 80
    },
    "firstInterval": {
      "location": {
        "start": {
          "line": 99,
          "column": 4
        },
        "end": {
          "line": 103,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Interval used for the first run of the timer. Usually a greater value\nthan the \"interval\" property value to a little delayed reaction at the first\ntime."
          }
        ]
      },
      "name": "firstInterval",
      "propertyType": "new",
      "check": "Integer",
      "defaultValue": 200
    },
    "minTimer": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "This configures the minimum value for the timer interval."
          }
        ]
      },
      "name": "minTimer",
      "propertyType": "new",
      "check": "Integer",
      "defaultValue": 20
    },
    "timerDecrease": {
      "location": {
        "start": {
          "line": 113,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Decrease of the timer on each interval (for the next interval) until minTimer reached."
          }
        ]
      },
      "name": "timerDecrease",
      "propertyType": "new",
      "check": "Integer",
      "defaultValue": 2
    },
    "command": {
      "type": "property",
      "name": "command",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MExecutable"
    }
  },
  "members": {
    "__timer": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_onPointerOver": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 145,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Start timer on pointer over"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event",
            "paramName": "e",
            "description": " The pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerOut": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Stop timer on pointer out"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event",
            "paramName": "e",
            "description": " The pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onInterval": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fire execute event on timer interval event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setCommand": {
      "type": "function",
      "name": "setCommand",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IExecutable",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nCOMMAND PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Set the command of this executable."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "command {qx.ui.command.Command} The command.",
            "paramName": "command",
            "description": " The command.",
            "type": "qx.ui.command.Command"
          }
        ]
      }
    },
    "getCommand": {
      "type": "function",
      "name": "getCommand",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IExecutable",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the current set command of this executable."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.command.Command} The current set command.",
            "type": "qx.ui.command.Command",
            "desc": " The current set command."
          }
        ]
      }
    },
    "execute": {
      "type": "function",
      "name": "execute",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IExecutable"
    },
    "__onCommandExecute": {
      "type": "function",
      "name": "__onCommandExecute",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.core.MExecutable",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the execute event of the command."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} The execute event of the command.",
            "paramName": "e",
            "description": " The execute event of the command.",
            "type": "qx.event.type.Event"
          }
        ]
      }
    },
    "_applyCommand": {
      "type": "function",
      "name": "_applyCommand",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.MExecutable"
    },
    "resetCommand": {
      "type": "function",
      "name": "resetCommand",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MExecutable"
    },
    "getInterval": {
      "type": "function",
      "name": "getInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInterval": {
      "type": "function",
      "name": "setInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInterval": {
      "type": "function",
      "name": "resetInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getFirstInterval": {
      "type": "function",
      "name": "getFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setFirstInterval": {
      "type": "function",
      "name": "setFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetFirstInterval": {
      "type": "function",
      "name": "resetFirstInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getMinTimer": {
      "type": "function",
      "name": "getMinTimer",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setMinTimer": {
      "type": "function",
      "name": "setMinTimer",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetMinTimer": {
      "type": "function",
      "name": "resetMinTimer",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTimerDecrease": {
      "type": "function",
      "name": "getTimerDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTimerDecrease": {
      "type": "function",
      "name": "setTimerDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTimerDecrease": {
      "type": "function",
      "name": "resetTimerDecrease",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 179,
        "column": 2
      },
      "end": {
        "line": 181,
        "column": 3
      }
    }
  },
  "descendants": []
}