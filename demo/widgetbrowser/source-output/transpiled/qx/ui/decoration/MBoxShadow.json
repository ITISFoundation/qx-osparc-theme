{
  "className": "qx.ui.decoration.MBoxShadow",
  "packageName": "qx.ui.decoration",
  "name": "MBoxShadow",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 57,
        "column": 0
      },
      "end": {
        "line": 177,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Mixin for the box shadow CSS property.\nThis mixin is usually used by {@link qx.ui.decoration.Decorator}.\n\nKeep in mind that this is not supported by all browsers:\n\n* Firefox 3,5+\n* IE9+\n* Safari 3.0+\n* Opera 10.5+\n* Chrome 4.0+\n\nIt is possible to define multiple box shadows by setting an\narray containing the needed values as the property value.\nIn case multiple values are specified, the values of the properties\nare repeated until all match in length.\n\nAn example:\n<pre class=\"javascript\">\n'my-decorator': {\nstyle: {\nshadowBlurRadius: 2,\nshadowVerticalLength: 1,\nshadowColor: ['rgba(0, 0, 0, 0.2)', 'rgba(255, 255, 255, 0.4)'],\ninset: [true, false]\n}\n}\n</pre>\nwhich is the same as:\n<pre class=\"javascript\">\n'my-decorator': {\nstyle: {\nshadowBlurRadius: [2, 2],\nshadowVerticalLength: [1, 1],\nshadowColor: ['rgba(0, 0, 0, 0.2)', 'rgba(255, 255, 255, 0.4)'],\ninset: [true, false]\n}\n}"
        }
      ]
    }
  },
  "type": "mixin",
  "properties": {
    "shadowHorizontalLength": {
      "type": "property",
      "name": "shadowHorizontalLength",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "shadowVerticalLength": {
      "type": "property",
      "name": "shadowVerticalLength",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "shadowBlurRadius": {
      "type": "property",
      "name": "shadowBlurRadius",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "shadowSpreadRadius": {
      "type": "property",
      "name": "shadowSpreadRadius",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "shadowColor": {
      "type": "property",
      "name": "shadowColor",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "inset": {
      "type": "property",
      "name": "inset",
      "abstract": false,
      "mixin": true,
      "access": "public"
    },
    "shadowLength": {
      "type": "property",
      "name": "shadowLength",
      "abstract": false,
      "mixin": true,
      "access": "public"
    }
  },
  "members": {
    "_styleBoxShadow": {
      "location": {
        "start": {
          "line": 120,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the box shadow styles in place to the\ngiven map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyBoxShadow": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getShadowHorizontalLength": {
      "type": "function",
      "name": "getShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowHorizontalLength": {
      "type": "function",
      "name": "setShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowHorizontalLength": {
      "type": "function",
      "name": "resetShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowVerticalLength": {
      "type": "function",
      "name": "getShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowVerticalLength": {
      "type": "function",
      "name": "setShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowVerticalLength": {
      "type": "function",
      "name": "resetShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowBlurRadius": {
      "type": "function",
      "name": "getShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowBlurRadius": {
      "type": "function",
      "name": "setShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowBlurRadius": {
      "type": "function",
      "name": "resetShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowSpreadRadius": {
      "type": "function",
      "name": "getShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowSpreadRadius": {
      "type": "function",
      "name": "setShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowSpreadRadius": {
      "type": "function",
      "name": "resetShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowColor": {
      "type": "function",
      "name": "getShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowColor": {
      "type": "function",
      "name": "setShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowColor": {
      "type": "function",
      "name": "resetShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInset": {
      "type": "function",
      "name": "getInset",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInset": {
      "type": "function",
      "name": "setInset",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInset": {
      "type": "function",
      "name": "resetInset",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowLength": {
      "type": "function",
      "name": "getShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowLength": {
      "type": "function",
      "name": "setShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowLength": {
      "type": "function",
      "name": "resetShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "descendants": []
}