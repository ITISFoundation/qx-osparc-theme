{
  "className": "qx.ui.form.Button",
  "packageName": "qx.ui.form",
  "name": "Button",
  "superClass": "qx.ui.basic.Atom",
  "interfaces": [
    "qx.ui.form.IExecutable"
  ],
  "mixins": [
    "qx.ui.core.MExecutable"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 52,
        "column": 0
      },
      "end": {
        "line": 355,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A Button widget which supports various states and allows it to be used\nvia the mouse, touch, pen and the keyboard.\n\nIf the user presses the button by clicking on it, or the <code>Enter</code> or\n<code>Space</code> keys, the button fires an {@link qx.ui.core.MExecutable#execute} event.\n\nIf the {@link qx.ui.core.MExecutable#command} property is set, the\ncommand is executed as well.\n\n*Example*\n\nHere is a little example of how to use the widget.\n\n<pre class='javascript'>\nvar button = new qx.ui.form.Button(\"Hello World\");\n\nbutton.addListener(\"execute\", function(e) {\nalert(\"Button was clicked\");\n}, this);\n\nthis.getRoot().add(button);\n</pre>\n\nThis example creates a button with the label \"Hello World\" and attaches an\nevent listener to the {@link #execute} event.\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/button.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 70,
        "column": 2
      },
      "end": {
        "line": 92,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "label {String} label of the atom",
          "paramName": "label",
          "description": " label of the atom",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "icon {String?null} Icon URL of the atom",
          "paramName": "icon",
          "description": " Icon URL of the atom",
          "optional": true,
          "defaultValue": "null",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "command {qx.ui.command.Command?null} Command instance to connect with",
          "paramName": "command",
          "description": " Command instance to connect with",
          "optional": true,
          "defaultValue": "null",
          "type": "qx.ui.command.Command"
        }
      ]
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 109,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "button",
      "overriddenFrom": "qx.ui.basic.Atom",
      "appearsIn": {
        "qx.ui.basic.Atom": "class",
        "qx.ui.core.Widget": "class"
      }
    },
    "focusable": {
      "location": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "focusable",
      "propertyType": "new",
      "refine": true,
      "defaultValue": true,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "command": {
      "type": "property",
      "name": "command",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.core.MExecutable"
    }
  },
  "members": {
    "_forwardStates": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          },
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_forwardStates)"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "press": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 159,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nUSER API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Manually press the button"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "release": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 170,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Manually release the button"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reset": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Completely reset the button (remove all states)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "prop {String} Name of the property.",
            "paramName": "prop",
            "description": " Name of the property.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget",
        "qx.core.Object",
        "qx.core.MProperty"
      ]
    },
    "_onPointerOver": {
      "location": {
        "start": {
          "line": 200,
          "column": 4
        },
        "end": {
          "line": 213,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT LISTENERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Listener method for \"pointerover\" event\n<ul>\n<li>Adds state \"hovered\"</li>\n<li>Removes \"abandoned\" and adds \"pressed\" state (if \"abandoned\" state is set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerOut": {
      "location": {
        "start": {
          "line": 225,
          "column": 4
        },
        "end": {
          "line": 238,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"pointerout\" event\n<ul>\n<li>Removes \"hovered\" state</li>\n<li>Adds \"abandoned\" and removes \"pressed\" state (if \"pressed\" state is set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerDown": {
      "location": {
        "start": {
          "line": 250,
          "column": 4
        },
        "end": {
          "line": 264,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"pointerdown\" event\n<ul>\n<li>Removes \"abandoned\" state</li>\n<li>Adds \"pressed\" state</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerUp": {
      "location": {
        "start": {
          "line": 277,
          "column": 4
        },
        "end": {
          "line": 296,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"pointerup\" event\n<ul>\n<li>Removes \"pressed\" state (if set)</li>\n<li>Removes \"abandoned\" state (if set)</li>\n<li>Adds \"hovered\" state (if \"abandoned\" state is not set)</li>\n</ul>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Mouse event",
            "paramName": "e",
            "description": " Mouse event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onTap": {
      "location": {
        "start": {
          "line": 304,
          "column": 4
        },
        "end": {
          "line": 309,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"tap\" event which stops the propagation."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} Pointer event",
            "paramName": "e",
            "description": " Pointer event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyDown": {
      "location": {
        "start": {
          "line": 319,
          "column": 4
        },
        "end": {
          "line": 329,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"keydown\" event.<br/>\nRemoves \"abandoned\" and adds \"pressed\" state\nfor the keys \"Enter\" or \"Space\""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Key event",
            "paramName": "e",
            "description": " Key event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyUp": {
      "location": {
        "start": {
          "line": 339,
          "column": 4
        },
        "end": {
          "line": 353,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Listener method for \"keyup\" event.<br/>\nRemoves \"abandoned\" and \"pressed\" state (if \"pressed\" state is set)\nfor the keys \"Enter\" or \"Space\""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} Key event",
            "paramName": "e",
            "description": " Key event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setCommand": {
      "type": "function",
      "name": "setCommand",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.command.Command",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "getCommand": {
      "type": "function",
      "name": "getCommand",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.command.Command",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "execute": {
      "type": "function",
      "name": "execute",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IExecutable"
    },
    "__onCommandExecute": {
      "type": "function",
      "name": "__onCommandExecute",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.core.MExecutable",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the execute event of the command."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} The execute event of the command.",
            "paramName": "e",
            "description": " The execute event of the command.",
            "type": "qx.event.type.Event"
          }
        ]
      }
    },
    "_applyCommand": {
      "type": "function",
      "name": "_applyCommand",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.MExecutable"
    },
    "resetCommand": {
      "type": "function",
      "name": "resetCommand",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "descendants": [
    "qx.ui.form.RepeatButton",
    "qx.ui.toolbar.Button",
    "qx.ui.form.RadioButton",
    "qx.ui.form.MenuButton"
  ]
}