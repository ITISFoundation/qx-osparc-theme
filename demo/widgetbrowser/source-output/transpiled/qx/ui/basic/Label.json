{
  "className": "qx.ui.basic.Label",
  "packageName": "qx.ui.basic",
  "name": "Label",
  "superClass": "qx.ui.core.Widget",
  "interfaces": [
    "qx.ui.form.IStringForm"
  ],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 61,
        "column": 0
      },
      "end": {
        "line": 588,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nFabian Jakobs (fjakobs)\nMartin Wittemann (martinwittemann)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The label class brings typical text content to the widget system.\n\nIt supports simple text nodes and complex HTML (rich). The default\ncontent mode is for text only. The mode is changeable through the property\n{@link #rich}.\n\nThe label supports heightForWidth when used in HTML mode. This means\nthat multi line HTML automatically computes the correct preferred height.\n\n*Example*\n\nHere is a little example of how to use the widget.\n\n<pre class='javascript'>\n// a simple text label without wrapping and markup support\nvar label1 = new qx.ui.basic.Label(\"Simple text label\");\nthis.getRoot().add(label1, {left:20, top:10});\n\n// a HTML label with automatic line wrapping\nvar label2 = new qx.ui.basic.Label().set({\nvalue: \"A <b>long label</b> text with auto-wrapping. This also may contain <b style='color:red'>rich HTML</b> markup.\",\nrich : true,\nwidth: 120\n});\nthis.getRoot().add(label2, {left:20, top:50});\n</pre>\n\nThe first label in this example is a basic text only label. As such no\nautomatic wrapping is supported. The second label is a long label containing\nHTML markup with automatic line wrapping.\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/label.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>\n\nNOTE: Instances of this class must be disposed of after use"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 77,
        "column": 2
      },
      "end": {
        "line": 88,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "value {String} Text or HTML content to use",
          "paramName": "value",
          "description": " Text or HTML content to use",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "rich": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Switches between rich HTML and text content. The text mode (<code>false</code>) supports\nadvanced features like ellipsis when the available space is not\nenough. HTML mode (<code>true</code>) supports multi-line content and all the\nmarkup features of HTML content."
          }
        ]
      },
      "name": "rich",
      "propertyType": "new",
      "event": "changeRich",
      "apply": "_applyRich",
      "check": "Boolean",
      "defaultValue": false
    },
    "wrap": {
      "location": {
        "start": {
          "line": 120,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Controls whether text wrap is activated or not. But please note, that\nthis property works only in combination with the property {@link #rich}.\nThe {@link #wrap} has only an effect if the {@link #rich} property is\nset to <code>true</code>, otherwise {@link #wrap} has no effect."
          }
        ]
      },
      "name": "wrap",
      "propertyType": "new",
      "apply": "_applyWrap",
      "check": "Boolean",
      "defaultValue": true
    },
    "value": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Contains the HTML or text content. Interpretation depends on the value\nof {@link #rich}. In text mode entities and other HTML special content\nis not supported. But it is possible to use unicode escape sequences\nto insert symbols and other non ASCII characters."
          }
        ]
      },
      "name": "value",
      "propertyType": "new",
      "event": "changeValue",
      "apply": "_applyValue",
      "allowNull": true,
      "check": "String"
    },
    "buddy": {
      "location": {
        "start": {
          "line": 155,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The buddy property can be used to connect the label to another widget.\nThat causes two things:\n<ul>\n<li>The label will always take the same enabled state as the buddy\nwidget.\n</li>\n<li>A tap on the label will focus the buddy widget.</li>\n</ul>\nThis is the behavior of the for attribute of HTML:\nhttp://www.w3.org/TR/html401/interact/forms.html#adef-for"
          }
        ]
      },
      "name": "buddy",
      "propertyType": "new",
      "apply": "_applyBuddy",
      "allowNull": true,
      "check": "qx.ui.core.Widget"
    },
    "textAlign": {
      "location": {
        "start": {
          "line": 166,
          "column": 4
        },
        "end": {
          "line": 173,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Control the text alignment"
          }
        ]
      },
      "name": "textAlign",
      "propertyType": "new",
      "themeable": true,
      "event": "changeTextAlign",
      "apply": "_applyTextAlign",
      "allowNull": true,
      "possibleValues": [
        "left",
        "center",
        "right",
        "justify"
      ]
    },
    "appearance": {
      "location": {
        "start": {
          "line": 177,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "label",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "selectable": {
      "location": {
        "start": {
          "line": 185,
          "column": 4
        },
        "end": {
          "line": 189,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "selectable",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "allowGrowX": {
      "location": {
        "start": {
          "line": 193,
          "column": 4
        },
        "end": {
          "line": 197,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "allowGrowX",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "allowGrowY": {
      "location": {
        "start": {
          "line": 201,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "allowGrowY",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "allowShrinkY": {
      "location": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 212,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "allowShrinkY",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    }
  },
  "members": {
    "__font": {
      "location": {
        "start": {
          "line": 227,
          "column": 4
        },
        "end": {
          "line": 227,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__invalidContentSize": {
      "location": {
        "start": {
          "line": 228,
          "column": 4
        },
        "end": {
          "line": 228,
          "column": 31
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__tapListenerId": {
      "location": {
        "start": {
          "line": 229,
          "column": 4
        },
        "end": {
          "line": 229,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__webfontListenerId": {
      "location": {
        "start": {
          "line": 230,
          "column": 4
        },
        "end": {
          "line": 230,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getContentHint": {
      "location": {
        "start": {
          "line": 241,
          "column": 4
        },
        "end": {
          "line": 253,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nWIDGET API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map}",
            "type": "Map",
            "desc": ""
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_hasHeightForWidth": {
      "location": {
        "start": {
          "line": 257,
          "column": 4
        },
        "end": {
          "line": 259,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the item supports height for width",
            "type": "Boolean",
            "desc": " Whether the item supports height for width"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": [
        "qx.ui.core.LayoutItem"
      ]
    },
    "_applySelectable": {
      "location": {
        "start": {
          "line": 263,
          "column": 4
        },
        "end": {
          "line": 282,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_getContentHeightForWidth": {
      "location": {
        "start": {
          "line": 286,
          "column": 4
        },
        "end": {
          "line": 292,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer} Incoming width (as limitation)",
            "paramName": "width",
            "description": " Incoming width (as limitation)",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Computed height while respecting the given width.",
            "type": "Integer",
            "desc": " Computed height while respecting the given width."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_createContentElement": {
      "location": {
        "start": {
          "line": 296,
          "column": 4
        },
        "end": {
          "line": 298,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Element} The widget's content element",
            "type": "qx.html.Element",
            "desc": " The widget's content element"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_applyTextAlign": {
      "location": {
        "start": {
          "line": 302,
          "column": 4
        },
        "end": {
          "line": 304,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyTextColor": {
      "location": {
        "start": {
          "line": 308,
          "column": 4
        },
        "end": {
          "line": 315,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "__contentSize": {
      "location": {
        "start": {
          "line": 331,
          "column": 4
        },
        "end": {
          "line": 335,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nLABEL ADDONS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Internal fallback of label size when no font is defined"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__contentSize)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "_applyFont": {
      "location": {
        "start": {
          "line": 339,
          "column": 4
        },
        "end": {
          "line": 373,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "__computeContentSize": {
      "location": {
        "start": {
          "line": 382,
          "column": 4
        },
        "end": {
          "line": 398,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal utility to compute the content dimensions."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "width {Integer?null} Optional width constraint",
            "paramName": "width",
            "description": " Optional width constraint",
            "optional": true,
            "defaultValue": "null",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with <code>width</code> and <code>height</code> keys",
            "type": "Map",
            "desc": " Map with <code>width</code> and <code>height</code> keys"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__fixEllipsis": {
      "location": {
        "start": {
          "line": 407,
          "column": 4
        },
        "end": {
          "line": 422,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Firefox > 9 on OS X will draw an ellipsis on top of the label content even\nthough there is enough space for the text. Re-applying the content forces\na recalculation and fixes the problem. See qx bug #6293"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_applyBuddy": {
      "location": {
        "start": {
          "line": 433,
          "column": 4
        },
        "end": {
          "line": 456,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nPROPERTY APPLIER\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyRich": {
      "location": {
        "start": {
          "line": 460,
          "column": 4
        },
        "end": {
          "line": 470,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyWrap": {
      "location": {
        "start": {
          "line": 474,
          "column": 5
        },
        "end": {
          "line": 489,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeLocale": {
      "location": {
        "start": {
          "line": 498,
          "column": 4
        },
        "end": {
          "line": 509,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Locale change event handler"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onWebFontStatusChange": {
      "location": {
        "start": {
          "line": 517,
          "column": 4
        },
        "end": {
          "line": 533,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Triggers layout recalculation after a web font was loaded"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ev {qx.event.type.Data} \"changeStatus\" event",
            "paramName": "ev",
            "description": " \"changeStatus\" event",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyValue": {
      "location": {
        "start": {
          "line": 537,
          "column": 4
        },
        "end": {
          "line": 565,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "getRich": {
      "type": "function",
      "name": "getRich",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isRich": {
      "type": "function",
      "name": "isRich",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRich": {
      "type": "function",
      "name": "setRich",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRich": {
      "type": "function",
      "name": "resetRich",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getWrap": {
      "type": "function",
      "name": "getWrap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isWrap": {
      "type": "function",
      "name": "isWrap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWrap": {
      "type": "function",
      "name": "setWrap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWrap": {
      "type": "function",
      "name": "resetWrap",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBuddy": {
      "type": "function",
      "name": "getBuddy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.core.Widget",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBuddy": {
      "type": "function",
      "name": "setBuddy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.core.Widget",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBuddy": {
      "type": "function",
      "name": "resetBuddy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTextAlign": {
      "type": "function",
      "name": "getTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTextAlign": {
      "type": "function",
      "name": "setTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTextAlign": {
      "type": "function",
      "name": "resetTextAlign",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 576,
        "column": 2
      },
      "end": {
        "line": 587,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": [
    "qxc.ui.versionlabel.VersionLabel"
  ]
}