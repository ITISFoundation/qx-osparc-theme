{
  "className": "qx.util.DeferredCallManager",
  "packageName": "qx.util",
  "name": "DeferredCallManager",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 177,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class manages the timer used for deferred calls. All\n{@link qx.util.DeferredCall} instances use the single timer from this class.\n\nNOTE: Instances of this class must be disposed of after use"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 40,
        "column": 2
      },
      "end": {
        "line": 45,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "members": {
    "__timeoutId": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__currentQueue": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__calls": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 18
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__hasCalls": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__timeoutWrapper": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "schedule": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Schedule a deferred call"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "deferredCall {qx.util.DeferredCall} The call to schedule",
            "paramName": "deferredCall",
            "description": " The call to schedule",
            "type": "qx.util.DeferredCall"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "refreshTimeout": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Refresh the timeout if the current one is not active anymore.\nThis is a very special case which can happen in unit tests using\nfakeTimers, which overrides the window.setTimeout function (amongst others)\nafter restoring the sinon sandbox the timeout must be refreshed otherwise\nDeferredCalls would never fire."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancel": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 127,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Cancel a scheduled deferred call"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "deferredCall {qx.util.DeferredCall} The call to schedule",
            "paramName": "deferredCall",
            "description": " The call to schedule",
            "type": "qx.util.DeferredCall"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__timeout": {
      "location": {
        "start": {
          "line": 135,
          "column": 4
        },
        "end": {
          "line": 159,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper function for the timer."
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 170,
        "column": 2
      },
      "end": {
        "line": 176,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}