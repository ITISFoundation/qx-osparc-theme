{
  "className": "qx.ui.list.List",
  "packageName": "qx.ui.list",
  "name": "List",
  "superClass": "qx.ui.virtual.core.Scroller",
  "interfaces": [
    "qx.data.controller.ISelection"
  ],
  "mixins": [
    "qx.ui.virtual.selection.MModel"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 64,
        "column": 0
      },
      "end": {
        "line": 949,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Hagendorn (chris_schmidt)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The <code>qx.ui.list.List</code> is based on the virtual infrastructure and\nsupports filtering, sorting, grouping, single selection, multi selection,\ndata binding and custom rendering.\n\nUsing the virtual infrastructure has considerable advantages when there is a\nhuge amount of model items to render because the virtual infrastructure only\ncreates widgets for visible items and reuses them. This saves both creation\ntime and memory.\n\nWith the {@link qx.ui.list.core.IListDelegate} interface it is possible\nto configure the list's behavior (item and group renderer configuration,\nfiltering, sorting, grouping, etc.).\n\nHere's an example of how to use the widget:\n<pre class=\"javascript\">\n//create the model data\nvar rawData = [];\nfor (var i = 0; i < 2500; i++) {\nrawData[i] = \"Item No \" + i;\n}\nvar model = qx.data.marshal.Json.createModel(rawData);\n\n//create the list\nvar list = new qx.ui.list.List(model);\n\n//configure the lists's behavior\nvar delegate = {\nsorter : function(a, b) {\nreturn a > b ? 1 : a < b ? -1 : 0;\n}\n};\nlist.setDelegate(delegate);\n\n//Pre-Select \"Item No 20\"\nlist.getSelection().push(model.getItem(20));\n\n//log selection changes\nlist.getSelection().addListener(\"change\", function(e) {\nthis.debug(\"Selection: \" + list.getSelection().getItem(0));\n}, this);\n</pre>"
        }
      ],
      "@childControl": [
        {
          "name": "@childControl",
          "body": "row-layer {qx.ui.virtual.layer.Row} layer for all rows"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 75,
        "column": 2
      },
      "end": {
        "line": 89,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Creates the <code>qx.ui.list.List</code> with the passed model."
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "model {qx.data.IListData|null} model for the list.",
          "paramName": "model",
          "description": " model for the list.",
          "type": [
            "qx.data.IListData",
            "null"
          ]
        }
      ]
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 108,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "virtual-list",
      "overriddenFrom": "qx.ui.core.scroll.AbstractScrollArea",
      "appearsIn": {
        "qx.ui.core.scroll.AbstractScrollArea": "class",
        "qx.ui.core.Widget": "class"
      }
    },
    "focusable": {
      "location": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "focusable",
      "propertyType": "new",
      "refine": true,
      "defaultValue": true,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "width": {
      "location": {
        "start": {
          "line": 120,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "width",
      "propertyType": "new",
      "refine": true,
      "defaultValue": 100,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "height": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "height",
      "propertyType": "new",
      "refine": true,
      "defaultValue": 200,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "model": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Data array containing the data which should be shown in the list."
          }
        ]
      },
      "name": "model",
      "propertyType": "new",
      "event": "changeModel",
      "apply": "_applyModel",
      "allowNull": true,
      "check": "qx.data.IListData"
    },
    "itemHeight": {
      "location": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 153,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Default item height"
          }
        ]
      },
      "name": "itemHeight",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyRowHeight",
      "check": "Integer",
      "defaultValue": 25
    },
    "groupItemHeight": {
      "location": {
        "start": {
          "line": 157,
          "column": 4
        },
        "end": {
          "line": 164,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Group item height"
          }
        ]
      },
      "name": "groupItemHeight",
      "propertyType": "new",
      "themeable": true,
      "apply": "_applyGroupRowHeight",
      "allowNull": true,
      "check": "Integer"
    },
    "labelPath": {
      "location": {
        "start": {
          "line": 172,
          "column": 4
        },
        "end": {
          "line": 177,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The path to the property which holds the information that should be\ndisplayed as a label. This is only needed if objects are stored in the\nmodel."
          }
        ]
      },
      "name": "labelPath",
      "propertyType": "new",
      "apply": "_applyLabelPath",
      "allowNull": true,
      "check": "String"
    },
    "iconPath": {
      "location": {
        "start": {
          "line": 185,
          "column": 4
        },
        "end": {
          "line": 190,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The path to the property which holds the information that should be\ndisplayed as an icon. This is only needed if objects are stored in the\nmodel and icons should be displayed."
          }
        ]
      },
      "name": "iconPath",
      "propertyType": "new",
      "apply": "_applyIconPath",
      "allowNull": true,
      "check": "String"
    },
    "groupLabelPath": {
      "location": {
        "start": {
          "line": 198,
          "column": 4
        },
        "end": {
          "line": 203,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The path to the property which holds the information that should be\ndisplayed as a group label. This is only needed if objects are stored in the\nmodel."
          }
        ]
      },
      "name": "groupLabelPath",
      "propertyType": "new",
      "apply": "_applyGroupLabelPath",
      "allowNull": true,
      "check": "String"
    },
    "labelOptions": {
      "location": {
        "start": {
          "line": 210,
          "column": 4
        },
        "end": {
          "line": 214,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "A map containing the options for the label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation."
          }
        ]
      },
      "name": "labelOptions",
      "propertyType": "new",
      "apply": "_applyLabelOptions",
      "allowNull": true
    },
    "iconOptions": {
      "location": {
        "start": {
          "line": 221,
          "column": 4
        },
        "end": {
          "line": 225,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "A map containing the options for the icon binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation."
          }
        ]
      },
      "name": "iconOptions",
      "propertyType": "new",
      "apply": "_applyIconOptions",
      "allowNull": true
    },
    "groupLabelOptions": {
      "location": {
        "start": {
          "line": 232,
          "column": 4
        },
        "end": {
          "line": 236,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "A map containing the options for the group label binding. The possible keys\ncan be found in the {@link qx.data.SingleValueBinding} documentation."
          }
        ]
      },
      "name": "groupLabelOptions",
      "propertyType": "new",
      "apply": "_applyGroupLabelOptions",
      "allowNull": true
    },
    "delegate": {
      "location": {
        "start": {
          "line": 243,
          "column": 4
        },
        "end": {
          "line": 249,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Delegation object which can have one or more functions defined by the\n{@link qx.ui.list.core.IListDelegate} interface."
          }
        ]
      },
      "name": "delegate",
      "propertyType": "new",
      "event": "changeDelegate",
      "apply": "_applyDelegate",
      "allowNull": true
    },
    "autoGrouping": {
      "location": {
        "start": {
          "line": 255,
          "column": 4
        },
        "end": {
          "line": 259,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Indicates that the list is managing the {@link #groups} automatically."
          }
        ]
      },
      "name": "autoGrouping",
      "propertyType": "new",
      "check": "Boolean",
      "defaultValue": true
    },
    "groups": {
      "location": {
        "start": {
          "line": 266,
          "column": 4
        },
        "end": {
          "line": 272,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Contains all groups for data binding, but do only manipulate the array\nwhen the {@link #autoGrouping} is set to <code>false</code>."
          }
        ]
      },
      "name": "groups",
      "propertyType": "new",
      "event": "changeGroups",
      "allowNull": false,
      "check": "qx.data.Array"
    },
    "variableItemHeight": {
      "location": {
        "start": {
          "line": 279,
          "column": 4
        },
        "end": {
          "line": 285,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Render list items with variable height,\ncalculated from the individual item size."
          }
        ]
      },
      "name": "variableItemHeight",
      "propertyType": "new",
      "apply": "_applyVariableItemHeight",
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": true
    },
    "selection": {
      "type": "property",
      "name": "selection",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "selectionMode": {
      "type": "property",
      "name": "selectionMode",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "dragSelection": {
      "type": "property",
      "name": "dragSelection",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "quickSelection": {
      "type": "property",
      "name": "quickSelection",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    }
  },
  "members": {
    "_background": {
      "location": {
        "start": {
          "line": 292,
          "column": 4
        },
        "end": {
          "line": 292,
          "column": 22
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.layer.Row} background renderer"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_provider": {
      "location": {
        "start": {
          "line": 296,
          "column": 4
        },
        "end": {
          "line": 296,
          "column": 20
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.list.provider.IListProvider} provider for cell rendering"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_layer": {
      "location": {
        "start": {
          "line": 300,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 17
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.layer.Abstract} layer which contains the items."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__lookupTable": {
      "location": {
        "start": {
          "line": 309,
          "column": 4
        },
        "end": {
          "line": 309,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} lookup table to get the model index from a row. To get the\ncorrect value after applying filter, sorter, group.\n\nNote the value <code>-1</code> indicates that the value is a group item."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__lookupTableForGroup": {
      "location": {
        "start": {
          "line": 313,
          "column": 4
        },
        "end": {
          "line": 313,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Array} lookup table for getting the group index from the row"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__groupHashMap": {
      "location": {
        "start": {
          "line": 321,
          "column": 4
        },
        "end": {
          "line": 321,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} contains all groups with the items as children. The key is\nthe group name and the value is an <code>Array</code> containing each\nitem's model index."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__groupStringsUsed": {
      "location": {
        "start": {
          "line": 327,
          "column": 4
        },
        "end": {
          "line": 327,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when one or more <code>String</code> are used for grouping."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__groupObjectsUsed": {
      "location": {
        "start": {
          "line": 333,
          "column": 4
        },
        "end": {
          "line": 333,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when one or more <code>Object</code> are used for grouping."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__defaultGroupUsed": {
      "location": {
        "start": {
          "line": 339,
          "column": 4
        },
        "end": {
          "line": 339,
          "column": 30
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} indicates when a default group is used for grouping."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__defaultGroups": {
      "location": {
        "start": {
          "line": 341,
          "column": 4
        },
        "end": {
          "line": 341,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__deferredLayerUpdate": {
      "location": {
        "start": {
          "line": 343,
          "column": 4
        },
        "end": {
          "line": 343,
          "column": 32
        }
      },
      "type": "variable",
      "access": "private"
    },
    "refresh": {
      "location": {
        "start": {
          "line": 349,
          "column": 4
        },
        "end": {
          "line": 351,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Trigger a rebuild from the internal data structure."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_createChildControlImpl": {
      "location": {
        "start": {
          "line": 355,
          "column": 4
        },
        "end": {
          "line": 366,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "paramName": "id",
            "description": " ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "hash {String?undefined} If a child control name contains a #,\nall text following the # will be the hash argument.",
            "paramName": "hash",
            "description": " If a child control name contains a #,\nall text following the # will be the hash argument.",
            "optional": true,
            "defaultValue": "undefined",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The created control or <code>null</code>",
            "type": "qx.ui.core.Widget",
            "desc": " The created control or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.core.Scroller",
      "appearsIn": [
        "qx.ui.virtual.core.Scroller",
        "qx.ui.core.scroll.AbstractScrollArea",
        "qx.ui.core.Widget"
      ]
    },
    "_init": {
      "location": {
        "start": {
          "line": 372,
          "column": 4
        },
        "end": {
          "line": 387,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Initializes the virtual list."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initBackground": {
      "location": {
        "start": {
          "line": 393,
          "column": 4
        },
        "end": {
          "line": 397,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Initializes the background renderer."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_initLayer": {
      "location": {
        "start": {
          "line": 403,
          "column": 4
        },
        "end": {
          "line": 408,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Initializes the layer for rendering."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getDataFromRow": {
      "location": {
        "start": {
          "line": 424,
          "column": 4
        },
        "end": {
          "line": 443,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINTERNAL API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Returns the model data for the given row."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to get data for.",
            "paramName": "row",
            "description": " row to get data for.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var|null} the row's model data.",
            "type": "var|null",
            "desc": " the row's model data."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getLookupTable": {
      "location": {
        "start": {
          "line": 452,
          "column": 4
        },
        "end": {
          "line": 454,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the internal lookup table. But do not manipulate the\nlookup table!"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} The internal lookup table.",
            "type": "Array",
            "desc": " The internal lookup table."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_lookup": {
      "location": {
        "start": {
          "line": 464,
          "column": 4
        },
        "end": {
          "line": 466,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Performs a lookup from row to model index."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Number} The row to look at.",
            "paramName": "row",
            "description": " The row to look at.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The model index or\n<code>-1</code> if the row is a group item.",
            "type": "Number",
            "desc": " The model index or\n<code>-1</code> if the row is a group item."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_lookupGroup": {
      "location": {
        "start": {
          "line": 476,
          "column": 4
        },
        "end": {
          "line": 478,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Performs a lookup from row to group index."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Number} The row to look at.",
            "paramName": "row",
            "description": " The row to look at.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The group index or\n<code>-1</code> if the row is a not a group item.",
            "type": "Number",
            "desc": " The group index or\n<code>-1</code> if the row is a not a group item."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_reverseLookup": {
      "location": {
        "start": {
          "line": 488,
          "column": 4
        },
        "end": {
          "line": 493,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Performs a lookup from model index to row."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Number} The index to look at.",
            "paramName": "index",
            "description": " The index to look at.",
            "type": "Number"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Number} The row or <code>-1</code>\nif the index is not a model index.",
            "type": "Number",
            "desc": " The row or <code>-1</code>\nif the index is not a model index."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isGroup": {
      "location": {
        "start": {
          "line": 503,
          "column": 4
        },
        "end": {
          "line": 505,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks if the passed row is a group or an item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to check.",
            "paramName": "row",
            "description": " row to check.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the row is a group element,\n<code>false</code> if the row is an item element.",
            "type": "Boolean",
            "desc": " <code>true</code> if the row is a group element,\n<code>false</code> if the row is an item element."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getSelectables": {
      "location": {
        "start": {
          "line": 513,
          "column": 4
        },
        "end": {
          "line": 515,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the selectable model items."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.Array | null} The selectable items.",
            "type": "qx.data.Array | null",
            "desc": " The selectable items."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyModel": {
      "location": {
        "start": {
          "line": 526,
          "column": 4
        },
        "end": {
          "line": 537,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyRowHeight": {
      "location": {
        "start": {
          "line": 541,
          "column": 4
        },
        "end": {
          "line": 543,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyGroupRowHeight": {
      "location": {
        "start": {
          "line": 546,
          "column": 4
        },
        "end": {
          "line": 548,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyLabelPath": {
      "location": {
        "start": {
          "line": 551,
          "column": 4
        },
        "end": {
          "line": 553,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyIconPath": {
      "location": {
        "start": {
          "line": 557,
          "column": 4
        },
        "end": {
          "line": 559,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyGroupLabelPath": {
      "location": {
        "start": {
          "line": 563,
          "column": 4
        },
        "end": {
          "line": 565,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyLabelOptions": {
      "location": {
        "start": {
          "line": 569,
          "column": 4
        },
        "end": {
          "line": 571,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyIconOptions": {
      "location": {
        "start": {
          "line": 575,
          "column": 4
        },
        "end": {
          "line": 577,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyGroupLabelOptions": {
      "location": {
        "start": {
          "line": 581,
          "column": 4
        },
        "end": {
          "line": 583,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyDelegate": {
      "location": {
        "start": {
          "line": 587,
          "column": 4
        },
        "end": {
          "line": 590,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "apply method"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyVariableItemHeight": {
      "location": {
        "start": {
          "line": 594,
          "column": 4
        },
        "end": {
          "line": 602,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onResize": {
      "location": {
        "start": {
          "line": 617,
          "column": 4
        },
        "end": {
          "line": 619,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT HANDLERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Event handler for the resize event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} resize event.",
            "paramName": "e",
            "description": " resize event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onModelChange": {
      "location": {
        "start": {
          "line": 627,
          "column": 4
        },
        "end": {
          "line": 638,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the model change event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} model change event.",
            "paramName": "e",
            "description": " model change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onLayerUpdated": {
      "location": {
        "start": {
          "line": 648,
          "column": 4
        },
        "end": {
          "line": 660,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the updated event of the\nqx.ui.virtual.layer.WidgetCell layer.\n\nRecalculates the item sizes in a deffered call,\nwhich only happens if we have variable item heights"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__updateRowCount": {
      "location": {
        "start": {
          "line": 673,
          "column": 4
        },
        "end": {
          "line": 677,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nHELPER ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Helper method to update the row count."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__updateGroupRowHeight": {
      "location": {
        "start": {
          "line": 683,
          "column": 4
        },
        "end": {
          "line": 697,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method to update row heights."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__buildUpLookupTable": {
      "location": {
        "start": {
          "line": 703,
          "column": 4
        },
        "end": {
          "line": 724,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Internal method for building the lookup table."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_runDelegateFilter": {
      "location": {
        "start": {
          "line": 732,
          "column": 4
        },
        "end": {
          "line": 742,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Invokes filtering using the filter given in the delegate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_runDelegateSorter": {
      "location": {
        "start": {
          "line": 750,
          "column": 4
        },
        "end": {
          "line": 765,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Invokes sorting using the sorter given in the delegate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_runDelegateGroup": {
      "location": {
        "start": {
          "line": 773,
          "column": 4
        },
        "end": {
          "line": 789,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Invokes grouping using the group result given in the delegate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "model {qx.data.IListData} The model.",
            "paramName": "model",
            "description": " The model.",
            "type": "qx.data.IListData"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__addGroup": {
      "location": {
        "start": {
          "line": 798,
          "column": 4
        },
        "end": {
          "line": 816,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds a model index the the group."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "group {String|Object|null} the group.",
            "paramName": "group",
            "description": " the group.",
            "type": [
              "String",
              "Object",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "index {Integer} model index to add.",
            "paramName": "index",
            "description": " model index to add.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__createLookupFromGroup": {
      "location": {
        "start": {
          "line": 824,
          "column": 4
        },
        "end": {
          "line": 851,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Creates a lookup table form the internal group hash map."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} the lookup table based on the internal group hash map.",
            "type": "Array",
            "desc": " the lookup table based on the internal group hash map."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getUniqueGroupName": {
      "location": {
        "start": {
          "line": 860,
          "column": 4
        },
        "end": {
          "line": 881,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns an unique group name for the passed group."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "group {String|Object} Group to find unique group name.",
            "paramName": "group",
            "description": " Group to find unique group name.",
            "type": [
              "String",
              "Object"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} Unique group name.",
            "type": "String",
            "desc": " Unique group name."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__checkGroupStructure": {
      "location": {
        "start": {
          "line": 888,
          "column": 4
        },
        "end": {
          "line": 895,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks that <code>Object</code> and <code>String</code> are not mixed\nas group identifier, otherwise an exception occurs."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_setRowItemSize": {
      "location": {
        "start": {
          "line": 902,
          "column": 4
        },
        "end": {
          "line": 920,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the height of each visible item and set it as the\nrow size"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setSelection": {
      "type": "function",
      "name": "setSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.Array",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "getSelection": {
      "type": "function",
      "name": "getSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.Array",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetSelection": {
      "type": "function",
      "name": "resetSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "setValue implements part of the {@link qx.ui.form.IField} interface."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "selection {qx.data.IListData|null} List data to select as value.",
            "paramName": "selection",
            "description": " List data to select as value.",
            "type": [
              "qx.data.IListData",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null} The status of this operation.",
            "type": "null",
            "desc": " The status of this operation."
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "getValue implements part of the {@link qx.ui.form.IField} interface."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.data.IListData} The current selection.",
            "type": "qx.data.IListData",
            "desc": " The current selection."
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_initSelectionManager": {
      "type": "function",
      "name": "_initSelectionManager",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "setAutoScrollIntoView": {
      "type": "function",
      "name": "setAutoScrollIntoView",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Determines, if automatically scrolling of selected item is active.\nSet <code>false</code> to suspend auto scrolling."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Boolean} Set <code>false</code> to suspend auto scrolling.",
            "paramName": "value",
            "description": " Set <code>false</code> to suspend auto scrolling.",
            "type": "Boolean"
          }
        ]
      }
    },
    "getAutoScrollIntoView": {
      "type": "function",
      "name": "getAutoScrollIntoView",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns true, if automatically scrolling of selected item is active."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Returns <code>false</code> if auto scrolling is suspended.",
            "type": "Boolean",
            "desc": " Returns <code>false</code> if auto scrolling is suspended."
          }
        ]
      }
    },
    "_updateSelection": {
      "type": "function",
      "name": "_updateSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_applySelection": {
      "type": "function",
      "name": "_applySelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_applySelectionMode": {
      "type": "function",
      "name": "_applySelectionMode",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_applyDragSelection": {
      "type": "function",
      "name": "_applyDragSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_applyQuickSelection": {
      "type": "function",
      "name": "_applyQuickSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "_onChangeSelection": {
      "type": "function",
      "name": "_onChangeSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nSELECTION HANDLERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Event handler for the internal selection change {@link #selection}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event.",
            "paramName": "e",
            "description": " the change event.",
            "type": "qx.event.type.Data"
          }
        ]
      }
    },
    "_onManagerChangeSelection": {
      "type": "function",
      "name": "_onManagerChangeSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the selection change from the <code>_manager</code>."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} the change event.",
            "paramName": "e",
            "description": " the change event.",
            "type": "qx.event.type.Data"
          }
        ]
      }
    },
    "__synchronizeSelection": {
      "type": "function",
      "name": "__synchronizeSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "__replaceSelection": {
      "type": "function",
      "name": "__replaceSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Replace the current selection with the passed selection Array."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "newSelection {qx.data.Array} The new selection.",
            "paramName": "newSelection",
            "description": " The new selection.",
            "type": "qx.data.Array"
          }
        ]
      }
    },
    "__isSelectionEquals": {
      "type": "function",
      "name": "__isSelectionEquals",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.virtual.selection.MModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Checks whether the local and the manager selection are equal."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the selections are equal,\n<code>false</code> otherwise.",
            "type": "Boolean",
            "desc": " <code>true</code> if the selections are equal,\n<code>false</code> otherwise."
          }
        ]
      }
    },
    "_applyDefaultSelection": {
      "type": "function",
      "name": "_applyDefaultSelection",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.selection.MModel"
    },
    "getSelectionMode": {
      "type": "function",
      "name": "getSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSelectionMode": {
      "type": "function",
      "name": "setSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSelectionMode": {
      "type": "function",
      "name": "resetSelectionMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getDragSelection": {
      "type": "function",
      "name": "getDragSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isDragSelection": {
      "type": "function",
      "name": "isDragSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setDragSelection": {
      "type": "function",
      "name": "setDragSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetDragSelection": {
      "type": "function",
      "name": "resetDragSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getQuickSelection": {
      "type": "function",
      "name": "getQuickSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isQuickSelection": {
      "type": "function",
      "name": "isQuickSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setQuickSelection": {
      "type": "function",
      "name": "setQuickSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetQuickSelection": {
      "type": "function",
      "name": "resetQuickSelection",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getModel": {
      "type": "function",
      "name": "getModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.IListData",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setModel": {
      "type": "function",
      "name": "setModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.IListData",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetModel": {
      "type": "function",
      "name": "resetModel",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getItemHeight": {
      "type": "function",
      "name": "getItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setItemHeight": {
      "type": "function",
      "name": "setItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetItemHeight": {
      "type": "function",
      "name": "resetItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGroupItemHeight": {
      "type": "function",
      "name": "getGroupItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGroupItemHeight": {
      "type": "function",
      "name": "setGroupItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGroupItemHeight": {
      "type": "function",
      "name": "resetGroupItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLabelPath": {
      "type": "function",
      "name": "getLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLabelPath": {
      "type": "function",
      "name": "setLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLabelPath": {
      "type": "function",
      "name": "resetLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconPath": {
      "type": "function",
      "name": "getIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconPath": {
      "type": "function",
      "name": "setIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconPath": {
      "type": "function",
      "name": "resetIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGroupLabelPath": {
      "type": "function",
      "name": "getGroupLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGroupLabelPath": {
      "type": "function",
      "name": "setGroupLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGroupLabelPath": {
      "type": "function",
      "name": "resetGroupLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLabelOptions": {
      "type": "function",
      "name": "getLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLabelOptions": {
      "type": "function",
      "name": "setLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLabelOptions": {
      "type": "function",
      "name": "resetLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconOptions": {
      "type": "function",
      "name": "getIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconOptions": {
      "type": "function",
      "name": "setIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconOptions": {
      "type": "function",
      "name": "resetIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGroupLabelOptions": {
      "type": "function",
      "name": "getGroupLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGroupLabelOptions": {
      "type": "function",
      "name": "setGroupLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGroupLabelOptions": {
      "type": "function",
      "name": "resetGroupLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getAutoGrouping": {
      "type": "function",
      "name": "getAutoGrouping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isAutoGrouping": {
      "type": "function",
      "name": "isAutoGrouping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setAutoGrouping": {
      "type": "function",
      "name": "setAutoGrouping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetAutoGrouping": {
      "type": "function",
      "name": "resetAutoGrouping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGroups": {
      "type": "function",
      "name": "getGroups",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.Array",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGroups": {
      "type": "function",
      "name": "setGroups",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.Array",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGroups": {
      "type": "function",
      "name": "resetGroups",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getVariableItemHeight": {
      "type": "function",
      "name": "getVariableItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isVariableItemHeight": {
      "type": "function",
      "name": "isVariableItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setVariableItemHeight": {
      "type": "function",
      "name": "setVariableItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetVariableItemHeight": {
      "type": "function",
      "name": "resetVariableItemHeight",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 924,
        "column": 2
      },
      "end": {
        "line": 948,
        "column": 3
      }
    }
  },
  "descendants": []
}