{
  "className": "qx.ui.tree.provider.WidgetProvider",
  "packageName": "qx.ui.tree.provider",
  "name": "WidgetProvider",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.virtual.core.IWidgetCellProvider",
    "qx.ui.tree.provider.IVirtualTreeProvider"
  ],
  "mixins": [
    "qx.ui.tree.core.MWidgetController"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 296,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Hagendorn (chris_schmidt)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "The provider implements the {@link qx.ui.virtual.core.IWidgetCellProvider}\nAPI, which can be used as delegate for the widget cell rendering and it\nprovides a API to bind the model with the rendered item."
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 41,
        "column": 2
      },
      "end": {
        "line": 49,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "tree {qx.ui.tree.VirtualTree} tree to provide.",
          "paramName": "tree",
          "description": " tree to provide.",
          "type": "qx.ui.tree.VirtualTree"
        }
      ]
    }
  },
  "members": {
    "_tree": {
      "location": {
        "start": {
          "line": 55,
          "column": 4
        },
        "end": {
          "line": 55,
          "column": 16
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.tree.VirtualTree} tree to provide."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_renderer": {
      "location": {
        "start": {
          "line": 59,
          "column": 4
        },
        "end": {
          "line": 59,
          "column": 20
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.virtual.cell.WidgetCell} the used item renderer."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "getCellWidget": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nPUBLIC API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The cell's row index.",
            "paramName": "row",
            "description": " The cell's row index.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "column {Integer} The cell's column index.",
            "paramName": "column",
            "description": " The cell's column index.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.LayoutItem} The configured widget for the given cell.",
            "type": "qx.ui.core.LayoutItem",
            "desc": " The configured widget for the given cell."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.core.IWidgetCellProvider",
      "appearsIn": [
        "qx.ui.virtual.core.IWidgetCellProvider"
      ]
    },
    "poolCellWidget": {
      "location": {
        "start": {
          "line": 115,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.LayoutItem} The cell widget to pool.",
            "paramName": "widget",
            "description": " The cell widget to pool.",
            "type": "qx.ui.core.LayoutItem"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.core.IWidgetCellProvider",
      "appearsIn": [
        "qx.ui.virtual.core.IWidgetCellProvider"
      ]
    },
    "createLayer": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 127,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Interface implementation"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.virtual.layer.Abstract} new layer.",
            "type": "qx.ui.virtual.layer.Abstract",
            "desc": " new layer."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.tree.provider.IVirtualTreeProvider",
      "appearsIn": [
        "qx.ui.tree.provider.IVirtualTreeProvider"
      ]
    },
    "createRenderer": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 147,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Interface implementation"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} new node renderer.",
            "type": "var",
            "desc": " new node renderer."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.tree.provider.IVirtualTreeProvider",
      "appearsIn": [
        "qx.ui.tree.provider.IVirtualTreeProvider"
      ]
    },
    "styleSelectabled": {
      "location": {
        "start": {
          "line": 151,
          "column": 4
        },
        "end": {
          "line": 155,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.tree.provider.IVirtualTreeProvider",
      "appearsIn": [
        "qx.ui.tree.provider.IVirtualTreeProvider"
      ]
    },
    "styleUnselectabled": {
      "location": {
        "start": {
          "line": 159,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to style.",
            "paramName": "row",
            "description": " row to style.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.tree.provider.IVirtualTreeProvider",
      "appearsIn": [
        "qx.ui.tree.provider.IVirtualTreeProvider"
      ]
    },
    "isSelectable": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} row to select.",
            "paramName": "row",
            "description": " row to select.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the row can be selected,\n<code>false</code> otherwise.",
            "type": "Boolean",
            "desc": " <code>true</code> when the row can be selected,\n<code>false</code> otherwise."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.tree.provider.IVirtualTreeProvider",
      "appearsIn": [
        "qx.ui.tree.provider.IVirtualTreeProvider"
      ]
    },
    "_styleSelectabled": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 196,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINTERNAL API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Styles a selected item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to style.",
            "paramName": "widget",
            "description": " widget to style.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_styleUnselectabled": {
      "location": {
        "start": {
          "line": 204,
          "column": 4
        },
        "end": {
          "line": 210,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Styles a not selected item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to style.",
            "paramName": "widget",
            "description": " widget to style.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPool": {
      "location": {
        "start": {
          "line": 219,
          "column": 4
        },
        "end": {
          "line": 226,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Calls the delegate <code>onPool</code> method when it is used in the\n{@link #delegate} property."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} Item to modify.",
            "paramName": "item",
            "description": " Item to modify.",
            "type": "qx.ui.core.Widget"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onItemCreated": {
      "location": {
        "start": {
          "line": 241,
          "column": 4
        },
        "end": {
          "line": 249,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT HANDLERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Event handler for the created item's."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} fired event.",
            "paramName": "event",
            "description": " fired event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeDelegate": {
      "location": {
        "start": {
          "line": 257,
          "column": 4
        },
        "end": {
          "line": 266,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the change delegate event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} fired event.",
            "paramName": "event",
            "description": " fired event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onOpenChanged": {
      "location": {
        "start": {
          "line": 274,
          "column": 4
        },
        "end": {
          "line": 286,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler when a node changes opened or closed state."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The data event.",
            "paramName": "event",
            "description": " The data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "setChildProperty": {
      "type": "function",
      "name": "setChildProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "setLabelPath": {
      "type": "function",
      "name": "setLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "bindDefaultProperties": {
      "type": "function",
      "name": "bindDefaultProperties",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper-Method for binding the default properties from the model to the\ntarget widget. The used default properties  depends on the passed item.\n\nThis method should only be called in the {@link IVirtualTreeDelegate#bindItem}\nfunction implemented by the {@link #delegate} property."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The internally created and used node or\nleaf.",
            "paramName": "item",
            "description": " The internally created and used node or\nleaf.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the item (node or leaf).",
            "paramName": "index",
            "description": " The index of the item (node or leaf).",
            "type": "Integer"
          }
        ]
      }
    },
    "bindProperty": {
      "type": "function",
      "name": "bindProperty",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper-Method for binding a given property from the model to the target\nwidget.\n\nThis method should only be called in the {@link IVirtualTreeDelegate#bindItem}\nfunction implemented by the {@link #delegate} property."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "sourcePath {String | null} The path to the property in the model.\nIf you use an empty string, the whole model item will be bound.",
            "paramName": "sourcePath",
            "description": " The path to the property in the model.\nIf you use an empty string, the whole model item will be bound.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "targetProperty {String} The name of the property in the target widget.",
            "paramName": "targetProperty",
            "description": " The name of the property in the target widget.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map | null} The options to use for the binding.",
            "paramName": "options",
            "description": " The options to use for the binding.",
            "type": [
              "Map",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "targetWidget {qx.ui.core.Widget} The target widget.",
            "paramName": "targetWidget",
            "description": " The target widget.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the current binding.",
            "paramName": "index",
            "description": " The index of the current binding.",
            "type": "Integer"
          }
        ]
      }
    },
    "bindPropertyReverse": {
      "type": "function",
      "name": "bindPropertyReverse",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper-Method for binding a given property from the target widget to\nthe model.\nThis method should only be called in the\n{@link qx.ui.tree.core.IVirtualTreeDelegate#bindItem} function implemented by the\n{@link #delegate} property."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "targetPath {String | null} The path to the property in the model.",
            "paramName": "targetPath",
            "description": " The path to the property in the model.",
            "type": [
              "String",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "sourceProperty {String} The name of the property in the target.",
            "paramName": "sourceProperty",
            "description": " The name of the property in the target.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "options {Map | null} The options to use for the binding.",
            "paramName": "options",
            "description": " The options to use for the binding.",
            "type": [
              "Map",
              "null"
            ]
          },
          {
            "name": "@param",
            "body": "sourceWidget {qx.ui.core.Widget} The source widget.",
            "paramName": "sourceWidget",
            "description": " The source widget.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the current binding.",
            "paramName": "index",
            "description": " The index of the current binding.",
            "type": "Integer"
          }
        ]
      }
    },
    "removeBindings": {
      "type": "function",
      "name": "removeBindings",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController"
    },
    "_bindItem": {
      "type": "function",
      "name": "_bindItem",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets up the binding for the given item and index."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The internally created and used item.",
            "paramName": "item",
            "description": " The internally created and used item.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          }
        ]
      }
    },
    "_removeBindingsFrom": {
      "type": "function",
      "name": "_removeBindingsFrom",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Removes the binding of the given item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "item {qx.ui.core.Widget} The item which the binding should be\nremoved.",
            "paramName": "item",
            "description": " The item which the binding should be\nremoved.",
            "type": "qx.ui.core.Widget"
          }
        ]
      }
    },
    "__getBindPath": {
      "type": "function",
      "name": "__getBindPath",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method to create the path for binding."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The index of the item.",
            "paramName": "index",
            "description": " The index of the item.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "path {String|null} The path to the property.",
            "paramName": "path",
            "description": " The path to the property.",
            "type": [
              "String",
              "null"
            ]
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The binding path",
            "type": "String",
            "desc": " The binding path"
          }
        ]
      }
    },
    "__addBinding": {
      "type": "function",
      "name": "__addBinding",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method to save the binding for the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to save binding.",
            "paramName": "widget",
            "description": " widget to save binding.",
            "type": "qx.ui.core.Widget"
          },
          {
            "name": "@param",
            "body": "id {var} the id from the binding.",
            "paramName": "id",
            "description": " the id from the binding.",
            "type": "var"
          }
        ]
      }
    },
    "__getBindings": {
      "type": "function",
      "name": "__getBindings",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.tree.core.MWidgetController",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method which returns all bound id from the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} widget to get all binding.",
            "paramName": "widget",
            "description": " widget to get all binding.",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} all bound id's.",
            "type": "Array",
            "desc": " all bound id's."
          }
        ]
      }
    },
    "getLabelPath": {
      "type": "function",
      "name": "getLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetLabelPath": {
      "type": "function",
      "name": "resetLabelPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconPath": {
      "type": "function",
      "name": "getIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconPath": {
      "type": "function",
      "name": "setIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconPath": {
      "type": "function",
      "name": "resetIconPath",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLabelOptions": {
      "type": "function",
      "name": "getLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLabelOptions": {
      "type": "function",
      "name": "setLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLabelOptions": {
      "type": "function",
      "name": "resetLabelOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getIconOptions": {
      "type": "function",
      "name": "getIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setIconOptions": {
      "type": "function",
      "name": "setIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetIconOptions": {
      "type": "function",
      "name": "resetIconOptions",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getChildProperty": {
      "type": "function",
      "name": "getChildProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetChildProperty": {
      "type": "function",
      "name": "resetChildProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getDelegate": {
      "type": "function",
      "name": "getDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setDelegate": {
      "type": "function",
      "name": "setDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetDelegate": {
      "type": "function",
      "name": "resetDelegate",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 290,
        "column": 2
      },
      "end": {
        "line": 295,
        "column": 3
      }
    }
  },
  "descendants": []
}