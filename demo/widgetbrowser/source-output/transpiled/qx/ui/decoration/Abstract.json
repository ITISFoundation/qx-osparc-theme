{
  "className": "qx.ui.decoration.Abstract",
  "packageName": "qx.ui.decoration",
  "name": "Abstract",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.ui.decoration.IDecorator"
  ],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 94,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (martinwittemann)\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class acts as abstract class for all decorators. It offers the\nproperties for the insets handling. Each decorator has to define its own\ndefault insets by implementing the template method\n(http://en.wikipedia.org/wiki/Template_Method) <code>_getDefaultInsets</code>"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "__insets": {
      "location": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 34,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getDefaultInsets": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 52,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Abstract method. Should return a map containing the default insets of\nthe decorator. This could look like this:\n<pre>\nreturn {\ntop : 0,\nright : 0,\nbottom : 0,\nleft : 0\n};\n</pre>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map containing the insets.",
            "type": "Map",
            "desc": " Map containing the insets."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isInitialized": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Abstract method. Should return an boolean value if the decorator is\nalready initialized or not."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the decorator is initialized.",
            "type": "Boolean",
            "desc": " True, if the decorator is initialized."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_resetInsets": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the insets."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getInsets": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "interface implementation"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} the desired inset as a map with the keys <code>top</code>,\n<code>right</code>, <code>bottom</code>, <code>left</code>.",
            "type": "Map",
            "desc": " the desired inset as a map with the keys <code>top</code>,\n<code>right</code>, <code>bottom</code>, <code>left</code>."
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "appearsIn": [
        "qx.ui.decoration.IDecorator"
      ]
    },
    "getStyles": {
      "type": "function",
      "name": "getStyles",
      "abstract": true,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the decorator's styles."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of decoration styles",
            "type": "Map",
            "desc": " Map of decoration styles"
          }
        ]
      }
    },
    "getPadding": {
      "type": "function",
      "name": "getPadding",
      "abstract": true,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the configured padding minus the border width."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of top, right, bottom and left padding values",
            "type": "Map",
            "desc": " Map of top, right, bottom and left padding values"
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 91,
        "column": 3
      },
      "end": {
        "line": 93,
        "column": 4
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "abstract": true,
  "descendants": [
    "qx.ui.decoration.Decorator"
  ]
}