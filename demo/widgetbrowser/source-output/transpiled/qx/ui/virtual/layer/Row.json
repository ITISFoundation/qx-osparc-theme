{
  "className": "qx.ui.virtual.layer.Row",
  "packageName": "qx.ui.virtual.layer",
  "name": "Row",
  "superClass": "qx.ui.virtual.layer.AbstractBackground",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 151,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "EXPERIMENTAL!\n\nThe Row layer renders row background colors."
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 39,
          "column": 4
        },
        "end": {
          "line": 43,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "row-layer",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    }
  },
  "members": {
    "_fullUpdate": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {Integer} Index of the first row to display",
            "paramName": "firstRow",
            "description": " Index of the first row to display",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "firstColumn {Integer} Index of the first column to display",
            "paramName": "firstColumn",
            "description": " Index of the first column to display",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowSizes {Integer[]} Array of heights for each row to display",
            "paramName": "rowSizes",
            "description": " Array of heights for each row to display",
            "type": "Integer[]"
          },
          {
            "name": "@param",
            "body": "columnSizes {Integer[]} Array of widths for each column to display",
            "paramName": "columnSizes",
            "description": " Array of widths for each column to display",
            "type": "Integer[]"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.layer.Abstract",
      "appearsIn": [
        "qx.ui.virtual.layer.Abstract"
      ]
    },
    "_updateLayerWindow": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "firstRow {Integer} Index of the first row to display",
            "paramName": "firstRow",
            "description": " Index of the first row to display",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "firstColumn {Integer} Index of the first column to display",
            "paramName": "firstColumn",
            "description": " Index of the first column to display",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "rowSizes {Integer[]} Array of heights for each row to display",
            "paramName": "rowSizes",
            "description": " Array of heights for each row to display",
            "type": "Integer[]"
          },
          {
            "name": "@param",
            "body": "columnSizes {Integer[]} Array of widths for each column to display",
            "paramName": "columnSizes",
            "description": " Array of widths for each column to display",
            "type": "Integer[]"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.virtual.layer.Abstract",
      "appearsIn": [
        "qx.ui.virtual.layer.Abstract"
      ]
    },
    "setColor": {
      "location": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index to set the color for",
            "paramName": "index",
            "description": " Index to set the color for",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "color {Color|null} the color to set. A value of <code>null</code>\nwill reset the color.",
            "paramName": "color",
            "description": " the color to set. A value of <code>null</code>\nwill reset the color.",
            "type": [
              "Color",
              "null"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.layer.AbstractBackground",
      "appearsIn": [
        "qx.ui.virtual.layer.AbstractBackground"
      ]
    },
    "setBackground": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} Index to set the color for",
            "paramName": "index",
            "description": " Index to set the color for",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "decorator {qx.ui.decoration.IDecorator|null} the decorator to set. A value of\n<code>null</code> will reset the decorator.",
            "paramName": "decorator",
            "description": " the decorator to set. A value of\n<code>null</code> will reset the decorator.",
            "type": [
              "qx.ui.decoration.IDecorator",
              "null"
            ]
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.virtual.layer.AbstractBackground",
      "appearsIn": [
        "qx.ui.virtual.layer.AbstractBackground"
      ]
    },
    "__isRowRendered": {
      "location": {
        "start": {
          "line": 144,
          "column": 4
        },
        "end": {
          "line": 149,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether the row with the given index is currently rendered (i.e. in the\nlayer's view port)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "index {Integer} The row's index",
            "paramName": "index",
            "description": " The row's index",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether the row is rendered",
            "type": "Boolean",
            "desc": " Whether the row is rendered"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getColorEven": {
      "type": "function",
      "name": "getColorEven",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorEven": {
      "type": "function",
      "name": "setColorEven",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorEven": {
      "type": "function",
      "name": "resetColorEven",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorOdd": {
      "type": "function",
      "name": "getColorOdd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorOdd": {
      "type": "function",
      "name": "setColorOdd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorOdd": {
      "type": "function",
      "name": "resetColorOdd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "descendants": []
}