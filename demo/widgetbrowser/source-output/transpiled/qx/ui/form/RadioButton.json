{
  "className": "qx.ui.form.RadioButton",
  "packageName": "qx.ui.form",
  "name": "RadioButton",
  "superClass": "qx.ui.form.Button",
  "interfaces": [
    "qx.ui.form.IRadioItem",
    "qx.ui.form.IForm",
    "qx.ui.form.IBooleanForm",
    "qx.ui.form.IModel"
  ],
  "mixins": [
    "qx.ui.form.MForm",
    "qx.ui.form.MModelProperty"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 39,
        "column": 0
      },
      "end": {
        "line": 238,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Radio buttons can be used in radio groups to allow to the user to select\nexactly one item from a list. Radio groups are established by adding\nradio buttons to a radio manager {@link qx.ui.form.RadioGroup}.\n\nExample:\n<pre class=\"javascript\">\nvar container = new qx.ui.container.Composite(new qx.ui.layout.VBox);\n\nvar female = new qx.ui.form.RadioButton(\"female\");\nvar male = new qx.ui.form.RadioButton(\"male\");\n\nvar mgr = new qx.ui.form.RadioGroup();\nmgr.add(female, male);\n\ncontainer.add(male);\ncontainer.add(female);\n</pre>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 63,
        "column": 2
      },
      "end": {
        "line": 74,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "label {String?null} An optional label for the radio button.",
          "paramName": "label",
          "description": " An optional label for the radio button.",
          "optional": true,
          "defaultValue": "null",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "group": {
      "location": {
        "start": {
          "line": 88,
          "column": 4
        },
        "end": {
          "line": 93,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons"
          }
        ]
      },
      "name": "group",
      "propertyType": "new",
      "apply": "_applyGroup",
      "allowNull": true,
      "check": "qx.ui.form.RadioGroup"
    },
    "value": {
      "location": {
        "start": {
          "line": 96,
          "column": 4
        },
        "end": {
          "line": 103,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The value of the widget. True, if the widget is checked."
          }
        ]
      },
      "name": "value",
      "propertyType": "new",
      "event": "changeValue",
      "apply": "_applyValue",
      "allowNull": true,
      "check": "Boolean",
      "defaultValue": false
    },
    "appearance": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 110,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "radiobutton",
      "overriddenFrom": "qx.ui.form.Button",
      "appearsIn": {
        "qx.ui.form.Button": "class",
        "qx.ui.basic.Atom": "class",
        "qx.ui.core.Widget": "class"
      }
    },
    "allowGrowX": {
      "location": {
        "start": {
          "line": 113,
          "column": 4
        },
        "end": {
          "line": 117,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "allowGrowX",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "valid": {
      "type": "property",
      "name": "valid",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "required": {
      "type": "property",
      "name": "required",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "invalidMessage": {
      "type": "property",
      "name": "invalidMessage",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "requiredInvalidMessage": {
      "type": "property",
      "name": "requiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "model": {
      "type": "property",
      "name": "model",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MModelProperty"
    }
  },
  "members": {
    "_forwardStates": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          },
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_forwardStates)"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_bindableProperties": {
      "location": {
        "start": {
          "line": 146,
          "column": 4
        },
        "end": {
          "line": 153,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden (from MExecutable to keep the icon out of the binding)"
          },
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(_bindableProperties)"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_applyValue": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 167,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyGroup": {
      "location": {
        "start": {
          "line": 171,
          "column": 4
        },
        "end": {
          "line": 180,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The assigned {@link qx.ui.form.RadioGroup} which handles the switching between registered buttons"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onExecute": {
      "location": {
        "start": {
          "line": 198,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT-HANDLER\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Event listener for the \"execute\" event.\n\nSets the property \"checked\" to true."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} execute event",
            "paramName": "e",
            "description": " execute event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPress": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 236,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event listener for the \"keyPress\" event.\n\nSelects the previous RadioButton when pressing \"Left\" or \"Up\" and\nSelects the next RadioButton when pressing \"Right\" and \"Down\""
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} KeyPress event",
            "paramName": "e",
            "description": " KeyPress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "setValue": {
      "type": "function",
      "name": "setValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "getValue": {
      "type": "function",
      "name": "getValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGroup": {
      "type": "function",
      "name": "setGroup",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.ui.form.RadioGroup",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "getGroup": {
      "type": "function",
      "name": "getGroup",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.ui.form.RadioGroup",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRequired": {
      "type": "function",
      "name": "setRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nREQUIRED PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the required state of a widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "required {Boolean} A flag signaling if the widget is required.",
            "paramName": "required",
            "description": " A flag signaling if the widget is required.",
            "type": "Boolean"
          }
        ]
      }
    },
    "getRequired": {
      "type": "function",
      "name": "getRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Return the current required state of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the widget is required.",
            "type": "Boolean",
            "desc": " True, if the widget is required."
          }
        ]
      }
    },
    "setValid": {
      "type": "function",
      "name": "setValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nVALID PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the valid state of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "valid {Boolean} The valid state of the widget.",
            "paramName": "valid",
            "description": " The valid state of the widget.",
            "type": "Boolean"
          }
        ]
      }
    },
    "getValid": {
      "type": "function",
      "name": "getValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the valid state of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} If the state of the widget is valid.",
            "type": "Boolean",
            "desc": " If the state of the widget is valid."
          }
        ]
      }
    },
    "setInvalidMessage": {
      "type": "function",
      "name": "setInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINVALID MESSAGE PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the invalid message of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {String} The invalid message.",
            "paramName": "message",
            "description": " The invalid message.",
            "type": "String"
          }
        ]
      }
    },
    "getInvalidMessage": {
      "type": "function",
      "name": "getInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the invalid message of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The current set message.",
            "type": "String",
            "desc": " The current set message."
          }
        ]
      }
    },
    "setRequiredInvalidMessage": {
      "type": "function",
      "name": "setRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nREQUIRED INVALID MESSAGE PROPERTY\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Sets the invalid message if required of the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "message {String} The invalid message.",
            "paramName": "message",
            "description": " The invalid message.",
            "type": "String"
          }
        ]
      }
    },
    "getRequiredInvalidMessage": {
      "type": "function",
      "name": "getRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the invalid message if required of the widget."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} The current set message.",
            "type": "String",
            "desc": " The current set message."
          }
        ]
      }
    },
    "resetValue": {
      "type": "function",
      "name": "resetValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "setModel": {
      "type": "function",
      "name": "setModel",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Set the representative data for the item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} The data.",
            "paramName": "value",
            "description": " The data.",
            "type": "var"
          }
        ]
      }
    },
    "getModel": {
      "type": "function",
      "name": "getModel",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IModel",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the representative data for the item"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{var} The data.",
            "type": "var",
            "desc": " The data."
          }
        ]
      }
    },
    "resetModel": {
      "type": "function",
      "name": "resetModel",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.IModel"
    },
    "_applyValid": {
      "type": "function",
      "name": "_applyValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "__onChangeLocale": {
      "type": "function",
      "name": "__onChangeLocale",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Locale change event handler"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function(e)"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {Event} the change event",
            "paramName": "e",
            "description": " the change event",
            "type": "Event"
          }
        ]
      }
    },
    "isValid": {
      "type": "function",
      "name": "isValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetValid": {
      "type": "function",
      "name": "resetValid",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "isRequired": {
      "type": "function",
      "name": "isRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "resetRequired": {
      "type": "function",
      "name": "resetRequired",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "resetInvalidMessage": {
      "type": "function",
      "name": "resetInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "resetRequiredInvalidMessage": {
      "type": "function",
      "name": "resetRequiredInvalidMessage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.ui.form.MForm"
    },
    "_applyModel": {
      "type": "function",
      "name": "_applyModel",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.form.MModelProperty"
    },
    "resetGroup": {
      "type": "function",
      "name": "resetGroup",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "isValue": {
      "type": "function",
      "name": "isValue",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.ui.tabview.TabButton"
  ]
}