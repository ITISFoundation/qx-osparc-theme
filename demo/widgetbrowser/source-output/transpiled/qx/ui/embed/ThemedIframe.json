{
  "className": "qx.ui.embed.ThemedIframe",
  "packageName": "qx.ui.embed",
  "name": "ThemedIframe",
  "superClass": "qx.ui.embed.AbstractIframe",
  "interfaces": [],
  "mixins": [
    "qx.ui.core.scroll.MRoll"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 48,
        "column": 0
      },
      "end": {
        "line": 528,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Container widget for internal frames (iframes) with qooxdoo scroll bar and\nsize hint support.\n\nAn iframe can display any HTML page inside the widget. Note that custom\nscroll bars do only work if the iframe's source points to the same domain\nas the application."
        }
      ],
      "@childControl": [
        {
          "name": "@childControl",
          "body": "iframe {qx.ui.embed.Iframe} embedded iframe component"
        },
        {
          "name": "@childControl",
          "body": "scrollbar-x {qx.ui.core.scroll.ScrollBar} horizontal scrollbar"
        },
        {
          "name": "@childControl",
          "body": "scrollbar-y {qx.ui.core.scroll.ScrollBar} vertical scrollbar"
        },
        {
          "name": "@childControl",
          "body": "corner {qx.ui.core.Widget} corner widget where no scrollbar is shown\n\n*Example*\n\nHere is a little example of how to use the widget:\n\n<pre class='javascript'>\nvar document = this.getRoot();\nvar iframe = new qx.ui.embed.ThemedIframe(\"frame.html\");\ndocument.add(iframe);\n</pre>\n\n\n*External Documentation*\n\n<a href='http://manual.qooxdoo.org/${qxversion}/pages/widget/themediframe.html' target='_blank'>\nDocumentation of this widget in the qooxdoo manual.</a>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 53,
        "column": 2
      },
      "end": {
        "line": 64,
        "column": 3
      }
    }
  },
  "properties": {
    "appearance": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "appearance",
      "propertyType": "new",
      "refine": true,
      "defaultValue": "scrollarea",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "scrollbarX": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The policy, when the horizontal scrollbar should be shown.\n<ul>\n<li><b>auto</b>: Show scrollbar on demand</li>\n<li><b>on</b>: Always show the scrollbar</li>\n<li><b>off</b>: Never show the scrollbar</li>\n</ul>"
          }
        ]
      },
      "name": "scrollbarX",
      "propertyType": "new",
      "themeable": true,
      "apply": "_updateScrollbars",
      "possibleValues": [
        "auto",
        "on",
        "off"
      ],
      "defaultValue": "auto"
    },
    "scrollbarY": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The policy, when the horizontal scrollbar should be shown.\n<ul>\n<li><b>auto</b>: Show scrollbar on demand</li>\n<li><b>on</b>: Always show the scrollbar</li>\n<li><b>off</b>: Never show the scrollbar</li>\n</ul>"
          }
        ]
      },
      "name": "scrollbarY",
      "propertyType": "new",
      "themeable": true,
      "apply": "_updateScrollbars",
      "possibleValues": [
        "auto",
        "on",
        "off"
      ],
      "defaultValue": "auto"
    },
    "scrollbar": {
      "location": {
        "start": {
          "line": 113,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Group property, to set the overflow of both scroll bars."
          }
        ]
      },
      "name": "scrollbar",
      "propertyType": "new"
    }
  },
  "members": {
    "__iframeSize": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__iframeObserverId": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getIframeElement": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.html.Iframe} the iframe element wrapper",
            "type": "qx.html.Iframe",
            "desc": " the iframe element wrapper"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.embed.AbstractIframe",
      "appearsIn": [
        "qx.ui.embed.AbstractIframe"
      ]
    },
    "_createChildControlImpl": {
      "location": {
        "start": {
          "line": 132,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "paramName": "id",
            "description": " ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "hash {String?undefined} If a child control name contains a #,\nall text following the # will be the hash argument.",
            "paramName": "hash",
            "description": " If a child control name contains a #,\nall text following the # will be the hash argument.",
            "optional": true,
            "defaultValue": "undefined",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The created control or <code>null</code>",
            "type": "qx.ui.core.Widget",
            "desc": " The created control or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_onIframeLoad": {
      "location": {
        "start": {
          "line": 191,
          "column": 4
        },
        "end": {
          "line": 202,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT LISTENERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Event handler for the iframe's load event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onIframeResize": {
      "location": {
        "start": {
          "line": 208,
          "column": 4
        },
        "end": {
          "line": 210,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for resize event of the iframe widget."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_disableScollbars": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 223,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Hide all scrollbars and stop observing the iframe document"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_addRollListener": {
      "location": {
        "start": {
          "line": 229,
          "column": 4
        },
        "end": {
          "line": 239,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Attach roll listener to the iframe"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_startIframeObserver": {
      "location": {
        "start": {
          "line": 245,
          "column": 4
        },
        "end": {
          "line": 253,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Start observing size changes of the iframe document"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_stopIframeObserver": {
      "location": {
        "start": {
          "line": 259,
          "column": 4
        },
        "end": {
          "line": 269,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Stop observing size changes of the iframe document"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onIframeObserverInterval": {
      "location": {
        "start": {
          "line": 275,
          "column": 4
        },
        "end": {
          "line": 295,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler, which is called periodically to update the scroll bars"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_preventIframeScrolling": {
      "location": {
        "start": {
          "line": 301,
          "column": 4
        },
        "end": {
          "line": 315,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Try to hide native scrollbars in the iframe"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_updateScrollbars": {
      "location": {
        "start": {
          "line": 322,
          "column": 4
        },
        "end": {
          "line": 385,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Recompute scrollbar visibility and positions based on the iframe's\ndocument size"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getIframeSize": {
      "location": {
        "start": {
          "line": 393,
          "column": 4
        },
        "end": {
          "line": 408,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Compute the size of the iframe body"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object|null} A map with the body size or <code>null</code>.",
            "type": "Object|null",
            "desc": " A map with the body size or <code>null</code>."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_updateCornerWidget": {
      "location": {
        "start": {
          "line": 415,
          "column": 4
        },
        "end": {
          "line": 425,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Update visibility of the corner widget based on the visibility of the\nscrollbars"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_configureScrollbar": {
      "location": {
        "start": {
          "line": 437,
          "column": 4
        },
        "end": {
          "line": 465,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Configures the given scrollbar"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "scrollbarId {String} child control id of the scrollbar to\nconfigure",
            "paramName": "scrollbarId",
            "description": " child control id of the scrollbar to\nconfigure",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "show {Boolean} whether the scrollbar should be visible",
            "paramName": "show",
            "description": " whether the scrollbar should be visible",
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "containerSize {Integer} size of the container widget",
            "paramName": "containerSize",
            "description": " size of the container widget",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "contentSize {Integer} size of the iframe's document",
            "paramName": "contentSize",
            "description": " size of the iframe's document",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onScrollBarX": {
      "location": {
        "start": {
          "line": 473,
          "column": 4
        },
        "end": {
          "line": 475,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the scroll event of the horizontal scrollbar"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The scroll event object",
            "paramName": "e",
            "description": " The scroll event object",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onScrollBarY": {
      "location": {
        "start": {
          "line": 483,
          "column": 4
        },
        "end": {
          "line": 485,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event handler for the scroll event of the vertical scrollbar"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Data} The scroll event object",
            "paramName": "e",
            "description": " The scroll event object",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "scrollToX": {
      "location": {
        "start": {
          "line": 493,
          "column": 4
        },
        "end": {
          "line": 502,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the iframe's content to the given left coordinate"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "x {Integer} The vertical position to scroll to.",
            "paramName": "x",
            "description": " The vertical position to scroll to.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollToY": {
      "location": {
        "start": {
          "line": 510,
          "column": 4
        },
        "end": {
          "line": 519,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the iframe's content to the given top coordinate"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "y {Integer} The horizontal position to scroll to.",
            "paramName": "y",
            "description": " The horizontal position to scroll to.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_addRollHandling": {
      "type": "function",
      "name": "_addRollHandling",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.scroll.MRoll"
    },
    "_removeRollHandling": {
      "type": "function",
      "name": "_removeRollHandling",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.scroll.MRoll"
    },
    "_onPointerDownForRoll": {
      "type": "function",
      "name": "_onPointerDownForRoll",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.scroll.MRoll",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the pointerdown event which simply stops the momentum scrolling."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerdown event",
            "paramName": "e",
            "description": " pointerdown event",
            "type": "qx.event.type.Pointer"
          }
        ]
      }
    },
    "_onRoll": {
      "type": "function",
      "name": "_onRoll",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.core.scroll.MRoll",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Roll event handler"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} Roll event",
            "paramName": "e",
            "description": " Roll event",
            "type": "qx.event.type.Roll"
          }
        ]
      }
    },
    "getSource": {
      "type": "function",
      "name": "getSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSource": {
      "type": "function",
      "name": "setSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSource": {
      "type": "function",
      "name": "resetSource",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getFrameName": {
      "type": "function",
      "name": "getFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setFrameName": {
      "type": "function",
      "name": "setFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetFrameName": {
      "type": "function",
      "name": "resetFrameName",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getScrollbarX": {
      "type": "function",
      "name": "getScrollbarX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setScrollbarX": {
      "type": "function",
      "name": "setScrollbarX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetScrollbarX": {
      "type": "function",
      "name": "resetScrollbarX",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getScrollbarY": {
      "type": "function",
      "name": "getScrollbarY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setScrollbarY": {
      "type": "function",
      "name": "setScrollbarY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetScrollbarY": {
      "type": "function",
      "name": "resetScrollbarY",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getScrollbar": {
      "type": "function",
      "name": "getScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setScrollbar": {
      "type": "function",
      "name": "setScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetScrollbar": {
      "type": "function",
      "name": "resetScrollbar",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 523,
        "column": 2
      },
      "end": {
        "line": 527,
        "column": 3
      }
    }
  },
  "descendants": []
}