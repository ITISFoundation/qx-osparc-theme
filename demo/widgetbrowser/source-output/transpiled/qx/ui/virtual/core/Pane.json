{
  "className": "qx.ui.virtual.core.Pane",
  "packageName": "qx.ui.virtual.core",
  "name": "Pane",
  "superClass": "qx.ui.core.Widget",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 980,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nFabian Jakobs (fjakobs)\nJonathan Wei√ü (jonathan_rass)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "EXPERIMENTAL!\n\nThe Pane provides a window of a larger virtual grid.\n\nThe actual rendering is performed by one or several layers ({@link ILayer}.\nThe pane computes, which cells of the virtual area is visible and instructs\nthe layers to render these cells."
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 40,
        "column": 2
      },
      "end": {
        "line": 75,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "rowCount {Integer?0} The number of rows of the virtual grid.",
          "paramName": "rowCount",
          "description": " The number of rows of the virtual grid.",
          "optional": true,
          "defaultValue": "0",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "columnCount {Integer?0} The number of columns of the virtual grid.",
          "paramName": "columnCount",
          "description": " The number of columns of the virtual grid.",
          "optional": true,
          "defaultValue": "0",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "cellHeight {Integer?10} The default cell height.",
          "paramName": "cellHeight",
          "description": " The default cell height.",
          "optional": true,
          "defaultValue": "10",
          "type": "Integer"
        },
        {
          "name": "@param",
          "body": "cellWidth {Integer?10} The default cell width.",
          "paramName": "cellWidth",
          "description": " The default cell width.",
          "optional": true,
          "defaultValue": "10",
          "type": "Integer"
        }
      ]
    }
  },
  "properties": {
    "width": {
      "location": {
        "start": {
          "line": 103,
          "column": 4
        },
        "end": {
          "line": 107,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "width",
      "propertyType": "new",
      "refine": true,
      "defaultValue": 400,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    },
    "height": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 115,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "height",
      "propertyType": "new",
      "refine": true,
      "defaultValue": 300,
      "overriddenFrom": "qx.ui.core.LayoutItem",
      "appearsIn": {
        "qx.ui.core.LayoutItem": "class"
      }
    }
  },
  "members": {
    "__rowConfig": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 121,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__columnConfig": {
      "location": {
        "start": {
          "line": 122,
          "column": 4
        },
        "end": {
          "line": 122,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scrollTop": {
      "location": {
        "start": {
          "line": 123,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scrollLeft": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__paneHeight": {
      "location": {
        "start": {
          "line": 125,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__paneWidth": {
      "location": {
        "start": {
          "line": 126,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__layerWindow": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 127,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__jobs": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 128,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__layerContainer": {
      "location": {
        "start": {
          "line": 129,
          "column": 4
        },
        "end": {
          "line": 129,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__layers": {
      "location": {
        "start": {
          "line": 130,
          "column": 4
        },
        "end": {
          "line": 130,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dontFireUpdate": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__columnSizes": {
      "location": {
        "start": {
          "line": 132,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__rowSizes": {
      "location": {
        "start": {
          "line": 133,
          "column": 4
        },
        "end": {
          "line": 133,
          "column": 21
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__pointerDownCoords": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getRowConfig": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nACCESSOR METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Get the axis object, which defines the row numbers and the row sizes."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Axis} The row configuration.",
            "type": "qx.ui.virtual.core.Axis",
            "desc": " The row configuration."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getColumnConfig": {
      "location": {
        "start": {
          "line": 159,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get the axis object, which defines the column numbers and the column sizes."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Axis} The column configuration.",
            "type": "qx.ui.virtual.core.Axis",
            "desc": " The column configuration."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getChildren": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 178,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nLAYER MANAGEMENT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Returns an array containing the layer container."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]} The layer container array.",
            "type": "Object[]",
            "desc": " The layer container array."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addLayer": {
      "location": {
        "start": {
          "line": 186,
          "column": 4
        },
        "end": {
          "line": 195,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Add a layer to the layer container."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "layer {ILayer} The layer to add.",
            "paramName": "layer",
            "description": " The layer to add.",
            "type": "qx.ui.virtual.core.ILayer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLayers": {
      "location": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a list of all layers."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{ILayer[]} List of the pane's layers.",
            "type": "ILayer[]",
            "desc": " List of the pane's layers."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getVisibleLayers": {
      "location": {
        "start": {
          "line": 213,
          "column": 4
        },
        "end": {
          "line": 224,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Get a list of all visible layers."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{ILayer[]} List of the pane's visible layers.",
            "type": "ILayer[]",
            "desc": " List of the pane's visible layers."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollMaxX": {
      "location": {
        "start": {
          "line": 239,
          "column": 4
        },
        "end": {
          "line": 248,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nSCROLL SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "The maximum horizontal scroll position."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Maximum horizontal scroll position.",
            "type": "Integer",
            "desc": " Maximum horizontal scroll position."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollMaxY": {
      "location": {
        "start": {
          "line": 256,
          "column": 4
        },
        "end": {
          "line": 265,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The maximum vertical scroll position."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} Maximum vertical scroll position.",
            "type": "Integer",
            "desc": " Maximum vertical scroll position."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setScrollY": {
      "location": {
        "start": {
          "line": 273,
          "column": 4
        },
        "end": {
          "line": 290,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the content to the given left coordinate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} The vertical position to scroll to.",
            "paramName": "value",
            "description": " The vertical position to scroll to.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollY": {
      "location": {
        "start": {
          "line": 298,
          "column": 4
        },
        "end": {
          "line": 300,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the vertical scroll offset."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The vertical scroll offset.",
            "type": "Integer",
            "desc": " The vertical scroll offset."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setScrollX": {
      "location": {
        "start": {
          "line": 308,
          "column": 4
        },
        "end": {
          "line": 326,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls the content to the given top coordinate."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {Integer} The horizontal position to scroll to.",
            "paramName": "value",
            "description": " The horizontal position to scroll to.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollX": {
      "location": {
        "start": {
          "line": 334,
          "column": 4
        },
        "end": {
          "line": 336,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the horizontal scroll offset."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer} The horizontal scroll offset.",
            "type": "Integer",
            "desc": " The horizontal scroll offset."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getScrollSize": {
      "location": {
        "start": {
          "line": 345,
          "column": 4
        },
        "end": {
          "line": 351,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "The (virtual) size of the content."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Size of the content (keys: <code>width</code> and\n<code>height</code>).",
            "type": "Map",
            "desc": " Size of the content (keys: <code>width</code> and\n<code>height</code>)."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollRowIntoView": {
      "location": {
        "start": {
          "line": 366,
          "column": 4
        },
        "end": {
          "line": 390,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nSCROLL INTO VIEW SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Scrolls a row into the visible area of the pane."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The row's index.",
            "paramName": "row",
            "description": " The row's index.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollColumnIntoView": {
      "location": {
        "start": {
          "line": 398,
          "column": 4
        },
        "end": {
          "line": 422,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls a column into the visible area of the pane."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "column {Integer} The column's index.",
            "paramName": "column",
            "description": " The column's index.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scrollCellIntoView": {
      "location": {
        "start": {
          "line": 431,
          "column": 4
        },
        "end": {
          "line": 448,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Scrolls a grid cell into the visible area of the pane."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "row {Integer} The cell's row index.",
            "paramName": "row",
            "description": " The cell's row index.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "column {Integer} The cell's column index.",
            "paramName": "column",
            "description": " The cell's column index.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCellAtPosition": {
      "location": {
        "start": {
          "line": 472,
          "column": 4
        },
        "end": {
          "line": 503,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nCELL SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Get the grid cell at the given absolute document coordinates. This method\ncan be used to convert the pointer position returned by\n{@link qx.event.type.Pointer#getDocumentLeft} and\n{@link qx.event.type.Pointer#getDocumentLeft} into cell coordinates."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "documentX {Integer} The x coordinate relative to the viewport\norigin.",
            "paramName": "documentX",
            "description": " The x coordinate relative to the viewport\norigin.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "documentY {Integer} The y coordinate relative to the viewport\norigin.",
            "paramName": "documentY",
            "description": " The y coordinate relative to the viewport\norigin.",
            "type": "Integer"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map|null} A map containing the <code>row</code> and <code>column</code>\nof the found cell. If the coordinate is outside of the pane's bounds\nor there is no cell at the coordinate <code>null</code> is returned.",
            "type": "Map|null",
            "desc": " A map containing the <code>row</code> and <code>column</code>\nof the found cell. If the coordinate is outside of the pane's bounds\nor there is no cell at the coordinate <code>null</code> is returned."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "prefetchX": {
      "location": {
        "start": {
          "line": 527,
          "column": 4
        },
        "end": {
          "line": 557,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nPREFETCH SUPPORT\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Increase the layers width beyond the needed width to improve\nhorizontal scrolling. The layers are only resized if invisible parts\nleft/right of the pane window are smaller than minLeft/minRight."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "minLeft {Integer} Only prefetch if the invisible part left of the\npane window if smaller than this (pixel) value.",
            "paramName": "minLeft",
            "description": " Only prefetch if the invisible part left of the\npane window if smaller than this (pixel) value.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maxLeft {Integer} The amount of pixel the layers should reach\nleft of the pane window.",
            "paramName": "maxLeft",
            "description": " The amount of pixel the layers should reach\nleft of the pane window.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minRight {Integer} Only prefetch if the invisible part right of the\npane window if smaller than this (pixel) value.",
            "paramName": "minRight",
            "description": " Only prefetch if the invisible part right of the\npane window if smaller than this (pixel) value.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maxRight {Integer} The amount of pixel the layers should reach\nright of the pane window.",
            "paramName": "maxRight",
            "description": " The amount of pixel the layers should reach\nright of the pane window.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "prefetchY": {
      "location": {
        "start": {
          "line": 574,
          "column": 4
        },
        "end": {
          "line": 604,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Increase the layers height beyond the needed height to improve\nvertical scrolling. The layers are only resized if invisible parts\nabove/below the pane window are smaller than minAbove/minBelow."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "minAbove {Integer} Only prefetch if the invisible part above the\npane window if smaller than this (pixel) value.",
            "paramName": "minAbove",
            "description": " Only prefetch if the invisible part above the\npane window if smaller than this (pixel) value.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maxAbove {Integer} The amount of pixel the layers should reach\nabove the pane window.",
            "paramName": "maxAbove",
            "description": " The amount of pixel the layers should reach\nabove the pane window.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minBelow {Integer} Only prefetch if the invisible part below the\npane window if smaller than this (pixel) value.",
            "paramName": "minBelow",
            "description": " Only prefetch if the invisible part below the\npane window if smaller than this (pixel) value.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "maxBelow {Integer} The amount of pixel the layers should reach\nbelow the pane window.",
            "paramName": "maxBelow",
            "description": " The amount of pixel the layers should reach\nbelow the pane window.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onResize": {
      "location": {
        "start": {
          "line": 619,
          "column": 4
        },
        "end": {
          "line": 628,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT LISTENER\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Resize event handler.\n\nUpdates the visible window."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onAppear": {
      "location": {
        "start": {
          "line": 634,
          "column": 4
        },
        "end": {
          "line": 636,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resize event handler. Do a full update on first appear."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onPointerDown": {
      "location": {
        "start": {
          "line": 643,
          "column": 4
        },
        "end": {
          "line": 645,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event listener for pointer down. Remembers cell position to prevent pointer event when cell position change."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The incoming pointer event.",
            "paramName": "e",
            "description": " The incoming pointer event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onTap": {
      "location": {
        "start": {
          "line": 652,
          "column": 4
        },
        "end": {
          "line": 654,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event listener for pointer taps. Fires an cellTap event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The incoming pointer event.",
            "paramName": "e",
            "description": " The incoming pointer event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onContextmenu": {
      "location": {
        "start": {
          "line": 662,
          "column": 4
        },
        "end": {
          "line": 664,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event listener for context menu taps. Fires an cellContextmenu event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The incoming pointer event.",
            "paramName": "e",
            "description": " The incoming pointer event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onDbltap": {
      "location": {
        "start": {
          "line": 672,
          "column": 4
        },
        "end": {
          "line": 674,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Event listener for double taps. Fires an cellDbltap event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The incoming pointer event.",
            "paramName": "e",
            "description": " The incoming pointer event.",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_checkScrollBounds": {
      "location": {
        "start": {
          "line": 681,
          "column": 4
        },
        "end": {
          "line": 696,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Fixed scrollbar position whenever it is out of range\nit can happen when removing an item from the list reducing\nthe max value for scrollY #8976"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__handlePointerCellEvent": {
      "location": {
        "start": {
          "line": 705,
          "column": 4
        },
        "end": {
          "line": 722,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Converts a pointer event into a cell event and fires the cell event if the\npointer is over a cell."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} The pointer event.",
            "paramName": "e",
            "description": " The pointer event.",
            "type": "qx.event.type.Pointer"
          },
          {
            "name": "@param",
            "body": "cellEventType {String} The name of the cell event to fire.",
            "paramName": "cellEventType",
            "description": " The name of the cell event to fire.",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "syncWidget": {
      "location": {
        "start": {
          "line": 733,
          "column": 4
        },
        "end": {
          "line": 743,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nPANE UPDATE\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "jobs {Map} A map of jobs.",
            "paramName": "jobs",
            "description": " A map of jobs.",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_setLayerWindow": {
      "location": {
        "start": {
          "line": 762,
          "column": 4
        },
        "end": {
          "line": 827,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the size of the layers to contain the cells at the pixel position\n\"left/right\" up to \"left+minHeight/right+minHeight\". The offset of the\nlayer container is adjusted to respect the pane's scroll top and scroll\nleft values."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "layers {ILayer[]} List of layers to update.",
            "paramName": "layers",
            "description": " List of layers to update.",
            "type": "ILayer[]"
          },
          {
            "name": "@param",
            "body": "left {Integer} Maximum left pixel coordinate of the layers.",
            "paramName": "left",
            "description": " Maximum left pixel coordinate of the layers.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "top {Integer} Maximum top pixel coordinate of the layers.",
            "paramName": "top",
            "description": " Maximum top pixel coordinate of the layers.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minWidth {Integer} The minimum end coordinate of the layers will\nbe larger than <code>left+minWidth</code>.",
            "paramName": "minWidth",
            "description": " The minimum end coordinate of the layers will\nbe larger than <code>left+minWidth</code>.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "minHeight {Integer} The minimum end coordinate of the layers will\nbe larger than <code>top+minHeight</code>.",
            "paramName": "minHeight",
            "description": " The minimum end coordinate of the layers will\nbe larger than <code>top+minHeight</code>.",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "doFullUpdate {Boolean?false} Whether a full update on the layer\nshould be performed of if only the layer window should be updated.",
            "paramName": "doFullUpdate",
            "description": " Whether a full update on the layer\nshould be performed of if only the layer window should be updated.",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__checkPaneResize": {
      "location": {
        "start": {
          "line": 835,
          "column": 4
        },
        "end": {
          "line": 851,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Check whether the pane was resized and fire an {@link #update} event if\nit was."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "fullUpdate": {
      "location": {
        "start": {
          "line": 857,
          "column": 4
        },
        "end": {
          "line": 861,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Schedule a full update on all visible layers."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isUpdatePending": {
      "location": {
        "start": {
          "line": 869,
          "column": 4
        },
        "end": {
          "line": 871,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Whether a full update is scheduled."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether a full update is scheduled.",
            "type": "Boolean",
            "desc": " Whether a full update is scheduled."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_fullUpdate": {
      "location": {
        "start": {
          "line": 878,
          "column": 4
        },
        "end": {
          "line": 903,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Perform a full update on all visible layers. All cached data will be\ndiscarded."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_deferredUpdateScrollPosition": {
      "location": {
        "start": {
          "line": 910,
          "column": 4
        },
        "end": {
          "line": 914,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Schedule an update the visible window of the grid according to the top\nand left scroll positions."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_updateScrollPosition": {
      "location": {
        "start": {
          "line": 921,
          "column": 4
        },
        "end": {
          "line": 969,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Update the visible window of the grid according to the top and left scroll\npositions."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 973,
        "column": 2
      },
      "end": {
        "line": 979,
        "column": 3
      }
    }
  },
  "descendants": []
}