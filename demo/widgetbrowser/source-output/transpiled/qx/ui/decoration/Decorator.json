{
  "className": "qx.ui.decoration.Decorator",
  "packageName": "qx.ui.decoration",
  "name": "Decorator",
  "superClass": "qx.ui.decoration.Abstract",
  "interfaces": [
    "qx.ui.decoration.IDecorator"
  ],
  "mixins": [
    "qx.ui.decoration.MBackgroundColor",
    "qx.ui.decoration.MBorderRadius",
    "qx.ui.decoration.MBoxShadow",
    "qx.ui.decoration.MDoubleBorder",
    "qx.ui.decoration.MLinearBackgroundGradient",
    "qx.ui.decoration.MBorderImage",
    "qx.ui.decoration.MTransition"
  ],
  "clazz": {
    "location": {
      "start": {
        "line": 32,
        "column": 0
      },
      "end": {
        "line": 204,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2013 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nMartin Wittemann (wittemann)\nDaniel Wagner (danielwagner)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Decorator including all decoration possibilities from mixins:\n\n<ul>\n<li>Background color</li>\n<li>Background image</li>\n<li>Background gradient</li>\n<li>Single and double borders</li>\n<li>Border radius</li>\n<li>Box shadow</li>\n</ul>"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "__initialized": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getPadding": {
      "location": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 72,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the configured padding minus the border width."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map of top, right, bottom and left padding values",
            "type": "Map",
            "desc": " Map of top, right, bottom and left padding values"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "appearsIn": [
        "qx.ui.decoration.IDecorator"
      ]
    },
    "getStyles": {
      "location": {
        "start": {
          "line": 82,
          "column": 4
        },
        "end": {
          "line": 97,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Returns the styles of the decorator as a map with property names written\nin javascript style (e.g. <code>fontWeight</code> instead of <code>font-weight</code>)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "css {Boolean?} <code>true</code> if hyphenated CSS names should be returned.",
            "paramName": "css",
            "description": " <code>true</code> if hyphenated CSS names should be returned.",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} style information",
            "type": "Map",
            "desc": " style information"
          }
        ]
      },
      "type": "function",
      "access": "public",
      "overriddenFrom": "qx.ui.decoration.IDecorator",
      "appearsIn": [
        "qx.ui.decoration.IDecorator"
      ]
    },
    "_getStyles": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 124,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Collects all the style information from the decorators."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} style information",
            "type": "Map",
            "desc": " style information"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getDefaultInsets": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map containing the insets.",
            "type": "Map",
            "desc": " Map containing the insets."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.Abstract",
      "appearsIn": [
        "qx.ui.decoration.Abstract"
      ]
    },
    "_isInitialized": {
      "location": {
        "start": {
          "line": 160,
          "column": 4
        },
        "end": {
          "line": 162,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} True, if the decorator is initialized.",
            "type": "Boolean",
            "desc": " True, if the decorator is initialized."
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.Abstract",
      "appearsIn": [
        "qx.ui.decoration.Abstract"
      ]
    },
    "_getExtendedPropertyValueArrays": {
      "location": {
        "start": {
          "line": 170,
          "column": 4
        },
        "end": {
          "line": 190,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Ensures that every propertyValue specified in propertyNames is an array.\nThe value arrays are extended and repeated to match in length."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "propertyNames {Array} Array containing the propertyNames.",
            "paramName": "propertyNames",
            "description": " Array containing the propertyNames.",
            "type": "Array"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Array} Array containing the extended value arrays.",
            "type": "Array",
            "desc": " Array containing the extended value arrays."
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__extendArray": {
      "location": {
        "start": {
          "line": 197,
          "column": 4
        },
        "end": {
          "line": 202,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Extends an array up to the given length by repeating the elements already present."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "array {Array} Incoming array. Has to contain at least one element.",
            "paramName": "array",
            "description": " Incoming array. Has to contain at least one element.",
            "type": "Array"
          },
          {
            "name": "@param",
            "body": "to {Integer} Desired length. Must be greater than or equal to the the length of arr.",
            "paramName": "to",
            "description": " Desired length. Must be greater than or equal to the the length of arr.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_styleBackgroundColor": {
      "type": "function",
      "name": "_styleBackgroundColor",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBackgroundColor",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds the background-color styles to the given map"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} CSS style map",
            "paramName": "styles",
            "description": " CSS style map",
            "type": "Map"
          }
        ]
      }
    },
    "_applyBackgroundColor": {
      "type": "function",
      "name": "_applyBackgroundColor",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBackgroundColor"
    },
    "getBackgroundColor": {
      "type": "function",
      "name": "getBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundColor": {
      "type": "function",
      "name": "setBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundColor": {
      "type": "function",
      "name": "resetBackgroundColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleBorderRadius": {
      "type": "function",
      "name": "_styleBorderRadius",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBorderRadius",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the border radius styles in place to the\ngiven map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "_applyBorderRadius": {
      "type": "function",
      "name": "_applyBorderRadius",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBorderRadius"
    },
    "getRadiusTopLeft": {
      "type": "function",
      "name": "getRadiusTopLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRadiusTopLeft": {
      "type": "function",
      "name": "setRadiusTopLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRadiusTopLeft": {
      "type": "function",
      "name": "resetRadiusTopLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRadiusTopRight": {
      "type": "function",
      "name": "getRadiusTopRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRadiusTopRight": {
      "type": "function",
      "name": "setRadiusTopRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRadiusTopRight": {
      "type": "function",
      "name": "resetRadiusTopRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRadiusBottomLeft": {
      "type": "function",
      "name": "getRadiusBottomLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRadiusBottomLeft": {
      "type": "function",
      "name": "setRadiusBottomLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRadiusBottomLeft": {
      "type": "function",
      "name": "resetRadiusBottomLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRadiusBottomRight": {
      "type": "function",
      "name": "getRadiusBottomRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRadiusBottomRight": {
      "type": "function",
      "name": "setRadiusBottomRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRadiusBottomRight": {
      "type": "function",
      "name": "resetRadiusBottomRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRadius": {
      "type": "function",
      "name": "getRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRadius": {
      "type": "function",
      "name": "setRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRadius": {
      "type": "function",
      "name": "resetRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleBoxShadow": {
      "type": "function",
      "name": "_styleBoxShadow",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBoxShadow",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the box shadow styles in place to the\ngiven map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "_applyBoxShadow": {
      "type": "function",
      "name": "_applyBoxShadow",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBoxShadow"
    },
    "getShadowHorizontalLength": {
      "type": "function",
      "name": "getShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowHorizontalLength": {
      "type": "function",
      "name": "setShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowHorizontalLength": {
      "type": "function",
      "name": "resetShadowHorizontalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowVerticalLength": {
      "type": "function",
      "name": "getShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowVerticalLength": {
      "type": "function",
      "name": "setShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowVerticalLength": {
      "type": "function",
      "name": "resetShadowVerticalLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowBlurRadius": {
      "type": "function",
      "name": "getShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowBlurRadius": {
      "type": "function",
      "name": "setShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowBlurRadius": {
      "type": "function",
      "name": "resetShadowBlurRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowSpreadRadius": {
      "type": "function",
      "name": "getShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowSpreadRadius": {
      "type": "function",
      "name": "setShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowSpreadRadius": {
      "type": "function",
      "name": "resetShadowSpreadRadius",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowColor": {
      "type": "function",
      "name": "getShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowColor": {
      "type": "function",
      "name": "setShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowColor": {
      "type": "function",
      "name": "resetShadowColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInset": {
      "type": "function",
      "name": "getInset",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInset": {
      "type": "function",
      "name": "setInset",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInset": {
      "type": "function",
      "name": "resetInset",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getShadowLength": {
      "type": "function",
      "name": "getShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setShadowLength": {
      "type": "function",
      "name": "setShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetShadowLength": {
      "type": "function",
      "name": "resetShadowLength",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "__styleDoubleBorder": {
      "type": "function",
      "name": "__styleDoubleBorder",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MDoubleBorder",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the outer border styles in place\nto the given map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "__processInnerOpacity": {
      "type": "function",
      "name": "__processInnerOpacity",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MDoubleBorder",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Converts the inner border's colors to rgba."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "innerColor {Map} map of top, right, bottom and left colors",
            "paramName": "innerColor",
            "description": " map of top, right, bottom and left colors",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "innerOpacity {Number} alpha value",
            "paramName": "innerOpacity",
            "description": " alpha value",
            "type": "Number"
          }
        ]
      }
    },
    "_applyDoubleBorder": {
      "type": "function",
      "name": "_applyDoubleBorder",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MDoubleBorder"
    },
    "__getDefaultInsetsForDoubleBorder": {
      "type": "function",
      "name": "__getDefaultInsetsForDoubleBorder",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MDoubleBorder",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Implementation of the interface for the double border."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing the default insets.\n(top, right, bottom, left)",
            "type": "Map",
            "desc": " A map containing the default insets.\n(top, right, bottom, left)"
          }
        ]
      }
    },
    "_styleBorder": {
      "type": "function",
      "name": "_styleBorder",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MSingleBorder",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the border styles styles in place\nto the given map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "_getDefaultInsetsForBorder": {
      "type": "function",
      "name": "_getDefaultInsetsForBorder",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MSingleBorder",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Implementation of the interface for the single border."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} A map containing the default insets.\n(top, right, bottom, left)",
            "type": "Map",
            "desc": " A map containing the default insets.\n(top, right, bottom, left)"
          }
        ]
      }
    },
    "_applyWidth": {
      "type": "function",
      "name": "_applyWidth",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MSingleBorder"
    },
    "_applyStyle": {
      "type": "function",
      "name": "_applyStyle",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MSingleBorder"
    },
    "getWidthTop": {
      "type": "function",
      "name": "getWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWidthTop": {
      "type": "function",
      "name": "setWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWidthTop": {
      "type": "function",
      "name": "resetWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getWidthRight": {
      "type": "function",
      "name": "getWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWidthRight": {
      "type": "function",
      "name": "setWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWidthRight": {
      "type": "function",
      "name": "resetWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getWidthBottom": {
      "type": "function",
      "name": "getWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWidthBottom": {
      "type": "function",
      "name": "setWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWidthBottom": {
      "type": "function",
      "name": "resetWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getWidthLeft": {
      "type": "function",
      "name": "getWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWidthLeft": {
      "type": "function",
      "name": "setWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWidthLeft": {
      "type": "function",
      "name": "resetWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStyleTop": {
      "type": "function",
      "name": "getStyleTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStyleTop": {
      "type": "function",
      "name": "setStyleTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStyleTop": {
      "type": "function",
      "name": "resetStyleTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStyleRight": {
      "type": "function",
      "name": "getStyleRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStyleRight": {
      "type": "function",
      "name": "setStyleRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStyleRight": {
      "type": "function",
      "name": "resetStyleRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStyleBottom": {
      "type": "function",
      "name": "getStyleBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStyleBottom": {
      "type": "function",
      "name": "setStyleBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStyleBottom": {
      "type": "function",
      "name": "resetStyleBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStyleLeft": {
      "type": "function",
      "name": "getStyleLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStyleLeft": {
      "type": "function",
      "name": "setStyleLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStyleLeft": {
      "type": "function",
      "name": "resetStyleLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorTop": {
      "type": "function",
      "name": "getColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorTop": {
      "type": "function",
      "name": "setColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorTop": {
      "type": "function",
      "name": "resetColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorRight": {
      "type": "function",
      "name": "getColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorRight": {
      "type": "function",
      "name": "setColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorRight": {
      "type": "function",
      "name": "resetColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorBottom": {
      "type": "function",
      "name": "getColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorBottom": {
      "type": "function",
      "name": "setColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorBottom": {
      "type": "function",
      "name": "resetColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorLeft": {
      "type": "function",
      "name": "getColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorLeft": {
      "type": "function",
      "name": "setColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorLeft": {
      "type": "function",
      "name": "resetColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getLeft": {
      "type": "function",
      "name": "getLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setLeft": {
      "type": "function",
      "name": "setLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetLeft": {
      "type": "function",
      "name": "resetLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRight": {
      "type": "function",
      "name": "getRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRight": {
      "type": "function",
      "name": "setRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRight": {
      "type": "function",
      "name": "resetRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTop": {
      "type": "function",
      "name": "getTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTop": {
      "type": "function",
      "name": "setTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTop": {
      "type": "function",
      "name": "resetTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBottom": {
      "type": "function",
      "name": "getBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBottom": {
      "type": "function",
      "name": "setBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBottom": {
      "type": "function",
      "name": "resetBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getWidth": {
      "type": "function",
      "name": "getWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setWidth": {
      "type": "function",
      "name": "setWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetWidth": {
      "type": "function",
      "name": "resetWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStyle": {
      "type": "function",
      "name": "getStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStyle": {
      "type": "function",
      "name": "setStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStyle": {
      "type": "function",
      "name": "resetStyle",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColor": {
      "type": "function",
      "name": "getColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColor": {
      "type": "function",
      "name": "setColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColor": {
      "type": "function",
      "name": "resetColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleBackgroundImage": {
      "type": "function",
      "name": "_styleBackgroundImage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBackgroundImage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds the background-image styles to the given map"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} CSS style map",
            "paramName": "styles",
            "description": " CSS style map",
            "type": "Map"
          }
        ]
      }
    },
    "_applyBackgroundImage": {
      "type": "function",
      "name": "_applyBackgroundImage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBackgroundImage"
    },
    "_applyBackgroundPosition": {
      "type": "function",
      "name": "_applyBackgroundPosition",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBackgroundImage"
    },
    "getBackgroundImage": {
      "type": "function",
      "name": "getBackgroundImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundImage": {
      "type": "function",
      "name": "setBackgroundImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundImage": {
      "type": "function",
      "name": "resetBackgroundImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBackgroundRepeat": {
      "type": "function",
      "name": "getBackgroundRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundRepeat": {
      "type": "function",
      "name": "setBackgroundRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundRepeat": {
      "type": "function",
      "name": "resetBackgroundRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBackgroundPositionX": {
      "type": "function",
      "name": "getBackgroundPositionX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundPositionX": {
      "type": "function",
      "name": "setBackgroundPositionX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundPositionX": {
      "type": "function",
      "name": "resetBackgroundPositionX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBackgroundPositionY": {
      "type": "function",
      "name": "getBackgroundPositionY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundPositionY": {
      "type": "function",
      "name": "setBackgroundPositionY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundPositionY": {
      "type": "function",
      "name": "resetBackgroundPositionY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBackgroundOrigin": {
      "type": "function",
      "name": "getBackgroundOrigin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundOrigin": {
      "type": "function",
      "name": "setBackgroundOrigin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundOrigin": {
      "type": "function",
      "name": "resetBackgroundOrigin",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBackgroundPosition": {
      "type": "function",
      "name": "getBackgroundPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBackgroundPosition": {
      "type": "function",
      "name": "setBackgroundPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBackgroundPosition": {
      "type": "function",
      "name": "resetBackgroundPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getOrderGradientsFront": {
      "type": "function",
      "name": "getOrderGradientsFront",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isOrderGradientsFront": {
      "type": "function",
      "name": "isOrderGradientsFront",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setOrderGradientsFront": {
      "type": "function",
      "name": "setOrderGradientsFront",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetOrderGradientsFront": {
      "type": "function",
      "name": "resetOrderGradientsFront",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerWidthTop": {
      "type": "function",
      "name": "getInnerWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerWidthTop": {
      "type": "function",
      "name": "setInnerWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerWidthTop": {
      "type": "function",
      "name": "resetInnerWidthTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerWidthRight": {
      "type": "function",
      "name": "getInnerWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerWidthRight": {
      "type": "function",
      "name": "setInnerWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerWidthRight": {
      "type": "function",
      "name": "resetInnerWidthRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerWidthBottom": {
      "type": "function",
      "name": "getInnerWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerWidthBottom": {
      "type": "function",
      "name": "setInnerWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerWidthBottom": {
      "type": "function",
      "name": "resetInnerWidthBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerWidthLeft": {
      "type": "function",
      "name": "getInnerWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerWidthLeft": {
      "type": "function",
      "name": "setInnerWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerWidthLeft": {
      "type": "function",
      "name": "resetInnerWidthLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerWidth": {
      "type": "function",
      "name": "getInnerWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerWidth": {
      "type": "function",
      "name": "setInnerWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerWidth": {
      "type": "function",
      "name": "resetInnerWidth",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerColorTop": {
      "type": "function",
      "name": "getInnerColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerColorTop": {
      "type": "function",
      "name": "setInnerColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerColorTop": {
      "type": "function",
      "name": "resetInnerColorTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerColorRight": {
      "type": "function",
      "name": "getInnerColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerColorRight": {
      "type": "function",
      "name": "setInnerColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerColorRight": {
      "type": "function",
      "name": "resetInnerColorRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerColorBottom": {
      "type": "function",
      "name": "getInnerColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerColorBottom": {
      "type": "function",
      "name": "setInnerColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerColorBottom": {
      "type": "function",
      "name": "resetInnerColorBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerColorLeft": {
      "type": "function",
      "name": "getInnerColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Color",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerColorLeft": {
      "type": "function",
      "name": "setInnerColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Color",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerColorLeft": {
      "type": "function",
      "name": "resetInnerColorLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerColor": {
      "type": "function",
      "name": "getInnerColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerColor": {
      "type": "function",
      "name": "setInnerColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerColor": {
      "type": "function",
      "name": "resetInnerColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInnerOpacity": {
      "type": "function",
      "name": "getInnerOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Number",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInnerOpacity": {
      "type": "function",
      "name": "setInnerOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Number",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInnerOpacity": {
      "type": "function",
      "name": "resetInnerOpacity",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleLinearBackgroundGradient": {
      "type": "function",
      "name": "_styleLinearBackgroundGradient",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the linear background styles in place to the\ngiven map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "__styleLinearBackgroundGradientForLegacyWebkit": {
      "type": "function",
      "name": "__styleLinearBackgroundGradientForLegacyWebkit",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Compute CSS rules to style the background with gradients.\nThis can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\nLegacy implementation for old WebKit browsers (Chrome < 10)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startColor {Color} The color to start the gradient with",
            "paramName": "startColor",
            "description": " The color to start the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "endColor {Color} The color to end the gradient with",
            "paramName": "endColor",
            "description": " The color to end the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "unit {Color} The unit in which startColorPosition and endColorPosition are measured",
            "paramName": "unit",
            "description": " The unit in which startColorPosition and endColorPosition are measured",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "orientation {String} Either 'horizontal' or 'vertical'",
            "paramName": "orientation",
            "description": " Either 'horizontal' or 'vertical'",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "startColorPosition",
            "description": " The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "endColorPosition",
            "description": " The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "paramName": "styles",
            "description": " The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "backgroundStyle {Map} This method should push new background styles onto this array.",
            "paramName": "backgroundStyle",
            "description": " This method should push new background styles onto this array.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether this implementation supports multiple gradients atop each other (true).",
            "type": "Boolean",
            "desc": " Whether this implementation supports multiple gradients atop each other (true)."
          }
        ]
      }
    },
    "__styleLinearBackgroundGradientWithCanvas": {
      "type": "function",
      "name": "__styleLinearBackgroundGradientWithCanvas",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Compute CSS rules to style the background with gradients.\nThis can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\nIE9 canvas solution."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startColor {Color} The color to start the gradient with",
            "paramName": "startColor",
            "description": " The color to start the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "endColor {Color} The color to end the gradient with",
            "paramName": "endColor",
            "description": " The color to end the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "unit {Color} The unit in which startColorPosition and endColorPosition are measured",
            "paramName": "unit",
            "description": " The unit in which startColorPosition and endColorPosition are measured",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "orientation {String} Either 'horizontal' or 'vertical'",
            "paramName": "orientation",
            "description": " Either 'horizontal' or 'vertical'",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "startColorPosition",
            "description": " The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "endColorPosition",
            "description": " The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "paramName": "styles",
            "description": " The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "backgroundStyle {Map} This method should push new background styles onto this array.",
            "paramName": "backgroundStyle",
            "description": " This method should push new background styles onto this array.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether this implementation supports multiple gradients atop each other (true).",
            "type": "Boolean",
            "desc": " Whether this implementation supports multiple gradients atop each other (true)."
          }
        ]
      }
    },
    "__styleLinearBackgroundGradientWithMSFilter": {
      "type": "function",
      "name": "__styleLinearBackgroundGradientWithMSFilter",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Compute CSS rules to style the background with gradients.\nThis can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\nOld IE filter fallback."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startColor {Color} The color to start the gradient with",
            "paramName": "startColor",
            "description": " The color to start the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "endColor {Color} The color to end the gradient with",
            "paramName": "endColor",
            "description": " The color to end the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "unit {Color} The unit in which startColorPosition and endColorPosition are measured",
            "paramName": "unit",
            "description": " The unit in which startColorPosition and endColorPosition are measured",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "orientation {String} Either 'horizontal' or 'vertical'",
            "paramName": "orientation",
            "description": " Either 'horizontal' or 'vertical'",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "startColorPosition",
            "description": " The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "endColorPosition",
            "description": " The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that). Note: this particular implementation will do that because it needs to change the `filter` property.",
            "paramName": "styles",
            "description": " The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that). Note: this particular implementation will do that because it needs to change the `filter` property.",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "backgroundStyle {Map} This method should push new background styles onto this array.",
            "paramName": "backgroundStyle",
            "description": " This method should push new background styles onto this array.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether this implementation supports multiple gradients atop each other (false).",
            "type": "Boolean",
            "desc": " Whether this implementation supports multiple gradients atop each other (false)."
          }
        ]
      }
    },
    "__styleLinearBackgroundGradientAccordingToSpec": {
      "type": "function",
      "name": "__styleLinearBackgroundGradientAccordingToSpec",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Compute CSS rules to style the background with gradients.\nThis can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\nDefault implementation (uses spec-compliant syntax)."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "startColor {Color} The color to start the gradient with",
            "paramName": "startColor",
            "description": " The color to start the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "endColor {Color} The color to end the gradient with",
            "paramName": "endColor",
            "description": " The color to end the gradient with",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "unit {Color} The unit in which startColorPosition and endColorPosition are measured",
            "paramName": "unit",
            "description": " The unit in which startColorPosition and endColorPosition are measured",
            "type": "Color"
          },
          {
            "name": "@param",
            "body": "orientation {String} Either 'horizontal' or 'vertical'",
            "paramName": "orientation",
            "description": " Either 'horizontal' or 'vertical'",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "startColorPosition",
            "description": " The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "paramName": "endColorPosition",
            "description": " The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "paramName": "styles",
            "description": " The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)",
            "type": "Map"
          },
          {
            "name": "@param",
            "body": "backgroundStyle {Map} This method should push new background styles onto this array.",
            "paramName": "backgroundStyle",
            "description": " This method should push new background styles onto this array.",
            "type": "Map"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} Whether this implementation supports multiple gradients atop each other (true).",
            "type": "Boolean",
            "desc": " Whether this implementation supports multiple gradients atop each other (true)."
          }
        ]
      }
    },
    "__getColor": {
      "type": "function",
      "name": "__getColor",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper to get a resolved color from a name"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "color {String} The color name",
            "paramName": "color",
            "description": " The color name",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The resolved color",
            "type": "Map",
            "desc": " The resolved color"
          }
        ]
      }
    },
    "_applyLinearBackgroundGradient": {
      "type": "function",
      "name": "_applyLinearBackgroundGradient",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MLinearBackgroundGradient"
    },
    "getStartColor": {
      "type": "function",
      "name": "getStartColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStartColor": {
      "type": "function",
      "name": "setStartColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStartColor": {
      "type": "function",
      "name": "resetStartColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getEndColor": {
      "type": "function",
      "name": "getEndColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setEndColor": {
      "type": "function",
      "name": "setEndColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetEndColor": {
      "type": "function",
      "name": "resetEndColor",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getOrientation": {
      "type": "function",
      "name": "getOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setOrientation": {
      "type": "function",
      "name": "setOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetOrientation": {
      "type": "function",
      "name": "resetOrientation",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getStartColorPosition": {
      "type": "function",
      "name": "getStartColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setStartColorPosition": {
      "type": "function",
      "name": "setStartColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetStartColorPosition": {
      "type": "function",
      "name": "resetStartColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getEndColorPosition": {
      "type": "function",
      "name": "getEndColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setEndColorPosition": {
      "type": "function",
      "name": "setEndColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetEndColorPosition": {
      "type": "function",
      "name": "resetEndColorPosition",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getColorPositionUnit": {
      "type": "function",
      "name": "getColorPositionUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setColorPositionUnit": {
      "type": "function",
      "name": "setColorPositionUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetColorPositionUnit": {
      "type": "function",
      "name": "resetColorPositionUnit",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGradientStart": {
      "type": "function",
      "name": "getGradientStart",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGradientStart": {
      "type": "function",
      "name": "setGradientStart",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGradientStart": {
      "type": "function",
      "name": "resetGradientStart",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getGradientEnd": {
      "type": "function",
      "name": "getGradientEnd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setGradientEnd": {
      "type": "function",
      "name": "setGradientEnd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetGradientEnd": {
      "type": "function",
      "name": "resetGradientEnd",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleBorderImage": {
      "type": "function",
      "name": "_styleBorderImage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBorderImage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adds the border-image styles to the given map"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} CSS style map",
            "paramName": "styles",
            "description": " CSS style map",
            "type": "Map"
          }
        ]
      }
    },
    "_getDefaultInsetsForBorderImage": {
      "type": "function",
      "name": "_getDefaultInsetsForBorderImage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBorderImage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Computes the inset values based on the border image slices (defined in the\ndecoration theme or computed from the fallback image sizes)."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} Map with the top, right, bottom and left insets",
            "type": "Map",
            "desc": " Map with the top, right, bottom and left insets"
          }
        ]
      }
    },
    "_applyBorderImage": {
      "type": "function",
      "name": "_applyBorderImage",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MBorderImage"
    },
    "__getSlices": {
      "type": "function",
      "name": "__getSlices",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "private",
      "overriddenFrom": "qx.ui.decoration.MBorderImage",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the slice sizes from the fallback border images."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "baseImage {String} Resource Id of the base border image",
            "paramName": "baseImage",
            "description": " Resource Id of the base border image",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer[]} Array with the top, right, bottom and left slice widths",
            "type": "Integer[]",
            "desc": " Array with the top, right, bottom and left slice widths"
          }
        ]
      }
    },
    "getBorderImage": {
      "type": "function",
      "name": "getBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBorderImage": {
      "type": "function",
      "name": "setBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBorderImage": {
      "type": "function",
      "name": "resetBorderImage",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getSliceTop": {
      "type": "function",
      "name": "getSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSliceTop": {
      "type": "function",
      "name": "setSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSliceTop": {
      "type": "function",
      "name": "resetSliceTop",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getSliceRight": {
      "type": "function",
      "name": "getSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSliceRight": {
      "type": "function",
      "name": "setSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSliceRight": {
      "type": "function",
      "name": "resetSliceRight",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getSliceBottom": {
      "type": "function",
      "name": "getSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSliceBottom": {
      "type": "function",
      "name": "setSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSliceBottom": {
      "type": "function",
      "name": "resetSliceBottom",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getSliceLeft": {
      "type": "function",
      "name": "getSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSliceLeft": {
      "type": "function",
      "name": "setSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSliceLeft": {
      "type": "function",
      "name": "resetSliceLeft",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getSlice": {
      "type": "function",
      "name": "getSlice",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSlice": {
      "type": "function",
      "name": "setSlice",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSlice": {
      "type": "function",
      "name": "resetSlice",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRepeatX": {
      "type": "function",
      "name": "getRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRepeatX": {
      "type": "function",
      "name": "setRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRepeatX": {
      "type": "function",
      "name": "resetRepeatX",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRepeatY": {
      "type": "function",
      "name": "getRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRepeatY": {
      "type": "function",
      "name": "setRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRepeatY": {
      "type": "function",
      "name": "resetRepeatY",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getRepeat": {
      "type": "function",
      "name": "getRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setRepeat": {
      "type": "function",
      "name": "setRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetRepeat": {
      "type": "function",
      "name": "resetRepeat",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getFill": {
      "type": "function",
      "name": "getFill",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isFill": {
      "type": "function",
      "name": "isFill",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setFill": {
      "type": "function",
      "name": "setFill",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetFill": {
      "type": "function",
      "name": "resetFill",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getBorderImageMode": {
      "type": "function",
      "name": "getBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setBorderImageMode": {
      "type": "function",
      "name": "setBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetBorderImageMode": {
      "type": "function",
      "name": "resetBorderImageMode",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "_styleTransition": {
      "type": "function",
      "name": "_styleTransition",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MTransition",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Takes a styles map and adds the box shadow styles in place to the\ngiven map. This is the needed behavior for\n{@link qx.ui.decoration.Decorator}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "styles {Map} A map to add the styles.",
            "paramName": "styles",
            "description": " A map to add the styles.",
            "type": "Map"
          }
        ]
      }
    },
    "_applyTransition": {
      "type": "function",
      "name": "_applyTransition",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "protected",
      "overriddenFrom": "qx.ui.decoration.MTransition"
    },
    "getTransitionProperty": {
      "type": "function",
      "name": "getTransitionProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTransitionProperty": {
      "type": "function",
      "name": "setTransitionProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTransitionProperty": {
      "type": "function",
      "name": "resetTransitionProperty",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTransitionDuration": {
      "type": "function",
      "name": "getTransitionDuration",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTransitionDuration": {
      "type": "function",
      "name": "setTransitionDuration",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTransitionDuration": {
      "type": "function",
      "name": "resetTransitionDuration",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTransitionTimingFunction": {
      "type": "function",
      "name": "getTransitionTimingFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTransitionTimingFunction": {
      "type": "function",
      "name": "setTransitionTimingFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTransitionTimingFunction": {
      "type": "function",
      "name": "resetTransitionTimingFunction",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getTransitionDelay": {
      "type": "function",
      "name": "getTransitionDelay",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setTransitionDelay": {
      "type": "function",
      "name": "setTransitionDelay",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetTransitionDelay": {
      "type": "function",
      "name": "resetTransitionDelay",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "descendants": []
}