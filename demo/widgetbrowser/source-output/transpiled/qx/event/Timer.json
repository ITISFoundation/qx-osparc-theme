{
  "className": "qx.event.Timer",
  "packageName": "qx.event",
  "name": "Timer",
  "superClass": "qx.core.Object",
  "interfaces": [
    "qx.core.IDisposable"
  ],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 332,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "Global timer support.\n\nThis class can be used to periodically fire an event. This event can be\nused to simulate e.g. a background task. The static method\n{@link #once} is a special case. It will call a function deferred after a\ngiven timeout.\n\nNOTE: Instances of this class must be disposed of after use"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 48,
        "column": 2
      },
      "end": {
        "line": 64,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nCONSTRUCTOR\n****************************************************************************"
        },
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "interval {Number} initial interval in milliseconds of the timer.",
          "paramName": "interval",
          "description": " initial interval in milliseconds of the timer.",
          "type": "Number"
        }
      ]
    }
  },
  "properties": {
    "enabled": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 157,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "With the enabled property the Timer can be started and suspended.\nSetting it to \"true\" is equivalent to {@link #start}, setting it\nto \"false\" is equivalent to {@link #stop}."
          }
        ]
      },
      "name": "enabled",
      "propertyType": "new",
      "apply": "_applyEnabled",
      "check": "Boolean",
      "defaultValue": false
    },
    "interval": {
      "location": {
        "start": {
          "line": 164,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Time in milliseconds between two callback calls.\nThis property can be set to modify the interval of\na running timer."
          }
        ]
      },
      "name": "interval",
      "propertyType": "new",
      "apply": "_applyInterval",
      "check": "Integer",
      "defaultValue": 1000
    }
  },
  "members": {
    "__intervalHandler": {
      "location": {
        "start": {
          "line": 183,
          "column": 4
        },
        "end": {
          "line": 183,
          "column": 28
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__oninterval": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 184,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_applyInterval": {
      "location": {
        "start": {
          "line": 200,
          "column": 4
        },
        "end": {
          "line": 205,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Apply the interval of the timer."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "old {var} Previous value",
            "paramName": "old",
            "description": " Previous value",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applyEnabled": {
      "location": {
        "start": {
          "line": 214,
          "column": 4
        },
        "end": {
          "line": 225,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Apply the enabled state of the timer."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {var} Current value",
            "paramName": "value",
            "description": " Current value",
            "type": "var"
          },
          {
            "name": "@param",
            "body": "old {var} Previous value",
            "paramName": "old",
            "description": " Previous value",
            "type": "var"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "start": {
      "location": {
        "start": {
          "line": 240,
          "column": 4
        },
        "end": {
          "line": 242,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nUSER-ACCESS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Start the timer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "startWith": {
      "location": {
        "start": {
          "line": 250,
          "column": 4
        },
        "end": {
          "line": 254,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Start the timer with a given interval"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "interval {Integer} Time in milliseconds between two callback calls.",
            "paramName": "interval",
            "description": " Time in milliseconds between two callback calls.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stop": {
      "location": {
        "start": {
          "line": 261,
          "column": 4
        },
        "end": {
          "line": 263,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Stop the timer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "restart": {
      "location": {
        "start": {
          "line": 271,
          "column": 4
        },
        "end": {
          "line": 275,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Restart the timer.\nThis makes it possible to change the interval of a running timer."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "restartWith": {
      "location": {
        "start": {
          "line": 283,
          "column": 4
        },
        "end": {
          "line": 287,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Restart the timer. with a given interval."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "interval {Integer} Time in milliseconds between two callback calls.",
            "paramName": "interval",
            "description": " Time in milliseconds between two callback calls.",
            "type": "Integer"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_oninterval": {
      "location": {
        "start": {
          "line": 303,
          "column": 4
        },
        "end": {
          "line": 312,
          "column": 6
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT-MAPPER\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "timer callback"
          }
        ],
        "@signature": [
          {
            "name": "@signature",
            "body": "function()"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "getEnabled": {
      "type": "function",
      "name": "getEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "isEnabled": {
      "type": "function",
      "name": "isEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setEnabled": {
      "type": "function",
      "name": "setEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetEnabled": {
      "type": "function",
      "name": "resetEnabled",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    },
    "getInterval": {
      "type": "function",
      "name": "getInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setInterval": {
      "type": "function",
      "name": "setInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetInterval": {
      "type": "function",
      "name": "resetInterval",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 324,
        "column": 2
      },
      "end": {
        "line": 331,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "****************************************************************************\nDESTRUCTOR\n****************************************************************************"
        }
      ]
    }
  },
  "descendants": []
}