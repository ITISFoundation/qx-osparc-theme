{
  "className": "qx.Class",
  "packageName": "qx",
  "name": "Class",
  "superClass": null,
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 77,
        "column": 0
      },
      "end": {
        "line": 1839,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nSebastian Werner (wpbasti)\nAndreas Ecker (ecker)\nJohn Spackman (john.spackman@zenesis.com)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "This class is one of the most important parts of qooxdoo's\nobject-oriented features.\n\nIts {@link #define} method is used to create qooxdoo classes.\n\nEach instance of a class defined by {@link #define} has\nthe following keys attached to the constructor and the prototype:\n\n<table>\n<tr><th><code>classname</code></th><td>The fully-qualified name of the class (e.g. <code>\"qx.ui.core.Widget\"</code>).</td></tr>\n<tr><th><code>basename</code></th><td>The namespace part of the class name (e.g. <code>\"qx.ui.core\"</code>).</td></tr>\n<tr><th><code>constructor</code></th><td>A reference to the constructor of the class.</td></tr>\n<tr><th><code>superclass</code></th><td>A reference to the constructor of the super class.</td></tr>\n</table>\n\nEach method may access static members of the same class by using\n<code>this.self(arguments)</code> ({@link qx.core.Object#self}):\n<pre class='javascript'>\nstatics : { FOO : \"bar\" },\nmembers: {\nbaz: function(x) {\nthis.self(arguments).FOO;\n...\n}\n}\n</pre>\n\nEach overriding method may call the overridden method by using\n<code>this.base(arguments [, ...])</code> ({@link qx.core.Object#base}). This is also true for calling\nthe constructor of the superclass.\n<pre class='javascript'>\nmembers: {\nfoo: function(x) {\nthis.base(arguments, x);\n...\n}\n}\n</pre>\n\nBy using <code>qx.Class</code> within an app, the native JS data types are\nconveniently polyfilled according to {@link qx.lang.normalize}.\n\nAnnotations can be added to classes, constructors, destructors, and methods, properties, and statics -\nsee <code>qx.Annotation</code> for examples and means access annotations at runtime."
        }
      ],
      "@require": [
        {
          "name": "@require",
          "body": "qx.Interface"
        },
        {
          "name": "@require",
          "body": "qx.Mixin"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Array"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Date"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Error"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Function"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.String"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Object"
        },
        {
          "name": "@require",
          "body": "qx.lang.normalize.Number"
        }
      ]
    }
  },
  "type": "class",
  "defer": {
    "location": {
      "start": {
        "line": 1820,
        "column": 2
      },
      "end": {
        "line": 1838,
        "column": 3
      }
    }
  },
  "descendants": []
}