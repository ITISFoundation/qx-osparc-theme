{
  "className": "qx.ui.form.core.VirtualDropDownList",
  "packageName": "qx.ui.form.core",
  "name": "VirtualDropDownList",
  "superClass": "qx.ui.popup.Popup",
  "interfaces": [],
  "mixins": [],
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 496,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "***********************************************************************\n\nqooxdoo - the new era of web development\n\nhttp://qooxdoo.org\n\nCopyright:\n2011 1&1 Internet AG, Germany, http://www.1und1.de\n\nLicense:\nMIT: https://opensource.org/licenses/MIT\nSee the LICENSE file in the project's top-level directory for details.\n\nAuthors:\nChristian Hagendorn (chris_schmidt)\n\n***********************************************************************"
        },
        {
          "name": "@description",
          "body": "A drop-down (popup) widget which contains a virtual list for selection."
        }
      ],
      "@childControl": [
        {
          "name": "@childControl",
          "body": "list {qx.ui.list.List} The virtual list."
        }
      ],
      "@internal": [
        {
          "name": "@internal",
          "body": ""
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 36,
        "column": 2
      },
      "end": {
        "line": 52,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "Creates the drop-down list."
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "target {qx.ui.form.core.AbstractVirtualBox} The composite widget.",
          "paramName": "target",
          "description": " The composite widget.",
          "type": "qx.ui.form.core.AbstractVirtualBox"
        }
      ]
    }
  },
  "properties": {
    "autoHide": {
      "location": {
        "start": {
          "line": 58,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "autoHide",
      "propertyType": "new",
      "refine": true,
      "defaultValue": false,
      "overriddenFrom": "qx.ui.popup.Popup",
      "appearsIn": {
        "qx.ui.popup.Popup": "class"
      }
    },
    "keepActive": {
      "location": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "overridden"
          }
        ]
      },
      "name": "keepActive",
      "propertyType": "new",
      "refine": true,
      "defaultValue": true,
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": {
        "qx.ui.core.Widget": "class"
      }
    },
    "selection": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Current selected items."
          }
        ]
      },
      "name": "selection",
      "propertyType": "new",
      "event": "changeSelection",
      "apply": "_applySelection",
      "allowNull": false,
      "check": "qx.data.Array"
    }
  },
  "members": {
    "_target": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 101,
          "column": 18
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.ui.form.core.AbstractVirtualBox} The composite widget."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_preselected": {
      "location": {
        "start": {
          "line": 105,
          "column": 4
        },
        "end": {
          "line": 105,
          "column": 23
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{var} The pre-selected model item."
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__ignoreSelection": {
      "location": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 112,
          "column": 29
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Indicator to ignore selection changes from the\n{@link #selection} array."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__ignoreListSelection": {
      "location": {
        "start": {
          "line": 116,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 33
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Indicator to ignore selection changes from the list."
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__defaultSelection": {
      "location": {
        "start": {
          "line": 119,
          "column": 4
        },
        "end": {
          "line": 119,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "open": {
      "location": {
        "start": {
          "line": 132,
          "column": 4
        },
        "end": {
          "line": 136,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nPUBLIC API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Shows the drop-down."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "close": {
      "location": {
        "start": {
          "line": 142,
          "column": 4
        },
        "end": {
          "line": 144,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Hides the drop-down."
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setPreselected": {
      "location": {
        "start": {
          "line": 152,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Pre-selects the drop-down item corresponding to the given model object."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "modelItem {Object} Item to be pre-selected.",
            "paramName": "modelItem",
            "description": " Item to be pre-selected.",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_createChildControlImpl": {
      "location": {
        "start": {
          "line": 172,
          "column": 4
        },
        "end": {
          "line": 201,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nINTERNAL API\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "overridden"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "id {String} ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "paramName": "id",
            "description": " ID of the child control. If a # is used, the id is\nthe part in front of the #.",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "hash {String?undefined} If a child control name contains a #,\nall text following the # will be the hash argument.",
            "paramName": "hash",
            "description": " If a child control name contains a #,\nall text following the # will be the hash argument.",
            "optional": true,
            "defaultValue": "undefined",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.core.Widget} The created control or <code>null</code>",
            "type": "qx.ui.core.Widget",
            "desc": " The created control or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "overriddenFrom": "qx.ui.core.Widget",
      "appearsIn": [
        "qx.ui.core.Widget"
      ]
    },
    "_handleKeyboard": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 228,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nEVENT LISTENERS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Handles the complete keyboard events dispatched on the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.KeySequence} The keyboard event.",
            "paramName": "event",
            "description": " The keyboard event.",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_handlePointer": {
      "location": {
        "start": {
          "line": 236,
          "column": 4
        },
        "end": {
          "line": 238,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handles all mouse events dispatched on the widget."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Mouse} The mouse event.",
            "paramName": "event",
            "description": " The mouse event.",
            "type": "qx.event.type.Mouse"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onChangeSelection": {
      "location": {
        "start": {
          "line": 248,
          "column": 4
        },
        "end": {
          "line": 264,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the local selection change. The method is responsible for\nthe synchronization between the own selection and the selection\nform the drop-down."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The data event.",
            "paramName": "event",
            "description": " The data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onListChangeSelection": {
      "location": {
        "start": {
          "line": 273,
          "column": 4
        },
        "end": {
          "line": 288,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the selection change on the list. The method is responsible\nfor the synchronization between the list selection and the own selection."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The data event.",
            "paramName": "event",
            "description": " The data event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__onChangeVisibility": {
      "location": {
        "start": {
          "line": 297,
          "column": 4
        },
        "end": {
          "line": 311,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the own visibility changes. The method is responsible that\nthe list selects the current selected item."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The event.",
            "paramName": "event",
            "description": " The event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onChangeModel": {
      "location": {
        "start": {
          "line": 319,
          "column": 4
        },
        "end": {
          "line": 320,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the model change event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The change event.",
            "paramName": "event",
            "description": " The change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onChangeDelegate": {
      "location": {
        "start": {
          "line": 328,
          "column": 4
        },
        "end": {
          "line": 330,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Handler for the delegate change event."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "event {qx.event.type.Data} The change event.",
            "paramName": "event",
            "description": " The change event.",
            "type": "qx.event.type.Data"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_applySelection": {
      "location": {
        "start": {
          "line": 341,
          "column": 4
        },
        "end": {
          "line": 352,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nAPPLY ROUTINES\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "property apply"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__selectPreselected": {
      "location": {
        "start": {
          "line": 366,
          "column": 4
        },
        "end": {
          "line": 375,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "---------------------------------------------------------------------------\nHELPER METHODS\n---------------------------------------------------------------------------"
          },
          {
            "name": "@description",
            "body": "Helper method to select the current preselected item, also closes the\ndrop-down."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__synchronizeSelection": {
      "location": {
        "start": {
          "line": 385,
          "column": 4
        },
        "end": {
          "line": 405,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Helper method to synchronize both selection. The target selection has\nthe same selection like the source selection after the synchronization."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "source {qx.data.Array} The source selection.",
            "paramName": "source",
            "description": " The source selection.",
            "type": "qx.data.Array"
          },
          {
            "name": "@param",
            "body": "target {qx.data.Array} The target selection.",
            "paramName": "target",
            "description": " The target selection.",
            "type": "qx.data.Array"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__adjustSize": {
      "location": {
        "start": {
          "line": 412,
          "column": 4
        },
        "end": {
          "line": 421,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adjust the drop-down to the available width and height, by calling\n{@link #__adjustWidth} and {@link #__adjustHeight}."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__adjustWidth": {
      "location": {
        "start": {
          "line": 428,
          "column": 4
        },
        "end": {
          "line": 432,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adjust the drop-down to the available width. The width is limited by\nthe current with from the _target."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__adjustHeight": {
      "location": {
        "start": {
          "line": 440,
          "column": 4
        },
        "end": {
          "line": 465,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Adjust the drop-down to the available height. Ensure that the list\nis never bigger that the max list height and the available space\nin the viewport."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__getAvailableHeight": {
      "location": {
        "start": {
          "line": 473,
          "column": 4
        },
        "end": {
          "line": 487,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Calculates the available height in the viewport."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Integer|null} Available height in the viewport.",
            "type": "Integer|null",
            "desc": " Available height in the viewport."
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getSelection": {
      "type": "function",
      "name": "getSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@return": [
          {
            "name": "@return",
            "type": "qx.data.Array",
            "desc": "Returns the value for undefined"
          }
        ]
      }
    },
    "setSelection": {
      "type": "function",
      "name": "setSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@param": [
          {
            "name": "@param",
            "type": "qx.data.Array",
            "paramName": "value",
            "desc": "Value for undefined"
          }
        ]
      }
    },
    "resetSelection": {
      "type": "function",
      "name": "resetSelection",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {}
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 490,
        "column": 2
      },
      "end": {
        "line": 495,
        "column": 3
      }
    }
  },
  "descendants": []
}